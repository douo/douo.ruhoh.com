<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>DouO's Blog</title>
    <link>http://douo.ruhoh.com</link>
    <pubDate>Sun, 16 Sep 2012 23:00:08 -0500</pubDate>
    <item>
      <title>&#x5173;&#x4E8E;ruhoh&#x7684;&#x4E00;&#x4E9B;&#x8BB0;&#x5F55;</title>
      <link>http://douo.ruhoh.com/2012/08/20/something-about-ruhoh</link>
      <pubDate>Mon, 20 Aug 2012 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<h3 id="toc_0">ruhoh</h3>

<p>这里也许会成为我第一篇ruhoh的博客，先罗列一下常用的命令吧。</p>

<pre><code>rackup -p 9292  # 启动 web 服务在 9292 端口
ruhoh page about.md  #创建一个页面，支持子目录 
ruhoh post &quot;The Greatest Post Ever&quot; #通过标题创建文章，将会生成 the-greatest-post-ever.md
ruhoh draft #快速建立一个草稿，生成untitled-draft-1.md 
ruhoh titleize #快速为草稿文件命名
</code></pre>

<p>后台</p>

<pre><code>http://localhost:9292/dash
</code></pre>

<p>将 ruhoh 打造成一个个人的 blog ，知识管理系统 （类wiki），日记。
因为要要作为日记使用，还需要提供类似 evernote 的加密方案。</p>

<p>目前，我對ruhoh的態度是，能用ruhoh 基本功能實現的就用ruhoh，不能用
ruhoh實現的就先擱置，甚至不使用插件。如果可以用js實現的話，也值得考慮
一下。</p>

<p>看了 pluskid 的<a href="http://freemind.pluskid.org/technology/the-unbearable-madness-of-static-blog-generators/">文章</a>，我也跟着实现了保存的时候自动刷新页面。需要安装几个东西</p>

<ul>
<li><a href="https://github.com/guard/guard">guard</a></li>
<li><a href="https://github.com/johnbintz/rack-livereload">rack-livereload</a></li>
<li><a href="https://github.com/guard/guard-livereload">guard-livereload</a></li>
</ul>

<p><a href="https://github.com/guard/guard">guard</a>是一个监听文件系统变动的工具，<a href="https://github.com/johnbintz/rack-livereload">rack-livereload</a> 实现了自动刷新。安装和使用看一下各自的 readme 还是很容易明白的，但具体怎么工作我也没弄清楚，反正不用改动ruhoh的一个代码，很方便。不过我在 windows 下安装 <a href="https://github.com/guard/guard-livereload">guard-livereload</a> 出了问题，原因是EventMachine 0.12.10 不能在跑着 ruy 1.9.2+ 的windows上工作。用 pre-release 的版本就可以解决问题，讨论在<a href="http://stackoverflow.com/questions/6927907/ruby-problem-installing-eventmachine-under-windows-7#">stackoverflow</a> 上。</p>

<pre><code>gem install eventmachine --pre
</code></pre>

<h3 id="toc_1">评论</h3>

<p>ruhoh 用 widgets 實現。內置支持disqus。</p>

<p>我的目的是實現，ruhoh 和  wordpress 的相同篇文章共用一個評論。disqus
提供了這種可能性
<a href="http://help.disqus.com/customer/portal/articles/662547-why-are-the-same-comments-showing-up-on-multiple-pages-">Why are the same comments showing up on multiple pages?</a> wordpress 的
disqus 插件使用了 文章的post_id 和 guid 作爲 disqus_identifier ，模
式如下</p>

<pre><code>post_id + &#39; &#39; + guid
</code></pre>

<p>所以在 <a href="https://gist.github.com/3415268">wp_to_ruhoh</a> 里，我就這兩個屬性也保留下來。但是 ruhoh 的
widget 不能訪問 page 的數據（吭爹呀），見 <a href="https://github.com/ruhoh/ruhoh.rb/issues/52">issue52</a>。所以只能把代碼
放到 theme 的 layout 里。如下:</p>

<pre><code>&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO
        YOUR WEBPAGE * * */
            var disqus_title = &#39;{{page.title}}&#39;;
            var disqus_identifier =&#39;{{page.postid}} {{page.guid}}&#39;;
            var disqus_shortname = &#39;doousblog&#39;; // required: replace example with your forum shortname

            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;comments
            powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
</code></pre>

<p>另外，对于 ruhoh 的 post ，如果不想以后换个标题，或者换个域名，都要重新整合评论，最好每篇文章提供一个 unique id 作为 disque_indentifier 使用。<a href="http://brizzled.clapper.org/blog/2010/12/20/some-jekyll-hacks/">Some Jekyll Hacks</a> 希望可以得到一些启示。</p>

<h3 id="toc_2">mustache</h3>

<p>一个 Logic Less? 的模板语言，ruhoh 采用它是为了 Language Agnostic? 参考它的 <a href="http://mustache.github.com/#demo">demo</a> 可以大致了解它的特性</p>

<p>json 对象:</p>

<pre><code>{
  &quot;header&quot;: &quot;Colors&quot;,
  &quot;items&quot;: [
      {&quot;name&quot;: &quot;red&quot;, &quot;first&quot;: true, &quot;url&quot;: &quot;#Red&quot;},
      {&quot;name&quot;: &quot;green&quot;, &quot;link&quot;: true, &quot;url&quot;: &quot;#Green&quot;},
      {&quot;name&quot;: &quot;blue&quot;, &quot;link&quot;: true, &quot;url&quot;: &quot;#Blue&quot;}
  ],
  &quot;empty&quot;: false
}
</code></pre>

<p>模板：</p>

<pre><code>&lt;h1&gt;{{header}}&lt;/h1&gt;
{{#bug}}
{{/bug}}

{{#items}}
  {{#first}}
    &lt;li&gt;&lt;strong&gt;{{name}}&lt;/strong&gt;&lt;/li&gt;
  {{/first}}
  {{#link}}
    &lt;li&gt;&lt;a href=&quot;{{url}}&quot;&gt;{{name}}&lt;/a&gt;&lt;/li&gt;
  {{/link}}
{{/items}}

{{#empty}}
  &lt;p&gt;The list is empty.&lt;/p&gt;
{{/empty}}
</code></pre>

<p>结果：</p>

<pre><code>&lt;h1&gt;Colors&lt;/h1&gt;
&lt;li&gt;&lt;strong&gt;red&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Green&quot;&gt;green&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Blue&quot;&gt;blue&lt;/a&gt;&lt;/li&gt;
</code></pre>

<p>要一点要注意一下，对于  <code>&quot;tags&quot;=&gt;[&quot;forkosh&quot;, &quot;LaTex&quot;, &quot;mathtex&quot;]</code> 这样列表或者数组(top-level-array)，没有 key 所以要这样处理</p>

<pre><code>&lt;ul&gt;
  {{#tags}}
  &lt;li&gt;{{&amp; .}}&lt;/li&gt;
  {{/tags}}
&lt;/ul&gt;
</code></pre>

<p>可以这样来实现 if-else 结构</p>

<pre><code>{{#repo}}
  &lt;b&gt;{{name}}&lt;/b&gt;
{{/repo}}
{{^repo}}
  No repos :(
{{/repo}}
</code></pre>

<p><code>{{! ignore me }}</code> <code>&quot;!&quot;</code>用于注释</p>

<p>如果好奇为什么我可以显示<code>{{ }}</code>,请参考<a href="http://mustache.github.com/mustache.5.html">mustache(5)</a> 的Set Delimiter。</p>

<h3 id="toc_3">bootstrap</h3>

<p>折騰了幾下，感覺目前我弄的這個主題，並不能發揮bootstrap作爲脚
手架的能力，不過responsive這個特性實在太強了，基本可以保證在不同分辨率
的設備上都可以保持比較好的閱讀體驗。不過單單用它的那些小工具也非常值得，
bootstrap 的設計真的很漂亮，像我這種沒有前端經驗的碼農，也可以用的很舒
服。</p>

<p>主題左邊那個固定的導航欄不能用bootstrap內置的功能來實現，只能用原來那
種方法，還是很遺憾的。</p>

<p>另外一点，预期说是bootstrap的问题，不如说是 markdown 的限制，无法为 img 标签指定 class 。</p>

<p>bootstrap 更适合于这种布局</p>

<ul>
<li><a href="http://www.kissuki.com/">http://www.kissuki.com/</a></li>
<li><a href="http://freemind.pluskid.org">http://freemind.pluskid.org</a></li>
</ul>

<h3 id="toc_4">Markdown</h3>

<p>用了一段時間的 Markdown ，發現 Markdown 主要的缺陷就是太簡單了，優點也
是太簡單了，非常直觀。真是矛盾。</p>

<p>現在主要影響比較大的有幾點：</p>

<ol>
<li>无法为 img 标签指定 class </li>
<li>無法爲文章生成 content</li>
<li>實現擴展不容易</li>
</ol>

<p>第1點，是markdown 語義的限制，2，3 倒也不能怪 Markdown，不過在不動用
ruhoh 的插件的情況下，要解決基本無望。但是，我目前並沒有放棄 Markdown
的打算，我覺得它的簡潔很漂亮，而且也是有它的道理的，先習慣一下，不過應
該也是逃不了自己再擴展的命運了。</p>

<p>再羅列一下，其他朋友對Markdown的批評:</p>

<ul>
<li> <a href="http://blog.liancheng.info//why-i-hate-markdown">Why I hate Markdown (and prefer reST)</a></li>
<li> <a href="http://freemind.pluskid.org/technology/the-unbearable-madness-of-static-blog-generators">The Unbearable Madness of Static Blog Generators</a></li>
</ul>

<p>markdown 的转义让人抓狂</p>

<h4 id="toc_5">pandoc 增强</h4>

<p><a href="http://www.ituring.com.cn/article/746">http://www.ituring.com.cn/article/746</a></p>

<h2 id="toc_6">Mathjax</h2>

<p>mathjax的使用非常方便，直接在頁面嵌入script就行，然後通過一個 widgets
來載入 mathjax 的腳本。就可以展示公式了，現在的主要問題還是要不要通過
插件來簡化語法。而且已經有同學實現了<a href="https://gist.github.com/2699636">這個插件</a>了。</p>

<script type="math/tex; mode=display"
id="MathJax-Element-11">\begin{aligned}P\left( \sup_{f\in\mathcal{F}}
(E^*_N(f)- E_N(f)) > \frac{\epsilon}{2} \right) &\leq
\color{red}{|\mathcal{F}^P|} \color{blue}{P(E^*_N(f)- E_N(f) >
\frac{\epsilon}{2})} \\ &\leq \color{red}{2^{2N}}
\color{blue}{e^{-\epsilon^2 N/2}} \\ &= \exp\left( \left(2\log
2-\frac{\epsilon^2}{2}\right) N \right)\end{aligned}</script>

<h3 id="toc_7">TODO</h3>

<ul>
<li>Mathjax</li>
<li>moon 主題</li>
<li>wp 轉換程序，codecolor 插件 短標籤的問題</li>
<li>sitemap</li>
<li>rss</li>
<li>less</li>
</ul>

<p>到底是關注於博客系統還是博客本身呢，本末倒置了吧。整理一下現在還欠缺的內容。</p>
]]></description>
    </item>
    <item>
      <title>&#x8BEF;&#x5220;&#x5206;&#x533A;</title>
      <link>http://douo.ruhoh.com/2012/06/28/&#x8BEF;&#x5220;&#x5206;&#x533A;</link>
      <pubDate>Thu, 28 Jun 2012 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p>用windows自带的分区工具删除上次装黑苹果时的临时分区竟然出问题了。把我另外一个1.7tb的大分区也删掉了。我怀疑是交叉分区导致的(分区助手专业版4.0
分的)，这个1.7tb分区有着500gb左右的数据。十分珍贵。幸好，据我所知删除分区只是修改位于硬盘头的分区表而已。不会对真正分区内容做什么更改。恢复应该时可以的。</p>

<p>一开始用diskgenius，看着它的恢复速度十分蛋疼，每秒还不知有没有一个柱面，而我的大硬盘有24多万个柱面。而且用的算法还是不精确的快速算法，应是只检测每个磁道的第一个扇区。如果是完全扫描速度应该慢个255倍。diskgenius还有提供自己规定柱面范围恢复的功能，不知为什么这个选项是灰色的无效状态。如果可以用就方便许多了。</p>

<p>用了另外一个软件Acronis Disk Director（ADD）</p>

<p>ADD功能很强大，也很好用。恢复分区的功能也提供了两种算法，快速和完全。后来我用快速扫了快1个小时没扫到。用完全扫不到1分钟就找到了第一个分区。是那个原本要删掉的分区。看来它的位置还是很靠前的。因为分区的建立和删除只关系到硬盘的分区表，对实际内容不会有影响。接下来继续扫，希望能恢复到令一个分区，两个小时过去了，还是没有找到，最可怕的那条进度栏连1%也没跳出来。果断停止。又用快速扫了将近一个小时又没有。幸好ADD还提供有hex
编辑器。打开那块未分配的区域一看一开始都是00。拉了很多才看到有数据的内容。分区头的区域大概就在有数据和无数据的边界。用二分法手工查找，很快就定位到这个交界附近，看了一下，跟开始的距离有90831767040(346795155
柱面：21587|524200950
柱面：32630)个扇区，大概就是80多G的数据了，难怪这么慢。但是ADD竟然没有精准分区的功能，害我不敢乱分。怕覆盖掉实际原本的分区。</p>

<p>回到diskgenius，惊奇的发现它居然有按照柱面精确分区的功能。太适合了。</p>

<p>再回到ADD用快速扫描一下，没想到很快就把那个1t多的分区给找出来了。</p>
]]></description>
    </item>
    <item>
      <title>&#x53EF;&#x4EA4;&#x4E92;&#x7684; adb devices</title>
      <link>http://douo.ruhoh.com/2012/06/26/selecting-adb-device</link>
      <pubDate>Tue, 26 Jun 2012 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[adb]]></category>
      <category><![CDATA[ADT]]></category>
      <category><![CDATA[Android]]></category>
      <description><![CDATA[<p>$ adb hell
    1) HT18HTB00535 device
    2) HT04RL901008 device
    Select the device to use,  to quit: 1
    shell@android:/ $</p>

<p>即便有了方便的 Eclipse+ADT ，偶尔在命令行下敲个 adb
也是少不了的。像我这样每天要切换操作系统的开发者，下面这个错误提示是每天都要遇到的：</p>

<blockquote>
<p>Re-installation failed due to different application signatures. You
must perform a full uninstall of the application. WARNING: This will
remove the application data! Please execute &#39;adb uninstall
your.package.namespace&#39; in a shell.<a href="#e1">^1)^</a></p>
</blockquote>

<p>如果你忘记了你已连接了多台设备就兴匆匆地敲入，</p>

<pre><code>adb uninstall your.package.namespace
</code></pre>

<p>那么下面这个错误也是不可避免的：</p>

<pre><code>error: more than one device and emulator
</code></pre>

<p>这时候又得用</p>

<pre><code>adb devices
</code></pre>

<p>然后再选择，复制，粘帖打印出来的目标序列号，才能再执行。</p>

<pre><code>adb -s uninstall your.package.namespace
</code></pre>

<p>不过现在好了，<a href="http://dtmilano.blogspot.com/">dtmilano</a>
提供了一个可交互的adb，<a href="http://dtmilano.blogspot.com/2012/03/selecting-adb-device.html">原文见此。</a></p>

<p>这个交互的 adb
由两个脚本组成，第一个是<strong>android-select-device</strong>。用于提示用户选择设备。</p>

<pre><code>#! /bin/bash
# selects an android device

PROGNAME=$(basename $0)
UNAME=$(uname)
DEVICE_OPT=
for opt in &quot;$@&quot;
do
case &quot;$opt&quot; in
-d|-e|-s)
DEVICE_OPT=$opt
;;
esac
done
[ -n &quot;$DEVICE_OPT&quot; ] &amp;&amp; exit 0
DEV=$(adb devices 2&gt;&amp;1 | tail -n +2 | sed &#39;/^$/d&#39;)
if [ -z &quot;$DEV&quot; ]
then
echo &quot;$PROGNAME: ERROR: There&#39;s no connected devices.&quot; &gt;&amp;2
exit 1
fi
N=$(echo &quot;$DEV&quot; | wc -l | sed &#39;s/ //g&#39;)

case $N in
1)
# only one device detected
D=$DEV
;;

*)
# more than one device detected
OLDIFS=$IFS
IFS=&quot;
&quot;
PS3=&quot;Select the device to use,  to quit: &quot;
select D in $DEV
do
[ &quot;$REPLY&quot; = &#39;q&#39; -o &quot;$REPLY&quot; = &#39;Q&#39; ] &amp;&amp; exit 2
[ -n &quot;$D&quot; ] &amp;&amp; break
done

IFS=$OLDIFS
;;
esac
if [ -z &quot;$D&quot; ]
then
echo &quot;$PROGNAME: ERROR: target device coulnd&#39;t be determined&quot; &gt;&amp;2
exit 1
fi

# this didn&#39;t work on Darwin
# echo &quot;-s ${D%% *}&quot;
echo &quot;-s $(echo ${D} | sed &#39;s/ .*$//&#39;)&quot;
</code></pre>

<p>把上面代码复制保存到 <strong>android-select-device</strong>
这个文件里。第二个文件是<strong>my-adb</strong>，它是用来代替原本的adb的。当adb
devices 多于一个的时候就会调用 <strong>android-select-device</strong>
让用户选择设备。</p>

<pre><code>#! /bin/bash
# This command can be used as an alias for adb and it will prompt for the
# device selection if needed
# alias adb=my-adb

set +x
PROGNAME=$(basename $0)
ADB=$(which adb)
if [ -z &quot;$ADB&quot; ]
then
echo &quot;$PROGNAME: ERROR: cannot found adb&quot;
exit 1
fi

set -e
if [ $# == 0 ]
then
# no arguments
exec $ADB
elif [ &quot;$1&quot; == &#39;devices&#39; ]
then
# adb devices should not accept -s, -e or -d
exec $ADB devices
else
# because of the set -e, if selecting the device fails it exits
S=$(android-select-device &quot;$@&quot;)
exec $ADB $S &quot;$@&quot;
fi
</code></pre>

<p>同样的把上面代码复制保存到文件 <strong>my-adb</strong> 。 接下来把这两个脚本加入到
\$PATH 里面。我的做法是在 \$ANDROID_SDK_HOME 里面建个 my-tools
文件夹，再把脚本放进去。然后直接在 \$PATH 里添加这个目录 &lt;pre&gt;&lt;code
class=&quot;bash&quot;&gt;export PATH=\$PATH:\$ANDROID_SDK_HOME/my-tools</p>

<p>最后给 my-adb 加个 adb 别名，让它替换掉原来的 adb。</p>

<pre><code>alias adb=my-adb
</code></pre>

<p>确保环境变量生效后，就可以键入 adb
试试看了。如果运行失败，确保两个脚本的权限为可执行，如 744 。</p>

<p>运行 adb hell 后，如果有多个设备的话，你应该可以看到文章一开始的输出：</p>

<pre><code>$ adb hell
1) HT18HTB00535 device
2) HT04RL901008 device
Select the device to use,  to quit: 1
shell@android:/ $
</code></pre>

<p>不过这个脚本也是有缺陷的，不管 adb
的子命令需不需要指定device，只要多于一个设备连接着，它都会提示选择设备。</p>

<h3 id="toc_0">注解</h3>

<p>​1)
这个问题是由于不同的机器使用不同的<strong>debug.keystore</strong>，导致安装的时候验证错误。所有开发的机器使用相同的<strong>debug.keystore</strong>便可以避免这个问题再次发生。在
Eclipse 下 Window -&gt; Preferences -&gt; Android -&gt; Build -&gt; Custom debug
keystore 中可以更改。</p>
]]></description>
    </item>
    <item>
      <title>LightsOut &#x89E3;&#x6CD5;&#x5C0F;&#x63A2;</title>
      <link>http://douo.ruhoh.com/2012/05/31/lights-out-solution</link>
      <pubDate>Thu, 31 May 2012 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[LightsOut]]></category>
      <category><![CDATA[游戏]]></category>
      <category><![CDATA[算法]]></category>
      <category><![CDATA[线性代数]]></category>
      <description><![CDATA[<p><a href="http://dourok.info/wp-content/uploads/2012/05/light_out_banner.png"><img src="http://dourok.info/wp-content/uploads/2012/05/light_out_banner.png" alt="" title="light\_out\_banner"></a></p>

<p>Lights Out(关灯游戏) 是一款经典的老游戏，维基百科上说Lights Out
是在1995年由 <a href="https://en.wikipedia.org/wiki/Tiger_Toys" title="Tiger Toys">Tiger
Toys</a> 第一次发行。接触它却在去年的时候Gnome3的小游戏里。Lights
Out 的规则很简单，游戏由一个 5 * 5
格的棋盘构成，每格子都是一颗灯，灯肯定是有两种状态，亮或者暗。游戏一开始棋盘上会亮起一些灯，你的目标就是把所有亮起灯都关掉，亮起的灯点一下就会关掉，但游戏当然不会这么简单，点一下灯的时候还会有一些附加影响，准确的说就是点一下灯的时候会切换它和四周也就是是上下左右的灯的状态。找到了一个在线的Lights
Out，<a href="http://www.addictinggames.com/puzzle-games/lightsout.jsp">http://www.addictinggames.com/puzzle-games/lightsout.jsp</a>。一般能过第五关就差不多了吧。</p>

<p>不过即便是第一关，如果一开始摸不到基本的门道，乱点的话基本上想点回来是很难的，为什么？<script type="math/tex">2^{25}</script>等于多少
，作为一个合格的码农应该脱口而出，33554432
！好吧我承认我也是用计算器的。要玩这游戏首先要明白一个道理：你关的不是灯，是寂寞…噢不，是开关！先不管棋盘上的灯光状态如何，也不管一个开关可以控制多少颗灯，只要知道你点一下方块，就等于切换一次开关，开关就从状态1转换到状态0，再点一下方块，开关又从状态0切换回状态1。这里的0和1也就是开关开和关两种状态，明白这一点很重要，把所有开着的开关都关闭就是完成游戏，所有开着的开关都关闭，肯定没有灯是亮的是吧，但是反过来并不一定成立哦，后面会说到这个。它还可以继续往下推，第一点，<strong>每一个方块只有点第一下才是有意义的</strong>，点第二下也就切换会原始状态，点N下也就是来来回回切换而已。第二点，<strong>开关关闭的顺序无关紧要</strong>。从上往下点，从下往上点都没关系。</p>

<p>如果你有迈克那么牛逼的话，相信现在已经能够透过亮着灯光看到后面隐藏的开关了吧，看不到也没关系先想象一下。我们知道一个开关控制着上下左右和本身的灯光，相对的，<strong>一颗灯亮与否，取决于它本身和四周开关的状态，当有奇数个开关开着的时候，灯就亮，偶数个的时候灯就是暗着的</strong>。再看看第一行，第一行上的一颗灯，能影响到它的开关有本身、左右，这三个都是第一
行上的开关，另外还有下方位于第二行的开关，而上方的开关因为是第一行所以是不存在的。现在假设一下，第一行所有开关都被关闭了，那么此时第一行如果还有亮着的灯，能控制这些灯的开关就只剩下第二行的开关，一颗亮着的灯，显然第二行其对着的开关肯定是打开的，相反的，第一行的灯是暗的，那么第二行对应的开关肯定是关闭的，这样第二行打开的开关就是其上面的灯还亮着的那些。照着第一行亮着的灯把第二行的开关全部关掉，现在一行的灯应该是全暗的，第二行的开关也全部关闭了，第二行还亮着的灯也就只有第三开关能影响到了。同样的，此时第二、三行的情况就跟前面第一、二行的情形一样了。以此类推，第三、四、五行的开关都可以这样关掉，此时游戏也就解决了。终于有一条有用的结论了，<strong>当第一行的开关全部关闭后，其他行的开关通过一个唯一且固定的模式来把开关全部关闭，也就是说对应着上一行亮着的灯把下一行对应的开关关闭就行。</strong>有了这个结论，现在已经把游戏的难度降低不少了，我们只要猜对第一行打开的开关就可以把游戏K.O.了。这个结论，我们把问题猜测的规模从<script type="math/tex">2^{25}=33554432</script>降到<script type="math/tex">2^5=32 </script>。当然这样有点无趣，也不会变得完全没有难度。
但对于计算机来说，那确实是易过吃碗水，遍历第一行的所有可能性，再校验是不是一个解。</p>

<p>但是这种方法不能脱离暴力搜索，始终有点丑陋。我在看Gnome Lights Out
的源码的时候，发现了一篇论文讨论了如何用线性代数的方法来解决这个问题。非常简单的一个方法。</p>

<p>首先我们随便找一个开局状态，1表示灯是亮的，0表示灯是暗的。如下所示，</p>

<p><a href="http://dourok.info/wp-content/uploads/2012/05/light_out_state_1.png"><img src="http://dourok.info/wp-content/uploads/2012/05/light_out_state_1.png" alt="" title="light\_out\_state\_1"></a></p>

<script type="math/tex; mode=display">\begin{vmatrix}1 & 0 & 0 & 0 & 0 \\1 & 1 & 1 & 1 & 0 \\1 & 1 & 1 & 1 & 1 \\1 & 1 & 1 & 1 & 0 \\1 & 0 & 0 & 0 & 0\\\end{vmatrix}</script>

<p>把这些数字放到一列里并标上号，就成了向量<script type="math/tex">\vec b=(b_{1,1},b_{1,2},\cdots,b_{1,5},b_{2,1},\cdots,b_{5,5})^T</script></p>

<p>当我们按一下开关，<script type="math/tex">\vec b</script>又会发生什么变化呢？比如按下位于坐标(1,1)的开关，记为<script type="math/tex">s_{1,1}</script>。当<script type="math/tex">s_{1,1}</script>按下时，他会改变<script type="math/tex">b_{1,1} ,b_{1,2},b_{2,1}</script>的状态，如果灯光原来的状态为0，那么就变成1，原来为1就变成0。这个刚好是GF(2)上的加法，GF(2)怎么说呢，其实和一般的数域没什么区别，因为只有两个元素
0， 1 。那么在这个域上 1 + 1 就等于 0
。我们把<script type="math/tex">s_{1,1}</script>也用向量表示，它就是这个样子的</p>

<script type="math/tex; mode=display">\vec s_{1,1}=(1,1,0,0,0,1,0,\cdots,0)</script>

<p>当我们在游戏中点一下开关<script type="math/tex">s_{1,1}</script>，数学上就等于<script type="math/tex">\vec b + \vec s_{1,1}</script>
。我们还可以继续表示其他开关的向量，比如，</p>

<script type="math/tex; mode=display">\vec s_{1,2}=(1,1,1,0,0,0,1,\cdots,0)</script>

<script type="math/tex; mode=display">\vec s_{5,5}=(0,\cdots,0,1,0,0,0,1,1)</script>
 。

前面我们说过，这个游戏的目的就是把全部打开着的开关都关闭了，开关的状态我们已经用<script type="math/tex"> s\_{1,1},\cdots,s\_{5,5}</script>
表示，不多不少刚好25个，如果我们用1来表示这个开关是打开，0来表示关闭，那么一个游戏初始的开关状态也可以用一个向量来表示，

<script type="math/tex; mode=display">\vec x=(x\_{1,1},x\_{1,2},\cdots,x\_{1,5},x\_{2,1},\cdots,x_{5,5})^T</script>
。由于游戏的开关状态时未知的，是我们玩这个游戏的目的，所以这里用x表示。<script type="math/tex">\vec x</script>即是初始局面打开的开关，也是灯全暗变换到棋盘初始状态所需要点开的开关，所以我们也把<script type="math/tex">\vec x</script>称为一个策略。<script type="math/tex">\vec b</script>表示初始状态，<script type="math/tex">\underline{0}</script>灯光全暗的状态。

<script type="math/tex; mode=display">\vec b =\underline{0}+x\_{1,1}\vec s\_{1,1}+\cdots+x\_{1,5}\vec s\_{1,5}+x\_{2,1}\vec s\_{2,1}+\cdots+x\_{5,5}\vec s\_{5,5}</script>

<p>解上面的方程可以用下面这个线性方程来表示：<script type="math/tex">A\vec x=\vec b</script> 其中A是一个 25 * 25
的矩阵：</p>

<script type="math/tex; mode=display">A = \begin{vmatrix}B & I & O & O & O \\I & B & I & O & O \\O & I & B & I & O \\O & O & I & B & I \\O & O & O & I & B \\\end{vmatrix}</script>

<p>I是一个 5 * 5 的单位矩阵，O是一个 5 * 5
其元全部为零的矩阵。而B是这样一个矩阵：</p>

<script type="math/tex; mode=display">B = \begin{vmatrix}1 & 1 & 0 & 0 & 0 \\1 & 1 & 1 & 0 & 0 \\0 & 1 & 1 & 1 & 0 \\0 & 0 & 1 & 1 & 1 \\0 & 0 & 0 & 1 & 1 \\\end{vmatrix}</script>

<p>如果把 I, O, B 代入 A 那么 A 的每一列都对应着一个开关的s向量。</p>

<p>采用高斯-若爾當消元法对A的增广矩阵<script type="math/tex">(A   \vec b)</script>，就可以求出<script type="math/tex">\vec x</script> 。</p>

<p>如果令 <script type="math/tex">\vec b = \bf{0}</script>，在 5 * 5
的游戏规模下，解<script type="math/tex">A\vec x=\bf{0}</script>。除了 <script type="math/tex">\vec x = \bf{0}</script>外，还有另外两个解，分别是：</p>

<script type="math/tex; mode=display">\vec x_{1}=(0,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,0,1,1,1,0)^T</script>

<script type="math/tex; mode=display">\vec x_{2}=(1,0,1,0,1,1,0,1,0,1,0,0,0,0,0,1,0,1,0,1,1,0,1,0,1)^T</script>

<p>由此可见，5 * 5
游戏的解并不是唯一的，即便是灯光全暗，也不一定表示开关全部被关闭。另外，并不是所有可能性都有解。好了就先到这里，了解更多请见下面的链接：</p>
]]></description>
    </item>
    <item>
      <title>Lonely Android</title>
      <link>http://douo.ruhoh.com/2012/04/29/lonely-android</link>
      <pubDate>Sun, 29 Apr 2012 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[Android]]></category>
      <category><![CDATA[processing.js]]></category>
      <category><![CDATA[wordpress插件]]></category>
      <description><![CDATA[<p>两个月前，在某博客看到Android
Developer的一个Flash广告挺有趣的，可以点下<a href="http://static.googleusercontent.com/external_content/untrusted_dlcp/www.android.com/zh-CN//swf/conveyor.swf" title="conveyor.swf">Conveyor.swf</a>看看。就想把它做成WordPress
无头像评论者的随机头像（或者叫
<a href="http://en.wikipedia.org/wiki/Identicon" title="Identicon">Identicons</a>）应该很可爱的。</p>

<p>所以呢，就把它做出来了。</p>

<p>用了之前我在<a href="http://dourok.info/2011/12/before_2012/">这里</a>提过的<a href="http://processingjs.org">processing.js</a>来实现，processing.js很好玩，以后再专门来说一说。</p>

<p>插件的原理很简单，当用户头像载入时，先去请求gravatar有没该用户的头像，有的话就把头像显示出来完事，没有的话就根据用户的id，即邮箱的MD5码生成一个对应的Android机器人出来，这里跟gravatar生成随机头像是一样的，然后再加上个1秒钟的渐变效果。插件都是在客户端运行的，用的是客户端的CPU不会影响到服务器，但获取gravatar图片的跨域问题也挺烦的，现在还没有真正解决。另外这个插件还有个实际点的好处，因为某墙的缘故，gravatar在墙内也是经常抽风的，用这个插件就可以避免出现一片空白，而是换成一个可爱的Android机器人。用了lazyload技术，头像的动画只会在头像出现在视图（viewport）中才会触发，相对来说对页面的流畅程度的影响比较小，不过如果评论多的话，还是慎用（话说评论N多的牛人会用这么白痴的东西吗？）。
插件的具体效果可以点几下下面的框框看看：
因为是用了processingjs，还需要导入processingjs框架，而插件本身是没有提供这个框架的，所以呢装这个插件之前，推荐先装一下这个：<a href="http://www.ramoonus.nl/wordpress/processing-js/">http://www.ramoonus.nl/wordpress/processing-js/</a></p>

<p>这个插件可以在这里下载：<a href="https://wordpress.org/extend/plugins/imandrod/">imandroid</a>。</p>

<p>其实在用processingjs实现之前我已经在Android平台上实现了这个东东，幸好有processingjs这么像java语法的东西让我省了不少力气移植到js上来。
不浪费顺便弄了个动态壁纸（live wallpaper），到<a href="https://play.google.com/store/apps/details?id=info.dourok.imandroid">Play
Store</a>看下吧。</p>
]]></description>
    </item>
    <item>
      <title>&#x91CE;&#x82B1;</title>
      <link>http://douo.ruhoh.com/2012/04/22/wild_flower</link>
      <pubDate>Sun, 22 Apr 2012 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p>路边的野花独自开得这般灿烂，可曾有人为你驻足?
<a href="http://dourok.info/wp-content/uploads/2012/04/IMAG00071.jpg"><img src="http://dourok.info/wp-content/uploads/2012/04/IMAG00071.jpg" alt="" title="IMAG0007"></a>
可野花从不管有没有人欣赏都照样开放。
从不向人类乞求一分一毫，如此孤高冷傲，也不近人情<a href="http://dourok.info/wp-content/uploads/2012/04/IMAG0034.jpg"><img src="http://dourok.info/wp-content/uploads/2012/04/IMAG0034.jpg" alt="" title="IMAG0034"></a>
我还是天真的希望，此刻它的灿烂是因为我的注目。
可惜我不懂花的语言，不敢开口，你现在是否在为我开放？<a href="http://dourok.info/wp-content/uploads/2012/04/IMAG0160.jpg"><img src="http://dourok.info/wp-content/uploads/2012/04/IMAG0160.jpg" alt="" title="IMAG0160"></a></p>

<p>今天真是适合踏青的好天气，蓝天白云，风轻如梦，视野开阔。可惜手机的镜头不给力，拍不出这种开阔。<a href="http://dourok.info/wp-content/uploads/2012/04/IMAG00061.jpg"><img src="http://dourok.info/wp-content/uploads/2012/04/IMAG00061.jpg" alt="" title="IMAG0006"></a></p>
]]></description>
    </item>
    <item>
      <title>Test</title>
      <link>http://douo.ruhoh.com/2012/04/14/test</link>
      <pubDate>Sat, 14 Apr 2012 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p>(tags <code>processing.js,</code>Wordpress, <code>Wordpress Theme,</code>吐槽) | (comments nil)</p>
]]></description>
    </item>
    <item>
      <title>&#x6765;&#x9664;&#x8349;&#x4E86;&#x3002;&#x3002;&#x3002;</title>
      <link>http://douo.ruhoh.com/2011/12/25/before_2012</link>
      <pubDate>Sun, 25 Dec 2011 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <category><![CDATA[processing.js]]></category>
      <category><![CDATA[Wordpress]]></category>
      <category><![CDATA[Wordpress Theme]]></category>
      <category><![CDATA[吐槽]]></category>
      <description><![CDATA[<p>终于争取到在2012前上来吐槽下，记录下对博客做的修改和一些新理解。</p>

<p>首先取消了分类目录，全部通过标签来做归类管理。像我这种随便吐槽的博客用分类目录，很多时候都觉的是种自我限制，相对的标签就自由许多，同时也有归类的功能。这方面不得不说Evernote很有相见之明，不过我很久没用Evernote了，听说它也是顶不住用户的压力开始支持分类管理了。至于技术文章，我把它归为笔记类，和其它笔记，摘抄都记录到我的wiki里，wiki目前还是通过分类管理的，分得细致很多，不过我觉得更合理的话应该要配合上标签，即便没有客户端和没有标签管理下DokuWiki还是完全替代了我对Evernote的使用，何况标签这个功能装个插件就有了，Wiki的自由和可扩展性是无可替代的。一直有个将dokuwiki变身为云笔记想法，主要目的本地和服务器同步文件，还有Web编辑器太弱了，想通过Emacs来做桌面客户端，再来个Android
App，加上一些自己常用网站的接口插件，就差不多了。我已经启动这个项目很久了（见<a href="http://code.google.com/p/wiki-note/">wiki-note</a>），不过一直没有动工过，果然是拖延症患者吧。</p>

<p>取消了分类目录，我就希望博客更整洁些，所以决定采用单栏模板让文章内容的空间大一些。但苦于找不到比较入眼的单栏主题，无奈选择自己看教程做，本想基于twentyten来改的，无意间发现
<a href="http://criticalzero.co.uk/%20">CriticalZero</a>这个站，它的设计令我耳目一新，特别是头部用条斜线来切割页面，相当大胆，用的好的话就是小清新，用不好的话就像眼前这个网站一样-_-(纯粹213需要，无意贬低原作者)。虽然他页面内容的排版也漂亮，但文章的空间太小不适合我的需求。所以我还是采用传统的纵向排列，这样保证了文章有足够大的宽度，看起来舒服些。其它细节我也搬了不少过来，再加上一些从其它主题搬过来的设计和来自
<a href="http://gentleface.com/free_icon_set.html">Gentleface</a>
的图标、乱来的配色，不过 <a href="http://www.css-html.net/web_colors/">Web
Colors</a>
真的很有帮助。就这样左抄抄右抄抄，像我这样的前端苦手也能完成一款wordpress主题。</p>

<p>我的第一款wordpress主题就叫做BetaD吧。<a href="https://github.com/dourokinga/BetaD">BetaD</a>是twentyten（wordpress自带主题）的子主题（child
theme），设计主要来自 <a href="http://criticalzero.co.uk/%20">CriticalZero</a>
，Copy的太多都不好意思说是参考了。目前是dirty又buggy，只在Chrome和Firefox下测试过，我自己发现的就有不少bug，也没要提供任何可自定制的接口，下次再修复吧。有兴趣的同学到这里看下：<a href="https://github.com/dourokinga/BetaD">https://github.com/dourokinga/BetaD</a></p>

<p>另外，不知大家有发现没，这个主题的背景是动态生成，在研究代码是时候，发现了相当酷的框架<a href="http://processingjs.org">processing.js</a>，是用来做html5交互动画的。这个背景就是用这个框架生成的，看起来十分强大的样子，一定要来研究下。</p>
]]></description>
    </item>
    <item>
      <title>&#x5728;Netbeans&#x4E0A;&#x67E5;&#x770B;Android&#x6E90;&#x7801;</title>
      <link>http://douo.ruhoh.com/2011/10/10/browse_android_sources_on_netbeans</link>
      <pubDate>Mon, 10 Oct 2011 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[Android]]></category>
      <category><![CDATA[NBAdroid]]></category>
      <category><![CDATA[Netbeans]]></category>
      <description><![CDATA[<p>Netbeans7.1终于有像Eclipse一样的Attach
Sources按钮，可以为android.jar附加源码了。虽然现在Netbeans 7.1
还处在测试阶段，但这个功能太重要了，迫不及待要去尝鲜，不过其实现在也足够稳定了。
<a href="http://dourok.info/wp-content/uploads/2010/05/attach_sources.png"><img src="http://dourok.info/wp-content/uploads/2010/05/attach_sources.png" alt="" title="attach_sources"></a>
先下载<a href="http://netbeans.org/community/releases/71/">Netbeans 7.1
beta</a>，然后在这里：<a href="http://adt-addons.googlecode.com/svn/trunk/source/com.android.ide.eclipse.source.update/plugins/">http://adt-addons.googlecode.com/svn/trunk/source/com.android.ide.eclipse.source.update/plugins/</a>
可以下载到打包好android各版本的源码，这是个jar档案需要解压出来。
另外，如果已安装有旧版本的netbeans，如7.0；需要注意一个问题，如<a href="http://netbeans.org/bugzilla/show_bug.cgi?id=200698">Bug
200698</a>里
<a href="mailto:jn0101@netbeans.org">jn0101@netbeans.org</a>
的描述。如果7.1和旧版的netbeans共用一个userdir可能会导致&quot;Attach
Sources&quot;按钮失效。我试过了确实会这样（linux下）。解决方法可以用<a href="http://wiki.netbeans.org/FaqAlternateUserdir">--userdir</a>给netbeans
7.1重新指定一个新userdir。不过，我是直接把.netbeans文件删掉，当然有先备份，然后，先配置好7.1的nbandroid，然后把sources.zip附到相应的android.jar。再把备份的7.0拷回来。可以把7.0的一些config拷给7.1，如：Editors和Keymaps等等。这样两个版本都可以正常工作了。
<a href="http://dourok.info/wp-content/uploads/2010/05/view_sources.png"><img src="http://dourok.info/wp-content/uploads/2010/05/view_sources.png" alt="" title="view_sources"></a></p>

<p>另外，意外的是在debug下还能工作的挺好的。
<a href="http://dourok.info/wp-content/uploads/2010/05/debug_view.png"><img src="http://dourok.info/wp-content/uploads/2010/05/debug_view.png" alt="" title="debug_view"></a></p>

<p><a href="http://kenai.com/jira/browse/NBANDROID-71">NBANDROID-71</a>基本可以算解决了。</p>

<p>见此,如何<a href="http://dourok.info/2010/05/%e5%9c%a8netbeans%e4%b8%8a%e9%85%8d%e7%bd%aeandroid%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83/" title="在Netbeans上配置Android开发环境">在Netbeans上配置Android开发环境</a></p>
]]></description>
    </item>
    <item>
      <title>&#x4FEE;&#x590D;&#x4E86; Lyrics Grabber2 &#x7684;&#x5343;&#x5343;&#x9759;&#x542C;&#x6B4C;&#x8BCD;&#x6293;&#x53D6;&#x811A;&#x672C;</title>
      <link>http://douo.ruhoh.com/2011/08/08/fixed_ttplayer_lrc_py</link>
      <pubDate>Mon, 08 Aug 2011 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[otaku]]></category>
      <category><![CDATA[foobar2000]]></category>
      <category><![CDATA[Lyrics Grabber2]]></category>
      <category><![CDATA[python]]></category>
      <category><![CDATA[歌词搜索]]></category>
      <description><![CDATA[<p>之前修改过现在查词失败的同学请点<a href="#attention">这里</a></p>

<p><a href="http://code.google.com/p/lyricsgrabber2/">Lyrics Grabber2</a>
可以说我理想中的歌曲下载插件，主要是它可以批量抓取更新歌词，又可以自定义抓取脚本方便扩展(见<a href="http://code.google.com/p/lyricsgrabber/wiki/HowToMakeProviderInPython">此HowToMakeProviderInPython</a>)，实在强大。不过还是有一些不足，比如找到的歌词没有给出来源（Provider），歌词服务器（Provier）不能更改优先级，还有就是出现多个歌词的匹配问题，既有多个服务器的，也有一个服务器的多个歌词的，希望能增加人工选择的选项。不过 Lyrics
Grabber2刚好一年没更新了，再更新实在希望不大。</p>

<p>再者，现在Lyrics
Grabber2里面的千千静听歌词抓取脚本（TTPlayer(LRC).py）是用不了的。我了解一下，把bug总结如下：</p>

<p>bug_1:<a href="http://code.google.com/p/lyricsgrabber2/source/browse/trunk/foo_lyricsgrabber2/dist/pygrabber/scripts/TTPlayer(LRC">36行</a>.py#36)</p>

<p>导致搜索失败的主要原因，现在千千静听搜索歌词的服务器变了</p>

<p>bug_2:<a href="http://code.google.com/p/lyricsgrabber2/source/browse/trunk/foo_lyricsgrabber2/dist/pygrabber/scripts/TTPlayer(LRC">103行</a>.py#103)
另一个导致搜索失败的原因，用来生成code的字符串应该用utf-8编码，而用minidom.parseString出来的字符串已经是utf-16le的了.</p>

<p>bug_3:<a href="http://code.google.com/p/lyricsgrabber2/source/browse/trunk/foo_lyricsgrabber2/dist/pygrabber/scripts/TTPlayer(LRC">114行</a>.py#144)
这一行应该是打错了. 条件应该是 c &gt;= 0x80:</p>

<p>bug_4:<a href="http://code.google.com/p/lyricsgrabber2/source/browse/trunk/foo_lyricsgrabber2/dist/pygrabber/scripts/TTPlayer(LRC">42行</a>.py#42)
同样是编码问题，导致Levenshtein算法失效，因为比对的是两个不同编码的字符串。</p>

<p>修复完bug后，就可以成功查词了。但是结果并不理想。
<a href="http://dourok.info/wp-content/uploads/2011/08/t2.png"><img src="http://dourok.info/wp-content/uploads/2011/08/t2.png" alt="" title="t2"></a></p>

<p>由上图可以看出是，英文和简体没压力但繁（正）体中文就不行了。显然还需对title做些处理。通过对千千静听进行测试，发现千千静听对查询串的处理远不止
<a href="http://code.google.com/p/lyricsgrabber2/source/browse/trunk/foo_lyricsgrabber2/dist/pygrabber/scripts/TTPlayer(LRC">71</a>.py#71)
<a href="http://code.google.com/p/lyricsgrabber2/source/browse/trunk/foo_lyricsgrabber2/dist/pygrabber/scripts/TTPlayer(LRC">72</a>.py#72)
<a href="http://code.google.com/p/lyricsgrabber2/source/browse/trunk/foo_lyricsgrabber2/dist/pygrabber/scripts/TTPlayer(LRC">73</a>.py#73)
所在的那样。 大概做了下面这些过滤：</p>

<ul>
<li>  英文转小写</li>
<li>  去括号，大中小还有全角的小括号</li>
<li>  去除半角特殊符号，空格，逗号，etc。</li>
<li>  去除全角特殊符号</li>
<li>  繁（正）体转换为简体</li>
</ul>

<p>繁（正）体转换为简体，找不到好的现成方案（针对unicode字符集uft-8编码的）。只能动用谷歌翻译的api了。没想到谷歌翻译倒工作的很好。不过毕竟是多一个网络请求，建议不需要的时候可以把它注释掉，以加快查询速度。其他过滤功能也可以根据情况去掉，已加强效率。FYI:脚本更改后立即生效，无须重启foobar2000的。</p>

<p>针对这些，增加了下面的新方法</p>

<pre><code>def QianQianStringFilter(self,string):
s = string
# 英文转小写
s = s.lower()
# 去括号，大中小还有全角的小括号
s = re.sub(&#39;\(.*?\)|\[.*?]|{.*?}|（.*?）&#39;, &#39;&#39;, s);
# 去除半角特殊符号，空格，逗号，etc。
s = re.sub(&#39;[ -/:-@[-`{-~]+&#39;, &#39;&#39;, s);
# 繁（正）体转换为简体
s = translate(s,&#39;zh-tw&#39;,&#39;zh-cn&#39;)
s = unicode(s, &#39;utf_8&#39;)
# 去除全角特殊符号
s = re.sub(u&#39;[\u2014\u2018\u201c\u2026\u3001\u3002\u300a\u300b\u300e\u300f\u3010\u3011\u30fb\uff01\uff08\uff09\uff0c\uff1a\uff1b\uff1f\uff5e\uffe5]+&#39;,&#39;&#39;,s)
return s

def translate(text,lang_from,lang_to):
url = (&#39;http://ajax.googleapis.com/ajax/services/language/translate?&#39; +
&#39;v=1.0&amp;q=&#39;+urllib.quote(text)+&#39;&amp;langpair=&#39;+lang_from+&#39;%7C&#39;+lang_to)
json = urllib.urlopen(url).read()
# return json;
p = re.compile(&#39;&quot;translatedText&quot;:&quot;(.+?)&quot;&#39;)
m = p.search(json);
return m.group(1);
</code></pre>

<p><strong>注意:</strong>谷歌翻译的api已经过期了，会导致查词失败，新的翻译api又要收费还很贵，见<a href="http://code.google.com/apis/language/translate/v2/pricing.html">http://code.google.com/apis/language/translate/v2/pricing.html</a>，坑爹呢这是。幸好还有Bing做后援。虽然不给力，但简繁转换还是没问题的。下面的代码改用Bing的翻译服务：</p>

<pre><code>def translate(text,lang_from,lang_to):
url = (&#39;http://api.microsofttranslator.com/V2/Ajax.svc/Translate?&#39; +
&#39;appId=DE2A1CAA235EB52E611BC1243F16E4D301BB600E&#39; +
&#39;&amp;from=&#39;+ lang_from +&#39;&amp;to=&#39;+ lang_to +
&#39;&amp;text=&#39;+urllib.quote(text))
json = urllib.urlopen(url).read()
p = re.compile(&#39;&quot;(.+?)&quot;&#39;) #對應必應
m = p.search(json);
return m.group(1);
</code></pre>

<p>这样，大部分流行歌曲特别是华人音乐，都可以表示毫无压力。
<a href="http://dourok.info/wp-content/uploads/2011/08/t1.png"><img src="http://dourok.info/wp-content/uploads/2011/08/t1.png" alt="" title="t1"></a>
千千静听的大部分歌词都是简体的……</p>

<p>歌名特殊符号的也能识别了
<a href="http://dourok.info/wp-content/uploads/2011/08/t3.png"><img src="http://dourok.info/wp-content/uploads/2011/08/t3.png" alt="" title="t3"></a></p>

<p><a href="http://dourok.info/wp-content/uploads/2011/08/t2_.png"><img src="http://dourok.info/wp-content/uploads/2011/08/t2_.png" alt="" title="t2_"></a>
You Ain&#39;t Goin Nowhere在千千静听里面也是Fault。</p>

<p>但是这样并不完美，毕竟是黑盒测试，比如
中千千静听的<strong>後</strong>(/u8C5F)字并没有转换到<strong>后</strong>，如下图：</p>

<p><a href="http://dourok.info/wp-content/uploads/2011/08/t4.png"><img src="http://dourok.info/wp-content/uploads/2011/08/t4.png" alt="" title="t4"></a></p>

<p><strong>最後の放課後</strong> 在千千静听中可以找到，<strong>花は桜 君は美し
-instrumental-</strong> 则同样找不到</p>

<p>不过目前也就这能做到这样。</p>

<p>改好的脚本在此:<a href="http://code.dourok.info/python/foo_lyricsgrabber2_scripts/TTPlayer(LRC">TTPlayer(LRC).py</a>.py)</p>

<p>另外，乐辞的脚本也是不行的，顺手也改好了。<a href="http://code.dourok.info/python/foo_lyricsgrabber2_scripts/Lyricist(LRC">Lyricist(LRC).py</a>.py &quot;Lyricist(LRC).py&quot;)</p>

<p>btw：千千静听的歌词库，只要是热门的，流行的，出名的歌曲都挺全的，不知是从哪里来的。</p>

<p> </p>
]]></description>
    </item>
    <item>
      <title>&#x8FF7;&#x5BAB;&#x751F;&#x6210;&#x7B97;&#x6CD5;</title>
      <link>http://douo.ruhoh.com/2011/07/14/maze_generation_algorithm</link>
      <pubDate>Thu, 14 Jul 2011 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[javascript]]></category>
      <category><![CDATA[图论]]></category>
      <category><![CDATA[迷宫]]></category>
      <description><![CDATA[<p>迷宫,大家都在知道是什么吧.一种标准的迷宫可以是像下图这样的结构,</p>

<p><a href="http://dourok.info/wp-content/uploads/2011/07/maze01.png"><img src="http://dourok.info/wp-content/uploads/2011/07/maze01.png" alt="" title="maze01"></a></p>

<p>一个矩形空间上,布置出错综复杂的墙,本文讨论的主要是这种结构的简单迷宫.可以想象出在下图这样的结构里,推倒某些墙壁.来生成迷宫.当然墙不是随便可以推倒的.</p>

<p><a href="http://dourok.info/wp-content/uploads/2011/07/maze3.png"><img src="http://dourok.info/wp-content/uploads/2011/07/maze3.png" alt="" title="maze3"></a></p>

<p>这样的结构姑且称为完全方格图(square grid
graph)吧.从图论角度上看,这样的结构等同于下面这张图.圆圈表示顶点,线段表示边.</p>

<p><a href="http://dourok.info/wp-content/uploads/2011/07/maze2.png"><img src="http://dourok.info/wp-content/uploads/2011/07/maze2.png" alt="" title="maze2"></a></p>

<p>而最上面的迷宫,就可以认为上面那张完全方格图的<a href="http://zh.wikipedia.org/wiki/%E5%9B%BE#.E5.9F.BA.E6.9C.AC.E6.9C.AF.E8.AF.AD">生成子图</a>,仔细观察上面的迷宫,就会发现无论从那里开始走,都可以到达迷宫中的任意一个地方(顶点).用图论术语来讲也就是说迷宫它还必须是一个<a href="http://zh.wikipedia.org/wiki/%E8%BF%9E%E9%80%9A%E5%9B%BE">连通图</a>,这个可以理解,迷宫里到达不了的地方实际上没有意义.</p>

<p>另外继续观察还可以发现,无论你从那个地方出发,只要不往回走,就永远也回不到原来出发的地方.也就是不会绕圈圈.图论上说这叫做没有回路.当然回路这个可以有,有回路的迷宫更让人迷惑也可以更好玩,但这还得取决于回路如何设计.简单起见,这里生成的迷宫没有回路.就这两个特性,就可以给这种迷宫下定义了:完全方格图的没有回路连通生成子图.也就是完全方格图的<a href="http://zh.wikipedia.org/zh-cn/%E6%A0%91_(%E5%9B%BE%E8%AE%BA">生成树</a>#.E5.AE.9A.E4.B9.89).</p>

<p>图的生成树算法那就相当广泛了,一次广度优先搜索(BFS)或深度优先搜索(DFS),都可以构建出图的生成子树.只要让选择下一个顶点的策略随机化,每次搜索出来的就是一个随机生成树也就是随机生成的迷宫.但是BFS生成出来的结果由于其他顶点相对于起始顶点的深度不变,导致迷宫随机性不够理想,下面提到的Prim算法算是一种对BFS的不错改进.DFS生成的过程比较生动就像是在挖地道一样推倒一面面墙.用来生成迷宫就比较直观也比较适合.</p>

<p>还有经典的最小生成树算法,Kruskal和Prim,都可以用来生成迷宫.当然完全方格图所有边都是单位权值的.所有生成树都是最小的,要运用Kruskal和Prim要做的改变就是将原来已以小优先的选择边策略改为随机选取.出来的是一个随机生成树.</p>

<p>当然上面的算法都是基于图论的,在维基百科里还提到另外一种不用图论的算法,比较有趣,叫递归分割法(Recursive
division
method),我喜欢叫你建墙我挖洞法,从名字就可以看出这是一种分治法,基本的策略就是,在一个空间里建立两面相交墙,形成四个较小的空间,然后再挖上三个洞.然后再对四个较小的空间执行相同的处理.直至每个空间的长或宽为单元大小不可再分割为止.这种方法效率比较高,由于是分治法也比较适合用分布式运算.这种方法生成出来的迷宫也是符合上面所提到的连通性和没有回路两个特点,可以用递归法简单证明下,由于两面墙隔出了四个空间,开三个洞刚好使每个空间可以互相连通,且没有回路,如果从一个空间到达另一个空间必定到达该空间的其中一个子空间,也就可以到达其他三个子空间.以此类推就到达迷宫上的每一个空间.不够生成出来的迷宫却较为简单,直路太多不够扭曲.</p>

<p>我用html5实现一个<a href="http://tools.dourok.info/mazegame/mazegame.html">迷宫生成算法的演示</a>,分别针对DFS,Kruskal,Prim和最后的分治法.可以去玩一下.</p>

<p>抱怨一下javascript,绘画速度还是不够快,对于大一点的迷宫必须用脏矩形重绘,才能保证速度.不够画出来的效果却不咋地.</p>

<p>至于这种迷宫的走法,一个DFS就可以很好地解决了.</p>

<p>当然实际设计出迷宫不像是这些算法这么简单的,正如谁谁谁所说的</p>

<p>&quot;迷宫设计不仅是线条和图案的组合，要有娱乐性、装饰性，还要考虑那些穿越迷宫者的感受，那样才趣味无穷&quot;</p>

<p>有空再考虑下其他类型迷宫的生成算法.</p>

<p>未完待续...</p>

<p>参考: <a href="http://en.wikipedia.org/wiki/Maze%5C_generation%5C_algorithm">http://en.wikipedia.org/wiki/Maze\_generation\_algorithm</a>
<a href="http://en.wikipedia.org/wiki/Maze">http://en.wikipedia.org/wiki/Maze</a></p>
]]></description>
    </item>
    <item>
      <title>&#x60A0;&#x54C9;&#x60A0;&#x54C9;&#xFF0C;&#x8F97;&#x8F6C;&#x53CD;&#x4FA7;</title>
      <link>http://douo.ruhoh.com/2011/06/05/&#x60A0;&#x54C9;&#x60A0;&#x54C9;&#xFF0C;&#x8F97;&#x8F6C;&#x53CD;&#x4FA7;</link>
      <pubDate>Sun, 05 Jun 2011 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p>昨天晚上，也就是敏感瓷那天，跟几个老同学跑出去犯罪了，其实应该算是只醉没饭…
喝了几杯酒，一点醉意也没，还很精神。回来还写两个多小时的代码，丝毫不困，只是烦。
…… 居然把博客当微博，真是太水了。
抱怨一下老鹰，真的是自动gzip，速度又不快，等了快10秒页面空白，突然咔噔一下，全部载入好了。本来是想躺在床上用手机上的，但android上等的我受不了，直接起床开电脑了。</p>

<p>有点睡意，立马上床。</p>

<p>于 2011 年 06 月 05 日 03:59:17</p>
]]></description>
    </item>
    <item>
      <title>System.in&#x7684;&#x56F0;&#x60D1;</title>
      <link>http://douo.ruhoh.com/2011/05/28/a_puzzle_of_system-in</link>
      <pubDate>Sat, 28 May 2011 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[Java]]></category>
      <category><![CDATA[System.in]]></category>
      <description><![CDATA[<p>先看下下面代码先</p>

<pre><code>static class Thread1 extends Thread {
        @Override
        public void run() {
            try {
                InputStream in = System.in;
                OutputStream out = System.out;
                int i = 0;
                while ((i = in.read()) != -1) {
                    out.write(i);
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }
</code></pre>

<p>这段代码很正常，线程跑起来的结果和你想的一样，在终端上输入一行，按下回车就回显这一行，显然System.in是行缓冲的(linebuffered)，不是像getch那样输入一个就回显一个。在没有按下回车之前in.read()就一直阻塞。
再来看下这一段代码</p>

<pre><code>static class Thread2 extends Thread {
        @Override
        public void run() {
            try {
                InputStream in = System.in;
                OutputStream out = System.out;
                byte buffer[] = new byte[10];
                int i = 0;
                    while ((i=in.read(buffer))!=-1) {
                        out.write(buffer, 0, i);
                    }
            } catch (IOException ex) {
               ex.printStackTrace();
            }
        }
    }
</code></pre>

<p>Thread2跑起来结果跟Thread1一模一样，输入一行回显一行，但代码却有点区别，多了</p>

<pre><code>byte buffer[] = new byte[10];
</code></pre>

<p>这是一个缓冲，读取的时候不是一次一个字节了，而是</p>

<pre><code>in.read(buffer)
</code></pre>

<p>，这个方法等同于</p>

<pre><code>in.read(buffer, 0, buffer.length)
</code></pre>

<p>，也就是说要先把buffer读满，read方法才会结束。然后我困惑了，Thread2运行起来竟然Thread1一模一样。如果你输入abc然后回车，Thread2也会立刻回显abc。这时候的字节数只有4还没把buffer填满，但in.read(buffer)却返回了，我参考了文档对InputStream中read(byte[]
b, int off, int len) 的说明：</p>

<blockquote>
<p>...将输入流中最多 len 个数据字节读入字节数组。尝试读取多达 len
字节，但可能读取较少数量。以整数形式返回实际读取的字节数。
在输入数据可用、检测到流的末尾或者抛出异常前，此方法一直阻塞。...</p>
</blockquote>

<p>前一句又“尝试&quot;又&quot;可能&quot;的，太模糊暂时忽略，第二提出了不阻塞的情况，看似除了“输入数据可用”理解有点模糊外，其他都明显不符合，那理应阻塞的方法是什么原因让它提前返回呢？带着这个疑问，我看了下InputStream的源码，并在Thread3中实现了一个一模一样的方法（如文档所说的，就是反复调用read()）：</p>

<pre><code>static class Thread3 extends Thread {
       static int read(InputStream in, byte b[], int off, int len) throws IOException {
        if (b == null) {
            throw new NullPointerException();
        } else if (off &lt; 0 || len &lt; 0 || len &gt; b.length - off) {
            throw new IndexOutOfBoundsException();
        } else if (len == 0) {
            return 0;
        }
        int c;
             c= in.read();
            if (c == -1) {
                return -1;
            }
        b[off] = (byte) c;

        int i = 1;
        try {
            for (; i &lt; len; i++) {
                    c = in.read();
                    if (c == -1) {
                        break;
                    }
                b[off + i] = (byte) c;
            }
        } catch (IOException ee) {
        }
        return i;
    }
        @Override
        public void run() {
            try {
                InputStream in = System.in;
                OutputStream out = System.out;
                byte buffer[] = new byte[10];
                int i = 0;
                    while ((i=read(in,buffer,0,buffer.length))!=-1) {
                        out.write(buffer, 0, i);
                    }
            } catch (IOException ex) {
               ex.printStackTrace();
            }
        }
    }
</code></pre>

<p>Thread3跑起来果然跟Thread2不一样，算是比较可理解了，不管你按下多少次回车，只有但buffer读满了，read(in,buffer,0,buffer.length)才会返回。当然这并不是说明System.in有什么问题，System.in必须是InputStream的子类，read(byte[]
b, int off, int len)
被重载，必须的。我只是好奇它到底是怎么实现的，在Thread4我做了一些尝试：</p>

<pre><code>static class Thread4 extends Thread {
       static int read(InputStream in, byte b[], int off, int len) throws IOException {
        if (b == null) {
            throw new NullPointerException();
        } else if (off &lt; 0 || len &lt; 0 || len &gt; b.length - off) {
            throw new IndexOutOfBoundsException();
        } else if (len == 0) {
            return 0;
        }
        int c;
             c= in.read();
            if (c == -1) {
                return -1;
            }
        b[off] = (byte) c;

        int i = 1;
        try {
            for (; i &lt; len; i++) {
                if (in.available() &gt; 0) {
                    c = in.read();
                    if (c == -1) {
                        break;
                    }
                } else {
                    break;
                }
                b[off + i] = (byte) c;
            }
        } catch (IOException ee) {
        }
        return i;
    }
        @Override
        public void run() {
            try {
                InputStream in = System.in;
                OutputStream out = System.out;
                byte buffer[] = new byte[10];
                int i = 0;
                    while ((i=read(in,buffer,0,buffer.length))!=-1) {
                        out.write(buffer, 0, i);
                    }
            } catch (IOException ex) {
               ex.printStackTrace();
            }
        }
    }
</code></pre>

<p>在in.available()永远有效且准确的前提下这个方法就跟System.in一样了，但我觉得这个前提很无力啊，但实际System.in它的实现是怎样的呢，还有为什么？</p>

<p>希望能在<a href="http://book.douban.com/subject/1230413/">深入理解计算机系统</a>找到答案，</p>

<p>最近看开始这本书，太棒了，才看第一章就对它入迷了，大学时代与它失之交臂真是遗憾啊。。。。啊。。。</p>
]]></description>
    </item>
    <item>
      <title>&#x66F4;&#x65B0;&#x4E86;&#x4E0B;CSS</title>
      <link>http://douo.ruhoh.com/2011/05/24/&#x66F4;&#x65B0;&#x4E86;&#x4E0B;css</link>
      <pubDate>Tue, 24 May 2011 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[otaku]]></category>
      <category><![CDATA[Chrome]]></category>
      <category><![CDATA[css]]></category>
      <category><![CDATA[通用字体]]></category>
      <description><![CDATA[<p>Ubuntu 下的Chrome 11默认字体很糟糕，不像Chromium
13，Chrome设置里只能改标准字体和等宽字体，经测试分别对应通用字体的fantasy(同未声明)和monospace。
无奈下添加了对文泉驿微米黑和微软雅黑的优先权。
详细整理于此：<a href="http://dourok.info/wiki/doku.php/%E7%BC%96%E7%A0%81/css/css%E9%80%9A%E7%94%A8%E5%AD%97%E4%BD%93">css通用字体</a></p>
]]></description>
    </item>
    <item>
      <title>&#x5982;&#x4F55;&#x7528;Mercurial&#x5F00;&#x59CB;GoogleCode&#x9879;&#x76EE;</title>
      <link>http://douo.ruhoh.com/2011/05/11/managing-google-code-project-with-mercurial</link>
      <pubDate>Wed, 11 May 2011 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[otaku]]></category>
      <category><![CDATA[google]]></category>
      <category><![CDATA[Google Code]]></category>
      <category><![CDATA[hg]]></category>
      <category><![CDATA[Mercurial]]></category>
      <description><![CDATA[<p>最近打算对自己乱糟糟的代码整理规划下，把一些项目提交到在线的代码仓库。因为自己还算是一个windows用户，所以还是放弃github，选择google
code
加上看起来比较好用的Mercurial（<a href="http://www.cnblogs.com/greenmile/archive/2010/04/20/VCS.html">CVS，GIT，Mercurial和SVN比较</a>），Netbeans对Mercurial也有很好的支持。</p>

<p>Mercurial用起来还是很方便的，见<a href="http://blog.dreasgrech.com/2010/07/managing-google-code-project-with.html">Managing a Google Code project with
Mercurial</a>。下面的内容就是翻译整理自这文章，权当记录一下。</p>

<h3 id="toc_0">安装Mercurial</h3>

<p>首先，需要在你的机器上安装Mercurial，从这里<a href="http://mercurial.selenic.com/downloads/%E9%80%89%E6%8B%A9%E9%80%82%E5%90%88%E8%87%AA%E5%B7%B1%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%89%88%E6%9C%AC%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E3%80%82Ubuntu%E7%94%A8%E6%88%B7%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5">http://mercurial.selenic.com/downloads/选择适合自己系统的版本下载安装。Ubuntu用户可以直接</a></p>

<pre><code>sudo apt-get install mercurial
</code></pre>

<p>。搞定后，打开命令行窗口，键入</p>

<pre><code>hg version
</code></pre>

<p>，如果出现类似下面信息的话就OK了。</p>

<blockquote>
<pre><code>分布式软件配置管理工具 - 水银 (版本 1.7.5)
(see http://mercurial.selenic.com for more information)

Copyright (C) 2005-2010 Matt Mackall and others
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
</code></pre>
</blockquote>

<p>找不到命令的话请检查下环境变量。</p>

<h3 id="toc_1">设置默认用户</h3>

<p>当Mercurial成功安装后，还需要设置一个用户作为你提交到仓库的默认用户。
windows用户的话，需要在用户目录（%USERPROFILE%）创建一个名为Mercurial.ini或者.hgrc的配置文件。比如创建</p>

<pre><code>C:\Users\Andreas\Mercurial.ini
</code></pre>

<p>Linux在\$HOME目录创建.hgrc文件 然后在创建好的文件里加上下面内容</p>

<blockquote>
<pre><code>[ui]
username = 你的名字 
</code></pre>
</blockquote>

<p>可以在<a href="http://www.selenic.com/mercurial/hgrc.5.html">这里</a>找到配置文件的更多选项。</p>

<h3 id="toc_2">创建项目</h3>

<p>点这个链接<a href="http://code.google.com/hosting/createProject">Google Project
Hosting</a>创建新项目，记得在版本控制工具（Version
control
system）选项上选择Mercurial。填完其他项目后就可以创建自己的项目主页了。你的项目大概如：<a href="http://code.google.com/p/myhgproject/%E3%80%82">http://code.google.com/p/myhgproject/。</a>
接下来需要先建立本地仓库（repository），再把所有东西提交到在线仓库。首先，打开项目主页下的source标签页，或者这个地址<a href="http://code.google.com/p/myhgproject/source/checkout">http://code.google.com/p/myhgproject/source/checkout</a>
然后复制页面上的命令：</p>

<pre><code>hg clone https://myhgproject.googlecode.com/hg/ myhgproject
</code></pre>

<p>在本地电脑上打开命令行窗口，进入到想要放着项目的文件夹如~/myproject，执行上面的命令。这个命令将会添加一个在线仓库的副本到本地机器上。这时应该在~/myproject下可以看到Mercurial创建的文件夹myhgproject。现在里面只有个.hg文件夹，接下来就可以把准备提交的项目文件复制到myhgproject下。</p>

<p>现在myhgproject文件夹下已经有项目需要的所有文件夹了，再接下来就要把这些文件添加到本地仓库中，命令行窗口进入myhgproject，执行hg
add，如果有新文件的话就会看到一堆anding xxx的信息。hg add
命令的作用就是把新文件标记为要添加到下一次要提交的仓库中(新添加的文件状态就会由?变为a，可用hg
status查看)，所以接下来就是把这些文件提交到本地仓库中， 使用命令：</p>

<pre><code>hg commit -m “Initial commit”
</code></pre>

<p>-m
后面的参数是指你这次提交的的一些信息。比如，现在是第一次添加，所以可以说明Initial
commit来说明是第一次提交的意思。</p>

<p>注意，到现在本地的代码还未提交到在线仓库。接下来才是要把本地的代码提交到在线仓库，不过首先你要知道你的google为你生成的
googlecode.com密码.在项目的source页面下可以看到这个链接：<a href="http://code.google.com/hosting/settings">http://code.google.com/hosting/settings</a>。现在就可以使用你的google用户名和这个密码提交更改到在线仓库了。比如用户名是andreas，密码是AbCdEfGHiJ12。可以用这个命令提交：</p>

<pre><code>hg push https://andreas:AbCdEfGHiJ12@myhgproject.googlecode.com/hg/
</code></pre>

<p>现在应该可以在在线仓库看到你项目的所有文件了。以后每次做更改后想要提交都需要先提交到本地仓库，用这个命令：</p>

<pre><code>hg commit -m &quot;这次提交的一些信息&quot;
</code></pre>

<p>也可以不加-m这个参数。如果要添加新文件的话记得先</p>

<pre><code>hg add
</code></pre>

<p>然后就可以继续这个命令提交到在线仓库</p>

<pre><code>hg push https://andreas:AbCdEfGHiJ12@myhgproject.googlecode.com/hg/
</code></pre>

<h3 id="toc_3">不想每次提交都打地址？</h3>

<p>没问题，其实可以直接键入</p>

<pre><code>hg push
</code></pre>

<p>不过服务器会要求你输入密码，输入上面的密码后才可以成功提交。如果连密码也不想输，也可以。
打开项目文件夹了的.hg文件夹，可以看到里面有个hgrc文件，如果没有的话也可以自己创建。
在里面加入你的密码</p>

<blockquote>
<pre><code>[paths]
default = https://andreas:AbCdEfGHiJ12@myhgproject.googlecode.com/hg/
</code></pre>
</blockquote>

<p>明文保存的，要小心密码被泄露。</p>

<h3 id="toc_4">SVN转到Mercurial</h3>

<p>可以参考这里<a href="http://leeiio.me/googlecode-converting-svn-to-hg/">在Google Code上用 Mercurial 取代 Subversion
管理你的项目</a>，我也没细看。</p>

<p>知道hg就是汞Hg吧 :lol:</p>
]]></description>
    </item>
    <item>
      <title>I'm Back!</title>
      <link>http://douo.ruhoh.com/2011/05/09/im-back</link>
      <pubDate>Mon, 09 May 2011 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p>看下日期blog荒废了快半年了。本来就很懒，再加上前几个月合租的虚拟主机又过期了，想趁这个机会自己买个美国虚拟主机，而信用卡申请又被拒了，就这样继续耗着。最近几天新的工商信用卡终于批下来的，由于是在线提交申请的，很多功能受到限制，需要本人亲自柜台激活，网上银行开通也要申请，还要开通境外无卡支付，结果又断断续续跑去银行几趟，还不如一开始直接去银行申请方便。不过现在总算可以购买美国主机了，权衡之下选了知名度相对较低的老鹰，想不到它最近居然开始支持Alipay，真是悲剧。选了标准套餐+独立IP+50%的折扣就47多刀。速度还不错，下午测试下，ping就150+，而上下行带宽都到达我电信1m小水管的极限。做代理爽歪歪啊！</p>

<p>随着这文章的成功发表，博客搬家也搞定了。btw：最近在用ubuntu11.04 :grin:</p>
]]></description>
    </item>
    <item>
      <title>Groovy&#x521D;&#x63A5;&#x89E6;</title>
      <link>http://douo.ruhoh.com/2010/12/30/groovy_introduce</link>
      <pubDate>Thu, 30 Dec 2010 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[Groovy]]></category>
      <category><![CDATA[Java]]></category>
      <category><![CDATA[闭包]]></category>
      <description><![CDATA[<h3 id="toc_0">Groovy</h3>

<p>Groovy是一种运行在Java虚拟机上的脚本语言，语法相比java起来简单很多。而且完全支持Java语法，这个不知道是不是好事，写习惯groovy再去写java会不会很容易混淆？所有Java的库都可以在Groovy上使用，可以说跟Java是互通的。Groovy的就是一跑在jvm上的脚本语言嘛，Groovy的代码最后也要被编译成为jvm上的字节码。</p>

<p>一直都打算学一种脚本语言来写脚本和小程序的，本来是用python的，用了几天，一放松又用回Java了。Java虽然库比较熟悉，代码比较亲切，但是用来写脚本还是太繁琐了。接触都Groovy后，感觉就是它了，有脚本语言的语法和Java的库，对于会Java的人来说，学习Groovy几乎是零成本的！</p>

<p>官网:<a href="http://groovy.codehaus.org">http://groovy.codehaus.org</a>
（二级域名...orz） 装Groovy前要先安装好Java环境。 Groovy的环境配置：</p>

<p>文档方面:英文的该有还是有的.中文的就比较稀少了.
netbeans下有个Groovy插件挺好用的，在同一个项目里Groovy文件可以跟java文件混用</p>

<p>groovy没有强制分号
groovy也没像python那样的强制缩进.还是得用花括号，这个比较可惜。</p>

<p>Groovy 默认导入了下面这些包</p>

<p>java.io.*</p>

<p>java.lang.*</p>

<p>java.math.BigDecimal</p>

<p>java.math.BigInteger</p>

<p>java.net.*</p>

<p>java.util.*</p>

<p>groovy.lang.*</p>

<p>groovy.util.*</p>

<p>“==”操作符，不再比较引用，如下面的的代码输出2个true</p>

<pre><code>a = new String(&quot;wtf&quot;)
b = new String(&quot;wtf&quot;)
println a == b
println a.equals(b)
</code></pre>

<p>[cci_groovy theme=&quot;dawn&quot;]Output:true true [/cci_groovy]
正则表达式也有独立的操作符，正则表达式要用两个斜杠包围起来。 是否匹配
==~ 如</p>

<pre><code>println &quot;potatoe&quot; ==~ /potatoe/
</code></pre>

<p>[cci_groovy theme=&quot;dawn&quot;]Output:true[/cci_groovy] 匹配结果 =~\
会返回一个相当于java.util.regex.Matcher的对象。</p>

<h3 id="toc_1">闭包(Closure)</h3>

<p>用python的时候还没用过闭包，毕竟是没接触过的特性所以有股阻力，Lisp则是想学还没动手，所以学Groovy也算是我第一次接触闭包了。</p>

<p>闭包就像这样</p>

<pre><code>s = {println it}
</code></pre>

<p>一个变量名 指向一个代码块 调用s(5) 就会打印出 5 官方帮助的例子是</p>

<pre><code>square = { it * it}

println square(9)
</code></pre>

<p>[cci_groovy theme=&quot;dawn&quot;]Output:81[/cci_groovy]</p>

<p>闭包也可以当成方法的参数去传递； 如</p>

<pre><code>[ 1, 2, 3, 4 ].collect(square)
</code></pre>

<p>闭包在java成面就是groovy.util.Closure这个类，
所以可以这样传递还可以理解。 关于闭包的参数；
默认一个参数就是it，可以不用声明直接用便可。
多于一个参数可以用下面这种方式来指定参数列表</p>

<pre><code>closure = {a,b,...n -&gt;  code}
closure(a,b,...n)
</code></pre>

<p>还可以匿名</p>

<pre><code>[ &quot;yue&quot; : &quot;wu&quot;, &quot;lane&quot; : &quot;burks&quot;, &quot;sudha&quot; : &quot;saseethiaseeleethialeselan&quot; ].each(
{
key, value -&gt; println key + &quot;=&quot; + value
})
</code></pre>

<p>闭包匿名的时候可以省略括号</p>

<pre><code>[ &quot;yue&quot; : &quot;wu&quot;, &quot;lane&quot; : &quot;burks&quot;, &quot;sudha&quot; : &quot;saseethiaseeleethialeselan&quot; ].each
{
key, value -&gt; println key + &quot;=&quot; + value
}
</code></pre>

<p>还可以这样写</p>

<pre><code>n = 5;
({
for(int i in 1..100)
println i*n
}).call()
</code></pre>

<p>闭包内部可以调用其外部的变量 这个如何实现的也很好奇啊
在官网上的例子还看过这么一个用法</p>

<pre><code>def groovyImage = new GroovyImage();
def argAndClosure = [&#39;-d&#39;:{groovyImage.srcDir = new File(it)},
&#39;-q&#39;:{groovyImage.outputPattern = it},
&#39;-p&#39;:{groovyImage.pattern = it},
&#39;-h&#39;:{groovyImage.help()}];
</code></pre>

<p>闭包当成Map的Value，直接Map[key].call()果然很方便。</p>

<p>看了一天目前知道的差不多就这些，刚接触闭包，概念还待慢慢理解；Groovy其他的特点还待慢慢发掘。</p>

<h3 id="toc_2">Groovy的效率</h3>

<p>最后再看看Groovy的效率如何，分别在Java、Python、Groovy上写了个生成素数表的方法，代码几乎一致。
Java：</p>

<pre><code>/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package org.dou.euler;

import java.util.ArrayList;

/**
 *
 * @author DouO
 */
public class Prime {
 public static ArrayList primes = new ArrayList(100);
    public static void buildPrimeTable(int n){
        primes.add(2L);
        primes.add(3L);
        int k = 2;
        long s = 5;
        for (int i = 0; i &lt; n-2; i++) {
            int j = 0;
            int q = (int) Math.ceil(Math.sqrt(s));;
            while (j &lt; i ) {
                if (primes.get(j)&lt;=q&amp;&amp;s % primes.get(j) == 0) {
                     s+=k;
                     k = (k+k)%6;
                     q = (int) Math.ceil(Math.sqrt(s));
                      j = 0;
                } else {
                    j++;
                }
            }
            j = 0;
            primes.add(s);
            s+=k;
            k = (k+k)%6;
            q = (int) Math.ceil(Math.sqrt(s));
        }
    }
    public static void main(String[] args) {
        long t = System.currentTimeMillis();
        buildPrimeTable(10001);
        System.out.println(System.currentTimeMillis() - t);
        System.out.println(primes.get(10000));
    }
}
</code></pre>

<p>Python:</p>

<pre><code>import math
import time
primes = []
def buildTable(n):
#    if(len(primes)&lt;=0):
#        primes.append(2)
#        sindex = 1;
#    else:
#        sindex = len(primes+1);
    primes.append(2)
    primes.append(3)
    s = 5
    k = 2
    for i in range(0,n):
        j=0
        q = int(math.sqrt(s)+0.5)
        while(j
</code></pre>

<p>Groovy:</p>

<pre><code>primes = []
def buildPrimeTable(n){
    primes.add(2)
    primes.add(3)
    s = 5
    k = 2
    for(i in 0..n-2){
        j = 0
        q = (int) Math.ceil(Math.sqrt(s))
        while(j
</code></pre>

<p>以生成前10000位素数为例，结果如下： Java:718ms，表现不错。
Python:8833ms，8秒，java的10倍，也可能是我代码写的不好。
Groovy:77484ms，没错，你没看错是5位数，77秒！几乎是java版的110倍。天啊，这也忒慢了吧，是不是我触犯了什么禁忌啊，很可能出现在列表结构上面，下次再弄清楚啦。</p>
]]></description>
    </item>
    <item>
      <title>dokuwiki&#x65B0;&#x7248;&#x672C;"Anteater"&#x652F;&#x6301;UTF-8&#x6587;&#x4EF6;&#x540D;</title>
      <link>http://douo.ruhoh.com/2010/12/09/dokuwiki_new_realease</link>
      <pubDate>Thu, 09 Dec 2010 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[dokuwiki]]></category>
      <category><![CDATA[FML]]></category>
      <category><![CDATA[php]]></category>
      <category><![CDATA[UTF-8]]></category>
      <description><![CDATA[<p>&quot;;</p>

<p>//可能要动手修改的地方\
\$ds =dirname(__FILE__) . &quot;/data&quot;; //默认同目录下的data文件夹 //\$ds
= &quot;/xxxx/dourok.info/wiki/data&quot;; //自己指定data文件夹\
rename_data(\$ds);</p>

<p>echo &quot;if everything running fine,delete this php file</p>

<p>&quot;; ?&gt;
对跟我一样只有FTP权限的童鞋应该有帮助，将上面的代码复制下来，保存成php文件如fixfn.php，最好UTF8编码的，上传到服务器，位置见代码注释，访问一下搞定。再次提醒一定得<strong>备份原数据</strong>啊！php菜鸟一个，你们懂的。</p>

<p>突然想来一段FML:
今天，本来是想把dokuwiki的老数据拉到本地系统上来改名的，用Java写好了代码才想起windows文件名不是utf-8，于是乎再将数据跟代码传到我的ssh服务器上，上面有java环境，运行下才发现服务器不支持非ASCII字符，我一早知道又给忘了，无奈只能用php重写，实现了url解码成功改完名后，才发现php有urldecode…FML</p>
]]></description>
    </item>
    <item>
      <title>Random Words My Chosen</title>
      <link>http://douo.ruhoh.com/2010/12/04/random-words</link>
      <pubDate>Sat, 04 Dec 2010 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[php]]></category>
      <category><![CDATA[wordpress插件]]></category>
      <category><![CDATA[随机副标题]]></category>
      <description><![CDATA[<p>博客荒废了2个月，不忍让时间悄然飞逝，终于鼓起劲把博客重新整理下。其实不写博客还有另外一个原因，就是我习惯了用Evernote来记笔记。Evernote用起来是很方便，特别是做些文字剪辑。但是用久有些缺点还是很明显，如没有层次结构，用标签管理，如果标签没有规划好，就很容易乱了。得经常需要整理，而我又疏于整理，最后只能越来越乱了。确实不如wiki清晰，且页面间不能互相连接是个缺憾。</p>

<p>说回整理博客，趁这个机会实现了个以前很想实现的功能，就是随机显示不同的副标题(见右上角)。这样就可以把一堆格言名句之类东西扔进去每次访问随机显示一条出来。一开始写在主题文件上面，觉得这样写很丑，便想写成wordpress的插件。仔细了解一番发现写成插件也并不复杂。wordpress的插件主要就是两个行为，一个动作（Action），另一个是过滤器（Filter）。我所写的那个插件主要就是用到过滤器，当页面请求显示博客副标题也就是bloginfo(&quot;description&quot;)这个方法时，我的插件会将它原本的内容拦截下来替换成格言列表里面的随机一句。就是这么傻瓜化，关于制作插件方面的具体内容，我连php都是现学现写，连个菜鸟都算不上，就不献丑了。下面给出一些帮助我完成这个插件的文章链接供有兴趣者参考：</p>

<p><a href="http://sexywp.com/wordpress-plugin-api.htm">http://sexywp.com/wordpress-plugin-api.htm</a>
这个网站还有不少内容，我直接套那个入门模板。</p>

<p><a href="http://codex.wordpress.org/Writing_a_Plugin">http://codex.wordpress.org/Writing_a_Plugin</a>
官网滴</p>

<p><a href="http://codex.wordpress.org/Plugin_API">http://codex.wordpress.org/Plugin_API</a>
同上，有代码可以偷师。</p>

<p><a href="http://core.trac.wordpress.org/browser/tags/3.0.1/wp-includes/plugin.php">http://core.trac.wordpress.org/browser/tags/3.0.1/wp-includes/plugin.php</a></p>

<p><a href="http://codex.wordpress.org.cn/Adding_Administration_Menus">http://codex.wordpress.org.cn/Adding_Administration_Menus</a>
如何添加设置菜单</p>

<p><a href="http://ruby8.javaeye.com/blog/647116">http://ruby8.javaeye.com/blog/647116</a></p>

<p><a href="http://www.w3school.com.cn/php/index.asp">http://www.w3school.com.cn/php/index.asp</a>
W3school的php教程挺简洁的</p>

<p>最后，给出插件的下载的地址，欢迎使用，指正错误。</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/12/random-words-my-chosen.zip">random-words-my-chosen</a></p>

<p>关于php再唠叨一下，每个变量前要加个\$符号真的很不爽啊，试过在访问数组的时候，索引忘了加&quot;\$&quot;，在记事本上写又不报错哦。结果调试了半天。还有，写过php后,我就忘了javascript该怎么写...真的挺像的。</p>
]]></description>
    </item>
    <item>
      <title>WebGL V5!</title>
      <link>http://douo.ruhoh.com/2010/09/26/webgl-v5</link>
      <pubDate>Sun, 26 Sep 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[otaku]]></category>
      <category><![CDATA[WebGL]]></category>
      <description><![CDATA[<p>CPU狂飙警告！！！</p>

<p>源地址在此<a href="http://webglsamples.googlecode.com/hg/aquarium/aquarium.html">http://webglsamples.googlecode.com/hg/aquarium/aquarium.html</a>，用最新版的chrome或chromium浏览。</p>

<p><a href="http://webglsamples.googlecode.com/hg">http://webglsamples.googlecode.com/hg</a>上有很多WebGL的例子，看了利马让你觉得WebGL
V5！HTML5 V5！ 用了iframe,不好意思!</p>
]]></description>
    </item>
    <item>
      <title>&#x63D2;&#x5165;!&#x6570;&#x5B66;&#x516C;&#x5F0F;&#x6D4B;&#x8BD5;&#xFF0C;&#x9644;&#x4E0A;&#x4E00;&#x4E2A;&#x5F88;SB&#x7684;Java&#x7A0B;&#x5E8F;</title>
      <link>http://douo.ruhoh.com/2010/08/31/316</link>
      <pubDate>Tue, 31 Aug 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[otaku]]></category>
      <category><![CDATA[forkosh]]></category>
      <category><![CDATA[LaTex]]></category>
      <category><![CDATA[mathtex]]></category>
      <category><![CDATA[Robot]]></category>
      <category><![CDATA[数学公式]]></category>
      <description><![CDATA[<p>实际上我不喜欢插入这个词!</p>

<p>在网页上嵌入数学公式，之前已经在wiki上试过，尝试了<a href="http://www.math.union.edu/%7Edpvc/jsmath/">jsMath</a>和<a href="http://www.mathjax.org/">mathJax</a>。这两个都不是在服务器是渲染Latex代码，而是用javascript在客户端渲染，而且渲染出来的不是图片而是文本，也就是说可以复制粘贴到文本编辑器上，不知这个算不算优点，好处节省下带宽，但实际在IE8上可以说又慢又卡，chromium还可以接受但下标有点错位，也许是我配置的问题，对FireFox的支持是最好的。但是为了获得最佳的显示效果客户端必须要安装某种最佳字体，选择mathJax会自动下载该字体。点击<a href="http://dourok.info/mathjax/test/">这里看下mathJax的效果</a>。相对来说mathJax比jsMath更方便些。</p>

<p>总的来说，用js还是有点麻烦，所以回到传统考虑在服务器上生成图片。这个可以自己架设，也可以用一些公共服务，比如说forkosh.dreamhost，更多的参考<a href="http://blog.chaoskey.com/2009/06/21/857">这篇文章</a>。
forkosh的使用十分简单，只需在</p>

<pre><code>http://www.forkosh.dreamhost.com/mathtex.cgi?”
</code></pre>

<p>后面加入Latex代码。如加上e^{i}+1=0，即</p>

<pre><code>http://www.forkosh.dreamhost.com/mathtex.cgi?e^{i\pi}+1=0”
</code></pre>

<p>，出来的就是欧拉恒等式</p>

<p><img src="http://www.forkosh.dreamhost.com/mathtex.cgi?parstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dcolorbox%5Brgb%5D%7B0.067,0.067,0.067%7D%7B$e%5E%7Bipi%7D+1=0$%7D" alt="" title="欧拉恒等式">
可以用来指定颜色，如</p>

<pre><code>\color{red}\frac{\int_{-\pi}^\pi \sqrt{1+\cos^2{t}}dt }{2\pi}
</code></pre>

<p>。</p>

<p>出来的效果是：<img src="http://www.forkosh.dreamhost.com/mathtex.cgi?%20Largeparstylecolor%7Bred%7Dcolorbox%5Brgb%5D%7B0.067,0.067,0.067%7D%7B$frac%7Bint_%7B-pi%7D%5Epi%20sqrt%7B1+cos%5E2%7Bt%7D%7Ddt%20%7D%7B2pi%7D$%7D%7D" alt="" title="\color{red}\frac{\int_{-\pi}^\pi \sqrt{1+\cos^2{t}}dt }{2\pi}">。</p>

<p>更多forkosh参考<a href="http://ggggqqqqihc.javaeye.com/blog/161957">这篇文章</a>，和<a href="http://www.forkosh.com/">forkosh主页</a>，forkosh提供一个很实用的<a href="http://www.forkosh.com/mathtextutorial.html">practice
box</a>，编辑时候用来测试很方便。</p>

<p>话说贴图片的时候还遇到不少麻烦，<a href="http://interjc.net/dev/shadowblue">ShadowBlue</a>这个主题为图片添加了样式——渐变的边框和白色背景，在内嵌图片到文本的时候相当不和谐。但自己改了css后，发现居然不生效，费了我半天时间改css和半天时间学习css的优先级。后来发现居然是我把css代码复制了多一份，改的时候是改前面的然后又被后面的改覆盖了，不过总算搞定了。</p>

<p>发现以前的一篇文章来测试数学公式，倒是挺合用的。</p>

<h3 id="toc_0">很SB的Java程序在此</h3>

<p><a href="http://dourok.info/wp-content/uploads/2010/08/9191a5cc799b343d01e928d8.jpg.png"><img src="http://dourok.info/wp-content/uploads/2010/08/9191a5cc799b343d01e928d8.jpg.png" alt="SB" title="SB"></a></p>

<p>其实这个程序的行为很简单，就是用java来控制鼠标，确切的说应该是用java来控制鼠标的运动轨迹。想用java来控制鼠标并不是一件困难的事。因为java本身提供了一个类Robot。在帮助文档中对Robot类是这样描叙的：此类用于为测试自动化、自运行演示程序和其他需要控制鼠标和键盘的应用程序生成本机系统输入事件。Robot
的主要目的是便于 Java 平台实现自动测试。</p>

<p>虽说字都看的懂，不过什么意思还真有点不明白。不过这个程序我们主要用到的就是Robot类里的mouseMove(int
x, int
y)方法。这个方法可以将鼠标移动到屏幕上坐标(x,y)的位置上。通过这个方法就可以来控制鼠标的运动轨迹。比如说，要让鼠标画上图的轨迹。</p>

<p>那么只需让鼠标跟着这些轨迹移动就可以，具体的实现可以逐个像素改变y坐标的值，并实时计算x的值。每次更新都调用一次Robot的实例化方法mouseMove(x,
y)，这样就可以实现鼠标指针沿轨迹移动的效果。</p>

<p>另外也可以一次性运算好所有点。并保存成Point[]，之后每一次画轨迹，只需按顺序历遍Point[]上的值。代码大致如下:</p>

<pre><code>for(int i = 0 ; points.length ; i++){

           robot.delay(speed);

           robot.mouseMove(points[i].x， points[i].y);

       }
</code></pre>

<p>接下来，我们再来看下如何画出上图的轨迹。首先，我们看下红色的轨迹，似乎可以很牵强地把它看成字母’S’，但是实际上它是一条正弦函数取区间<img src="http://www.forkosh.dreamhost.com/mathtex.cgi?parstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dcolorbox%5Brgb%5D%7B0.067,0.067,0.067%7D%7B$left%5B-pi,piright%5D$%7D" alt="" title="\left[-\pi,\pi\right]">的曲线。当然也可以说是余弦函数。这不是重点，重点是如何这条曲线映射到屏幕上的实际位置。无非通过缩放、旋转、移位。知道曲线和横坐标距离是<img src="http://www.forkosh.dreamhost.com/mathtex.cgi?parstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dcolorbox%5Brgb%5D%7B0.067,0.067,0.067%7D%7B$2pi$%7D" alt="" title="2\pi">。而相对应于屏幕上的距离<img src="http://www.forkosh.dreamhost.com/mathtex.cgi?parstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dcolorbox%5Brgb%5D%7B0.067,0.067,0.067%7D%7B$d=p_2-p_1$%7D" alt="" title="d=p_2-p_1">。所以可以知道曲线放大的倍数就是<img src="http://www.forkosh.dreamhost.com/mathtex.cgi?parstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dcolorbox%5Brgb%5D%7B0.067,0.067,0.067%7D%7B$n=(p_2-p_1" alt="">/2\pi$} &quot;n=(p<em>2-p</em>1)/2\pi&quot;)。显示在屏幕上的曲线是旋转<img src="http://www.forkosh.dreamhost.com/mathtex.cgi?parstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dcolorbox%5Brgb%5D%7B0.067,0.067,0.067%7D%7B$90textdegree$%7D" alt="" title="90\textdegree">的。也就是原本曲线的y变成屏幕上的x。而x变成屏幕上的y。在加上偏移量m。就可以算出屏幕上x，y的值了。让i为正弦函数的变量，取<img src="http://www.forkosh.dreamhost.com/mathtex.cgi?parstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dcolorbox%5Brgb%5D%7B0.067,0.067,0.067%7D%7B$i=-pi$%7D" alt="" title="i=-\pi">
可知y每增加一个像素，<img src="http://www.forkosh.dreamhost.com/mathtex.cgi?parstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dcolorbox%5Brgb%5D%7B0.067,0.067,0.067%7D%7B$i$%7D" alt="" title="i">便增加<img src="http://www.forkosh.dreamhost.com/mathtex.cgi?parstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dcolorbox%5Brgb%5D%7B0.067,0.067,0.067%7D%7B$%20frac%20in$%7D" alt="" title="\frac in">。</p>

<p><img src="http://www.forkosh.dreamhost.com/mathtex.cgi?Largeparstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dbegin%7Bequation%7Dleft%7Bbegin%7Barray%7D%7Bc%7Dsx_k%20=%20m%20+%20n%20*%20sin(i%20+%20k*frac%201n" alt="">,%20\sy<em>k%20=%20y</em>1%20+%20k,%20\0&lt;k\leq{d},k\in\mathbb{Z}.\end{array}\right.\end{equation} &quot;\Large\parstyle \begin{equation}\left{\begin{array}{c}sx<em>k = m + n * sin(i + k*\frac 1n), \sy</em>k = y_1 + k, \0&lt;k\leq{d},k\in\mathbb{Z}.\end{array}\right.\end{equation}&quot;)
这样就定义红色曲线的轨迹方程。当然屏幕上的点是离散。只能是整数。需要对sx的值取整，这个调用</p>

<pre><code>Math.round(double d)
</code></pre>

<p>就可以实现四舍五入，另外d也是这轨迹上所有离散的点的个数。</p>

<p>接下来看蓝色的轨迹，很明显是条直线。其方程也一目了然。</p>

<p><img src="http://www.forkosh.dreamhost.com/mathtex.cgi?Largeparstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dsetcounter%7Bequation%7D%7B1%7Dbegin%7Bequation%7Dleft%7B%20begin%7Barray%7D%7Bc%7Dlx_k%20=%20x_3,%20%5Cly_k%20=%20y_1%20+%20k,%20%5C0%3Ckleq%7Bd%7D,kinmathbb%7BZ%7D.end%7Barray%7Dright.end%7Bequation%7D" alt="" title="\Large\parstyle\setcounter{equation}{1}\begin{equation}\left\{ \begin{array}{c}lx_k = x_3, \\ly_k = y_1 + k, \\0&lt;k\leq{d},k\in\mathbb{Z}.\end{array}\right.\end{equation}"></p>

<p>最后看下橙色的轨迹，其实就是对正弦函数取绝对值得到的曲线。实际上，是可以不用进行正弦计算的，因为我们已经计算好保存在sx里了。利用sx我们可以得到橙色轨迹的方程如下，当然这里是建立在<img src="http://www.forkosh.dreamhost.com/mathtex.cgi?parstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dcolorbox%5Brgb%5D%7B0.067,0.067,0.067%7D%7B$y_1=y_3$%7D" alt="" title="y_1=y_3">的前提下。</p>

<p><img src="http://www.forkosh.dreamhost.com/mathtex.cgi?Largeparstylecolor%5Brgb%5D%7B0.73,0.73,0.73%7Dsetcounter%7Bequation%7D%7B2%7Dbegin%7Bequation%7Dleft%7B%20begin%7Barray%7D%7Bc%7Dbx_k%20=%20x_3%20+%20%7Csx_k-x_1%7C,%20%20%5Cby_k%20=%20y_1%20+%20k,%20%20%5C0%3Ckleq%7Bd%7D,kinmathbb%7BZ%7D.end%7Barray%7Dright.end%7Bequation%7D" alt="" title="\Large\parstyle\setcounter{equation}{2}\begin{equation}\left\{ \begin{array}{c}bx_k = x_3 + |sx_k-x_1|,  \\by_k = y_1 + k,  \\0&lt;k\leq{d},k\in\mathbb{Z}.\end{array}\right.\end{equation}"></p>

<p>现在就可以写出生成所有轨迹的点的集合的代码了，具体如下:</p>

<pre><code>final int m = 150;// 上下的边距
final int xpoints[];// 保存x坐标.因为y是递增的，规律简单，可以不用保存
final int dist = 200;// 两条曲线间的距离
final int y1 = m,
y2 = Toolkit.getDefaultToolkit().getScreenSize().height - m;
final int d = y2 - y1;
final double n = (y2 - y1) / (2 * Math.PI);
final int x1 = (Toolkit.getDefaultToolkit().getScreenSize().width - dist)
                / 2 - (int) Math.round(n);
final int x3 = x1 + dist;
xpoints = new int[d * 3];// 点的总量是d*3;
double i = -Math.PI;
int nn = 0;
while (nn &lt; d) {
        xpoints[nn] = (int) Math.round(x1 + n * Math.sin(i));// 红色轨迹
        xpoints[d + nn] = x3;// 蓝色轨迹
        xpoints[2 * d + nn] = x3 + Math.abs(xpoints[nn] - x1);// 橙色轨迹
        nn++;
        i += 1 / n;
}
</code></pre>

<p>接下来就是主角登场了。</p>

<pre><code>final int speed=5;//休眠时间，就是是鼠标运动的速度
     try {
        Robot r = new Robot();//实例化一个Robot对象
        int tmpY= 0 ;
       while(true){
           if(nn&gt;=d&amp;&amp;nn&lt;=2*d)
        //为保持鼠标移动速度的一致，直线的距离要比两条曲线的距离短，而实际的关键点是一样多.所以每个关键像素的
           //停留时间都要缩短一下，当然1/2是不准确的估计.见@http://dourok.info/2010/08/316/最上面的红色公式.
               r.delay(speed/2);
           else
               r.delay(speed);
        r.mouseMove(xpoints[nn]，(tmpY+y1));//mouseMove移动的是绝对位置而不是相对位置
        tmpY=(tmpY+1)%(d);
        nn=(nn+1)%xpoints.length;//让鼠标不断循环的画轨迹
       }
    }catch (AWTException ex) {
        ex.printStackTrace();
    }
</code></pre>

<p>程序到此就完成了，直接放在main方法里就可以运行。请注意，程序无法退出,并且鼠标无法操作，要怎么结束呢?没错，任务管理器。嗯，确实挺无聊的。当Robot非但不无聊，还很强大，顺便一提delay()其实就是睡眠当前线程。Thread.sleep()一样。不过注意delay()里的参数是int。而且如果不在
0 到 60，000 毫秒的范围内，就会抛出错误。</p>

<p>还有另一个方法setAutoDelay()是设置Robot
在生成一个事件后睡眠的毫秒数。貌似该程序更适合用这个方法。如果问我为啥不用，我只能说，我写完程序后才发现。懒得改了。</p>

<p>Robot的强大还在于它不只能控制鼠标，键盘的任意行为，还有</p>

<p>public BufferedImage createScreenCapture(Rectangle
screenRect)这个方法用来获取屏幕在Rect区域内的图像。基本上有这个方法，做抓屏软件就不是什么问题了。</p>

<p>public Color getPixelColor(int x,int
y)这个方法是返回给定屏幕坐标处的像素颜色。是不是感觉更按键精灵的功能很相像。</p>

<p>可以得到当前屏幕的图像，又可以控制鼠标，键盘的行为，实际上，Robot就是经常被用来做远程操控软件的。在游戏开发中Robot也可以用来做鼠标强制居中，对这个类也是停留在刚刚认识的阶段。</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/09/Robot.jar">程序在此！</a></p>
]]></description>
    </item>
    <item>
      <title>&#x539F;&#x578B;&#x4F53;(Prototype)&#x901A;&#x5173;</title>
      <link>http://douo.ruhoh.com/2010/08/08/&#x539F;&#x578B;&#x4F53;prototype&#x901A;&#x5173;</link>
      <pubDate>Sun, 08 Aug 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <category><![CDATA[Prototype]]></category>
      <category><![CDATA[原型体]]></category>
      <category><![CDATA[游戏]]></category>
      <description><![CDATA[<p><img src="http://i563.photobucket.com/albums/ss74/naviichi/ad12.jpg" alt="" title="Big Boss is watching you"></p>

<p>昨晚玩到凌晨3点多，终于把<a href="http://zh.wikipedia.org/zh-cn/%E8%99%90%E6%9D%80%E5%8E%9F%E5%BD%A2">原型体(Prototype)</a>的剧情打通了。不过是走马观花般地打通，细胞记忆只拿了35%，而且电影还是E文字幕的，所以<a href="http://game.ali213.net/thread-2757401-1-1.html" title="剧透警告">别人所说的剧情</a>我一点都察觉不出来，真是可惜。不过原型体(Prototype)就算不谈剧情也是是一部上上的佳作，操作流畅，动作华丽，极具速度感，在曼哈顿飞奔相当有快感，作为同样开放式的游戏杀起人来那是比GTA牛逼哄哄的多，个人感觉那肉鞭才是最牛逼的武器，最适合我这种猥琐的玩家。</p>

<p>现在剩下都是收集控、完美控的工作了，我两者都不是，更不是剧情控，只是轻微的强迫症患者。只是现在在执行我的硬盘游戏清理计划，这是个相当漫长的计划呐。作为这个计划中第一款被清理的游戏（当然记录跟安装包还是会被保留……），始终觉得要留点文字作纪念。OK，任务完成了，下一个是刺客信条。</p>

<p><img src="http://www.vgarabia.com/wp-content/uploads/2009/06/prototype_042508_7263.jpg" alt="" title="引用自vgarabia.com"></p>
]]></description>
    </item>
    <item>
      <title>CodeColorer&#x4E2D;&#x6587;&#x5E2E;&#x52A9;</title>
      <link>http://douo.ruhoh.com/2010/08/03/codecolorer&#x4E2D;&#x6587;&#x5E2E;&#x52A9;</link>
      <pubDate>Tue, 03 Aug 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[otaku]]></category>
      <category><![CDATA[CodeColorer]]></category>
      <category><![CDATA[wordpress插件]]></category>
      <category><![CDATA[插件翻译]]></category>
      <category><![CDATA[语法高亮]]></category>
      <description><![CDATA[<h2 id="toc_0">写在前面</h2>

<p>用WordPress以来，一直都用CodeColorer插件用来实现代码高亮，不过一直没花时间去看说明，用起来很苦恼。所以今天决定花点时间认真学习下，并根据作者的说明总结下各个属性的作用，还添加了些例子，以后忘了理解起来也方便些。不过都是些苦力活啦。</p>

<h3 id="toc_1">CodeColorer</h3>

<p>CodeColorer是一款基于<a href="http://qbnz.com/highlighter/">GeSHi</a>库的WordPress代码语法高亮插件。功能简单，使用方便，是一款比较轻量的插件。CodeColorer支持</p>

<pre><code>code
</code></pre>

<p>和 [cc inline=&quot;true&quot;
lang=&quot;xml&quot;]<code>code</code>{lang=&quot;lang&quot;}[/cc]两种语法。<a href="http://kpumuk.info/projects/wordpress-plugins/codecolorer/">这里是插件的主页</a>，本文据此翻译修改而成。</p>

<h2 id="toc_2">属性说明及例子</h2>

<p>属性列表如下,括号内是参数类型.string是字符串；integer是整数；boolean是布尔型(开关)，可接受“true&quot;
&quot;false&quot;, &quot;on&quot; &quot;off&quot;, 整数 1 or 0.</p>

<ul>
<li>  <a href="#lang"><code>lang</code>{inline=&quot;true&quot;}</a> (string) – 代码使用的语言。</li>
<li>  <a href="#tab_size"><code>tab_size</code>{inline=&quot;true&quot;}</a> (integer) –
用以替换制表符的空格数，可在设置界面更改。</li>
<li>  <a href="#line_numbers"><code>line_numbers</code>{inline=&quot;true&quot;}</a> (boolean) –
是否显示行号，可在设置界面更改。</li>
<li>  <a href="#first_line"><code>first_line</code>{inline=&quot;true&quot;}</a> (integer) –
指定代码块第一行的行号</li>
<li>  <a href="#highlight"><code>highlight</code>{inline=&quot;true&quot;}</a> (string) –
用于指定整行高亮的代码行行数，参数是用半角逗号分隔的数字串(如
1,5,8,9)。</li>
<li>  <a href="#no_links"><code>no_links</code>{inline=&quot;true&quot;}</a> (boolean) –
当值为false时，关键字将会添加一个到官方文档的链接，可在设置界面更改。</li>
<li>  <a href="#lines"><code>lines</code>{inline=&quot;true&quot;}</a> (integer)
–指定代码块显示的行数，当值设置为-1时，不出现纵向滚动条，可在设置界面更改。</li>
<li>  <a href="#width"><code>width</code>{inline=&quot;true&quot;}</a> (integer or string) –
代码块宽度，可在设置界面更改。</li>
<li>  <a href="#width"><code>height</code>{inline=&quot;true&quot;}</a> (integer or string) –
代码块高度，当这个高度可显示的行数比lines指定的值大才会生效，可在设置界面更改。</li>
<li>  <code>rss_width</code>{inline=&quot;true&quot;} (integer or string) –
代码块在RSS输出时的宽度，可在设置界面更改。</li>
<li>  <a href="#theme"><code>theme</code>{inline=&quot;true&quot;}</a> (string) – 代码块颜色风格 (default,
blackboard, dawn, mac-classic, twitlight,
vibrant)，可在设置界面更改。</li>
<li>  <a href="#inline"><code>inline</code>{inline=&quot;true&quot;}</a> (boolean) –
内嵌模式开关，用于将一行代码插入到文本中。</li>
<li>  <a href="#strict"><code>strict</code>{inline=&quot;true&quot;}</a> (boolean) – 严格模式的开关。</li>
<li>  <a href="#nowrap"><code>nowrap</code>{inline=&quot;true&quot;}</a> (boolean) –
当值指定为false时，过长的行将会被自动换行，以避免出现横向滚动条。</li>
<li>  <a href="#noborder"><code>noborder</code>{inline=&quot;true&quot;}</a> (boolean) –
是否显示边框的开关。</li>
<li>  <a href="#no_cc"><code>no_cc</code>{inline=&quot;true&quot;}</a> (boolean) –
当值为true时，code标签将会被解析，但代码块不会有格式。</li>
<li>  <code>class</code>{inline=&quot;true&quot;} (string) – 添加一个新的CSS。</li>
<li>  <code>escaped</code>{inline=&quot;true&quot;} (string) –
当值为false，代码块里的html转义字符不会被转义，如[cc
inline=&quot;true&quot;]&lt;[/cc]不会转义为&lt;，默认为false。</li>
</ul>

<h3 id="toc_3">lang</h3>

<p>[cc strict=&quot;true&quot; theme=&quot;twitlight&quot;]
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;WTF&quot;); } }</code>{lang=&quot;java&quot;}
[/cc]</p>

<p><code>package dourok.info.test;</code>{lang=&quot;java&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }</p>

<h3 id="toc_4">tab_size</h3>

<p>tab_size替换制表符的空格数，下面是1的例子。
<code>package dourok.info.test;</code>{strict=&quot;true&quot; theme=&quot;twitlight&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;WTF&quot;); } }</code>{tab_size=&quot;1&quot;
lang=&quot;java&quot;}</p>

<h3 id="toc_5">line_numbers</h3>

<p>line_numbers显示行号的开关： <code>package dourok.info.test;</code>{strict=&quot;true&quot;
theme=&quot;twitlight&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }
<code>package dourok.info.test;</code>{line_numbers=&quot;true&quot; lang=&quot;java&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }</p>

<h3 id="toc_6">first_line</h3>

<p>first_line第一行的行号数，下面是first_line=&quot;3&quot;的例子：
<code>package dourok.info.test;</code>{strict=&quot;true&quot; theme=&quot;twitlight&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;WTF&quot;); } }</code>{first_line=&quot;3&quot;
lang=&quot;java&quot;}</p>

<h3 id="toc_7">highlight</h3>

<p>highlight模式，高亮代码段中的某几行，如例子 highlight=&quot;1,5&quot;
高亮行数以半角逗号分隔： <code>package dourok.info.test;</code>{strict=&quot;true&quot;
theme=&quot;twitlight&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;WTF&quot;); } }</code>{highlight=&quot;1,5&quot;
lang=&quot;java&quot;}</p>

<h3 id="toc_8">no_links</h3>

<p>当no_links为false时会为一下关键字添加一个到官方文档的链接，默认为false，下面是no_links=true的例子，System没了链接：
<code>package dourok.info.test;</code>{strict=&quot;true&quot; theme=&quot;twitlight&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }
no_links有个BUG，当我在这个代码块指定为true时，后面的代码块也没了链接。
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;WTF&quot;); } }</code>{no_links=&quot;true&quot;
lang=&quot;java&quot;}</p>

<h3 id="toc_9">lines</h3>

<p>lines作者说明是显示固定行数,多于这个行数便会出现纵向滚动条,实际实验当指定行数小于代码行数时,代码块变成成为固定行数(该行数可在CodeColorer里面更改),而无论实际代码多少行.应该是bug.不过将lines=&quot;-1&quot;去掉纵向滚动条还是有效的
<code>package dourok.info.test;</code>{strict=&quot;true&quot; theme=&quot;twitlight&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;WTF&quot;); } }</code>{no_links=&quot;false&quot;
lines=&quot;5&quot; lang=&quot;java&quot;}</p>

<h3 id="toc_10">width</h3>

<p>width 指定代码块的宽度,多于这个宽度会出现横向滚动条 height
指定代码块的高度,单位是像素.当这个值比lines大时才会生效 width= &quot;217&quot;
height= &quot;217&quot; <code>package dourok.info.test;</code>{strict=&quot;true&quot;
theme=&quot;twitlight&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } } <code>package dourok.info.test;</code>{lines=&quot;1&quot;
width=&quot;217&quot; height=&quot;217&quot; lang=&quot;java&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }</p>

<h3 id="toc_11">theme</h3>

<p><code>package dourok.info.test;</code>{strict=&quot;true&quot; theme=&quot;twitlight&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;WTF&quot;); } }</code>{theme=&quot;dawn&quot;
lang=&quot;java&quot;}</p>

<h3 id="toc_12">inline</h3>

<p>inline模式,为true时去掉代码块，主要用来把代码内嵌到文本中，inline模式的默认主题跟一般模式是分开的，如下例子，详见设置页面。
<code>package dourok.info.test;</code>{strict=&quot;true&quot; theme=&quot;twitlight&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;WTF&quot;); } }</code>{inline=&quot;true&quot;
lang=&quot;java&quot;}</p>

<h3 id="toc_13">strict</h3>

<p>strict
严格模式(strict-mode)的开关,不大清楚什么意思?根据下面的例子理解下或者看下这里的<a href="http://qbnz.com/highlighter/geshi-doc.html#using-strict-mode">说明</a>
strict=&quot;false&quot;
<code>nowrap自动换行的开关,默认是不换行(nowrap=&quot;true&quot;),当代码宽度超过代码块宽度时,会出现横向滚动条. 下面的例子是nowrap=&quot;false&quot;的情形  package dourok.info.test;</code>{strict=&quot;false&quot;
lang=&quot;php&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;This is a very very very very very very very very
very very very very very very very very very very very very very very
very very long String&quot;); } }
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;This is a very very very very very very very very very very very very very very very very very very very very very very very very long String&quot;); } }</code>{nowrap=&quot;false&quot;
lang=&quot;java&quot;}</p>

<h3 id="toc_14">noborder</h3>

<p>noborder 是否显示边框的开关 <code>package dourok.info.test;</code>{strict=&quot;true&quot;
theme=&quot;twitlight&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;WTF&quot;); } }
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;WTF&quot;); } }</code>{noborder=&quot;true&quot;
lang=&quot;java&quot;}</p>

<h3 id="toc_15">no_cc</h3>

<p>no_cc 是否高亮关键字,实际测试是取消codeColorer的效果,例子如下
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;WTF&quot;); } }</code>{strict=&quot;true&quot;
theme=&quot;twitlight&quot; lang=&quot;xml&quot;}
<code>package dourok.info.test; public class Main { public static void main(String args[]){ System.out.println(&quot;WTF&quot;); } }</code>{no_cc=&quot;true&quot;
lang=&quot;java&quot;}</p>

<h2 id="toc_16">短标签(Short Codes)</h2>

<p>上面提过可以用</p>

<pre><code>[cc]
</code></pre>

<p>来代替</p>

<p>，可以避免使用code标签。作者还提供了跟简洁的语法</p>

<pre><code>[ccMODE_LANG]
</code></pre>

<p>来定义代码块。LANG就是指定语法高亮的语言，MODE可以是下面几个模式的一个或多个：</p>

<ul>
<li>  i – inline</li>
<li>  e – escaped</li>
<li>  s – strict</li>
<li>  n – line_numbers</li>
<li>  b – no_border</li>
<li>  w – no_wrap</li>
<li>  l – no_links</li>
</ul>

<p>模式分大小写，小写表示打开，相应的大写表示关闭，比如</p>

<pre><code>[cciL_java]
</code></pre>

<p>就如同</p>

<p>，注意关闭标签要一致</p>

<pre><code>[/cciL_java]
</code></pre>

<p>，当然后面还可以再带属性。最后再看下实际的例子：</p>

<p>[cc theme=&quot;twitlight&quot;][ccsW
theme=&quot;dawn&quot;]<code>package dourok.info.test;</code>{nowrap=&quot;false&quot; lang=&quot;java&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;This is a very very very very very very very very
very very very very long String&quot;); } } [/ccsW][/cc]</p>

<p>[ccsW_xml theme=&quot;dawn&quot;]<code>package dourok.info.test;</code>{nowrap=&quot;false&quot;
lang=&quot;java&quot;}</p>

<p>public class Main { public static void main(String args[]){
System.out.println(&quot;This is a very very very very very very very very
very very very very long String&quot;); } } [/ccsW_xml]</p>

<p>如果要显示</p>

<p>，就得用短标签将其包围起来，如果要显示短标签</p>

<pre><code>[cc][/cc]
</code></pre>

<p>就得用不同的短标签将其包围起来。不知这样说的够明白没。</p>
]]></description>
    </item>
    <item>
      <title>ProGuard&#x6DF7;&#x6DC6;&#x4E22;&#x6389;&#x7A7A;&#x5FAA;&#x73AF;</title>
      <link>http://douo.ruhoh.com/2010/07/30/proguard&#x6DF7;&#x6DC6;&#x4E22;&#x6389;&#x7A7A;&#x5FAA;&#x73AF;</link>
      <pubDate>Fri, 30 Jul 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[proguard]]></category>
      <category><![CDATA[synchronized]]></category>
      <category><![CDATA[valatile]]></category>
      <category><![CDATA[多线程]]></category>
      <category><![CDATA[空循环]]></category>
      <description><![CDATA[<p>项目正要发布时，我用proguard打了个混淆包，想不到运行的时候出错了。proguard是Netbeans6.9
J2ME插件自带的，版本号是4.4。</p>

<p>无奈只好debug加反编译，发现居然混淆后的代码里，我用来挂起线程的空循环语句，所谓的<a href="http://en.wikipedia.org/wiki/Busy_waiting">busy-waiting
loop</a>被去掉了</p>

<p>原代码大概如下:</p>

<pre><code>boolean a = false;

new Thread().start

while(a);
</code></pre>

<p>混淆后的代码while(a);这句已经不见了 加上个括号也不行</p>

<pre><code>boolean a = false;

new Thread().start

while(a){ }
</code></pre>

<p>必须做些操作,循环才会正确运行。</p>

<pre><code>boolean a = false;

new Thread().start

while(a){

System.out.print(&quot;&quot;);

}
</code></pre>

<p>想必是proguard给优化掉，Google了一下居然被我找到了一段Troubleshooting(<a href="http://docs.huihoo.com/proguard/manual/troubleshooting.html#Disappearingloops">原文地址</a>)，摘录如下：
<strong>Disappearing loops</strong></p>

<p>If your code contains empty busy-waiting loops, ProGuard&#39;s optimization
step may remove them. More specifically, this happens if a loop
continuously checks the value of a non-volatile field that is changed in
a different thread. The specifications of the Java Virtual Machine
require that you always mark fields that are accessed across different
threads without further synchronization as <strong>volatile</strong>. If this is not
possible for some reason, you&#39;ll have to switch off optimization using
the <a href="http://docs.huihoo.com/proguard/manual/usage.html#dontoptimize"><strong>-dontoptimize</strong></a>
option.</p>

<p>大致的意思是，如果你的代码里有忙等待循环，那么Proguard的优化步骤很可能会把它移除掉，特别是当你在循环里不断检查的字段没有用<strong>valatile</strong>关键字修饰时。</p>

<p>不过我后来加上 <strong>valatile</strong>
关键字后，空循环还是照样被移除。而且我调用的方法已经加了synchronized，我的代码也没有必要为这个变量加上<strong>valatile</strong>
，最后只能非常不爽地在项目的混淆选项界面里的其他混淆设置中添上一行</p>

<pre><code>-dontoptimize
</code></pre>
]]></description>
    </item>
    <item>
      <title>&#x73A9;&#x626B;&#x96F7;&#x7684;&#x60B2;&#x5267;</title>
      <link>http://douo.ruhoh.com/2010/07/20/&#x73A9;&#x626B;&#x96F7;&#x7684;&#x60B2;&#x5267;</link>
      <pubDate>Tue, 20 Jul 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <category><![CDATA[minesweeper]]></category>
      <category><![CDATA[扫雷]]></category>
      <description><![CDATA[<p>直接上图:</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/07/12.jpg"><img src="http://dourok.info/wp-content/uploads/2010/07/12.jpg" alt="" title="mine1"></a></p>

<p>见左上角，幸好人品还是可以的：</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/07/sl.jpg"><img src="http://dourok.info/wp-content/uploads/2010/07/sl.jpg" alt="" title="mine2"></a></p>

<p>以前玩扫雷时，就很想写一个自动求解的程序，各种懒所以没有实行过。</p>

<p>不过倒发现了一个非常好的ppt：<a href="http://web.mat.bham.ac.uk/R.W.Kaye/minesw/ASE2003.pdf">how  complicated is
minesweeper?</a></p>
]]></description>
    </item>
    <item>
      <title>&#x5982;&#x4F55;&#x4E3A;MTK&#x5E73;&#x53F0;&#x6DFB;&#x52A0;&#x65B0;&#x6A21;&#x5757;</title>
      <link>http://douo.ruhoh.com/2010/07/15/&#x5982;&#x4F55;&#x4E3A;mtk&#x5E73;&#x53F0;&#x6DFB;&#x52A0;&#x65B0;&#x6A21;&#x5757;</link>
      <pubDate>Thu, 15 Jul 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[Modis]]></category>
      <category><![CDATA[MTK]]></category>
      <description><![CDATA[<h2 id="toc_0">包含源码的第三方库</h2>

<p>以添加一个TTS模块为例，可以按如下步骤添加：</p>

<ol>
<li> 把TTS的源码包复制到你的MTK软件系统根目录下，以让TTS的源码都在TTS目录中</li>
<li> 在make目录下新增一个tts目录，在tts目录下添加4个新文件，分别是，tts.def、tts.inc、tts.lis、tts.pth。tts.def文件的内容需要根据内容来修改，其他3个文件中加上源文件及其目录、头文件目录即可。</li>
<li> 在REL_CR_MMI_&lt;project&gt;.mak 中加上如下语句 CUS_REL_SRC_COMP
+= tts</li>
<li> 把MTK工程remake一下，若没有错误，tts模块就成功加上去了。</li>
<li> <strong>如果要为Modis模拟器添加该模块，须进入到Modis目录，在createMoDIS.ini文件中，[GLOBAL_SETTINGS]下，追加
**enable_libs += tts</strong> createMoDIS.ini会在createMoDIS.pl中加载**</li>
</ol>

<p>添加一个无源码的库，如xxx.lib，可按照下面步骤：</p>

<ol>
<li> 在MTK软件系统根目录中新建一个xxx文件夹，把xxx.lib放在里面</li>
<li> 在make\Option.mak里增加下面几行，ifeq语句不是必要。 ifeq (\$(strip
\$(XXX_SUPPORT)),TRUE) COMPOBJS += xxx\xxx.lib CUS_REL_OBJ_LIST
+= xxx\xxx.lib endif</li>
<li> 有 头文件，要将头文件路径加入，用CUSTOM_COMMINC如： CUSTOM_COMMINC +=
....</li>
<li> 如果加了XXX_SUPPORT判断，须在&lt;customer&gt;_&lt;project&gt;.mak文件中添加，并初始化为
TRUE： XXX_SUPPORT = TRUE;</li>
<li> 修改完成后，remake就可以将新模块添加到工程里了。</li>
<li> 关于 ifeq
((XXX_SUPPORT)),TRUE)语句的意思是如果XXX_SUPPORT的值为TRUE则继续执行。strip函数详见<a href="http://dourok.info/wiki/doku.php?id=%E7%A8%8B%E5%BA%8F:makefile:strip" title="程序:makefile:strip">这里</a>。</li>
</ol>

<p><strong>Modis模拟器不能调用该库，Modis模拟器调用的库要经过VC编译。</strong></p>

<h2 id="toc_1">生成自己的Lib库</h2>

<p>比如说新建一个源文件dou.c，代码如下：</p>

<pre><code>#include &quot;dou.h&quot;
int dou_max(int a , int b){
return a&gt;b?a:b;
}
</code></pre>

<p>接下来建立头文件dou.h,</p>

<pre><code>#ifndef _DOU_H
#define _DOU_H
extern int dou_max(int a,int b);
#endif
</code></pre>

<p>若要将程序打包成库发布，这里跟上面添加包含源码的第三方库一样，在MTK软件系统根目录下，新增一个dou目录，在创建inc和src文件夹，把dou.h放在dou，dou.c放在dou。接着在make目录下新增一个dou目录,再添加4个新文件，分别是，dou.def、dou.inc、dou.lis、dou.pth。</p>

<p>dou.inc添加</p>

<pre><code>dou\inc
</code></pre>

<p>dou.lis添加</p>

<pre><code>dou\src\dou.c
</code></pre>

<p>dou.pth添加</p>

<pre><code>dou\src
</code></pre>

<p>.inc是头文件目录，.lis是源文件列表，.pth是源文件目录。</p>

<p>remake一下，完成后可在build文件夹里，搜索到dou.lib文件。接下来可以如上面所说的无源码的库的添加方法那样去添加。</p>

<p>也可以不用remake，可以用命令行来编译</p>

<pre><code>armcc [options] file1 file2 ... filen
</code></pre>

<p>不过我用armmcc编译出来的obj文件加入MTK工程后链接出错。后来用</p>

<pre><code>tcc
</code></pre>

<p>就OK了。
用armcc还是tcc，在Option.mak里是有定义的，具体看COMPILE_MODE这个参数。好像默认就是tcc。</p>

<p>tcc编译出来的是obj文件，还要打包成lib库,用命令</p>

<pre><code>armar -r libfile objfile...
</code></pre>

<p>之后把lib加入工程的方法一开始说过了。但如果要把lib添加进模拟器中还需要多几个步骤。</p>

<p>首先，这个lib库是用在真机上，而模拟器中的库是需要经过vc编译的。</p>

<h3 id="toc_2">Modis</h3>

<p>如按照包含源码的第三方库第5步操作过，那么重新生成、编译模拟器就可以在模拟器中使用该库。在模拟器的目录Modis中可以库目录dou，dou.lib应该就在Debug目录下。这个dou.lib就是vc编译过的库。
如果第三方要在模拟器里使用该库，那么可以按下面几个步骤操作。
确保lib文件是vc编译的 将lib复制到 _lib..
这个目录是不确定的，在CreateModis.pl里有定义，具体可查看\${modislibroot}这个变量</p>

<p>在CreateModis.pl里，添加一句 [cc_perl]push(@liblist,
&quot;\${modislibroot}\\\\dou\\.lib&quot;);[/cc]
这里可以参考了其它\${modislibroot}里的lib库的添加方法。 然后</p>

<pre><code>make gen_modis
make codegen_modis
</code></pre>

<p>编译Modis，不报错便大功告成。</p>

<h3 id="toc_3">PC Simulator</h3>

<p>如果用PC Simulator
，并且确保代码是不依赖于MTK平台的，就是说没有使用MTK平台现有模块的任何函数，如dou.c。那么可以在VC6里面新建个静态库项目，把源文件添加进去，让编译打包成LIB库。再打开PC_Simulator.dsw。在project→setting把新生成的lib添加进去。接着再tools→options加入Lib库的路径，有的话在加入头文件的路径。这样可以在模拟器里使用该库了。</p>

<p>最后调用下dou_max函数验证之。</p>

<h2 id="toc_4">参考资料</h2>

<p>[1]陈智鹏. 走出山寨-MTK芯片开发指南. 人民邮电出版社</p>

<p>[2]52rd论坛.
添加新模块模拟器编译出现问题<a href="http://www.52rd.com/bbs/Detail_RD.BBS_189450_5_1_1.html">http://www.52rd.com/bbs/Detail_RD.BBS_189450_5_1_1.html</a></p>
]]></description>
    </item>
    <item>
      <title>&#x8BA9;HTC Hero&#x901A;&#x8FC7;&#x6211;&#x7684;&#x7B14;&#x8BB0;&#x672C;&#x65E0;&#x7EBF;&#x7F51;&#x5361;&#x5171;&#x4EAB;&#x4E0A;&#x7F51;</title>
      <link>http://douo.ruhoh.com/2010/06/25/&#x8BA9;htc-hero&#x901A;&#x8FC7;&#x6211;&#x7684;&#x7B14;&#x8BB0;&#x672C;&#x65E0;&#x7EBF;&#x7F51;&#x5361;&#x5171;&#x4EAB;&#x4E0A;&#x7F51;</link>
      <pubDate>Fri, 25 Jun 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[otaku]]></category>
      <category><![CDATA[Ad-Hoc]]></category>
      <category><![CDATA[Android]]></category>
      <category><![CDATA[Hero]]></category>
      <category><![CDATA[HTC G3]]></category>
      <category><![CDATA[无线网卡]]></category>
      <description><![CDATA[<p>今天为了解决宿舍没有无线AP的情况，让hero可以上网（我只开了20M的GPRS消费）。捣鼓了一下让Hero通过<a href="http://en.wikipedia.org/wiki/Ad_hoc">Ad-Hoc</a>连接我的笔记本来共享上网的问题，google一下，找到了两篇可以解决问题的文章，如下：</p>

<p><a href="http://blog.sina.com.cn/s/blog_617b01db0100foqh.html">hTC G3 HERO 如何使用无线网卡共享宽带上网 ad
hoc</a>（不推荐，步骤简单，但会丢失当前已记忆的wifi热点）</p>

<p><a href="http://sean.huanglijiang.com/article.asp?id=217">ADSL+一台无线网卡笔记本实现Hero上网</a>（推荐：步骤多一些，但是可以学到东西）</p>

<p>不过这种方式的局限很大，不适合长久使用（<a href="http://www.haoxiaoru.info/archives/25">用connectify有所改善</a>*win7
only），而且不能动态获取IP非常麻烦，如果经常要更换AP那是相当痛苦。后来，我更新我的网卡驱动，发现里面包含了Intel®
My
WiFi软件。驱动在此<a href="http://drivers.mydrivers.com/drivers/368-147322-Intel-WiFi-Link-3945ABG-4965AGN-5100-AGN/">下载</a>，要独立安装<a href="http://www.google.com.hk/search?hl=zh-CN&amp;source=hp&amp;q=%E8%8B%B1%E7%89%B9%E5%B0%94+My+wifi&amp;aq=f&amp;aqi=&amp;aql=&amp;oq=&amp;gs_rfai=">My
WiFi</a>应该也没问题。要确保网卡是下面的型号：</p>

<p>Intel英特尔WiFi Link 3945ABG/4965AGN/5100 AGN/5300
AGN/5150/5350/6200/6250/6300</p>

<p>我的是5100
AGN。安装的过程非常流畅，安装后程序会自动启动。这时只要启用了My
WiFi技术，就可以在HERO上看WiFi热点了，不过，在你连接之前，还要改一下My
WiFi的预配置，因为默认的密码是一串长达64位的随机字符串（真是随机的吗？）。大概类似：</p>

<pre><code>ch@R2ku9tAYz5aOkPDz31TAWXfCGpz72.muvx#lugh9q6e97bo~gzDiuf8DoK+P
</code></pre>

<p>如果能在手机上一个个输完，那我真是五体投地。</p>

<p>SSID是默认的计算机名，最好也改一下。如果想要换别的加密方式，比如wep，那必须新建一个配置。因为预配置只允许用WPA2-PSK加密。</p>

<p>这样在计算机上的工作基本搞定了，HERO应该可以正常连接上来。如果一直卡在获取ip阶段，请确认下手机是不是开启了静态IP（无线局域网设置-&gt;menu键-&gt;高级），如果开启了最好关闭，因为Intel®
My
WiFi可以动态分配IP。如果要开启静态IP，默认的IP段是192.168.16.2～192.168.16.254。</p>

<p>如果不能上网，</p>

<p>请确定“过滤网络通信量”功能已被禁用（默认是禁用），在“配置式”的编辑界面-&gt;“共享”选项卡中。</p>

<p>再看看是否已经开启了“共享我的互联网”功能，在My
WiFi的任务栏图标，右键可以开启。如果连接出现问题会有提示。
最后再确定你连接互联网的连接是否已开启了Internet连接共享。具体设置如下图：</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/06/Internet-share.jpg"><img src="http://dourok.info/wp-content/uploads/2010/06/Internet-share.jpg" alt="" title="Internet share"></a></p>

<p>现在正常情况下应该可以正常上网了。</p>

<p>所谓My
WiFi技术应该是将无线网卡虚拟成无线AP，这样所有设置都在计算机上进行，在手机就像连接普通无线AP那样方便，这应该是最完美的解决方案了。当然其他设备也可以连接到这个虚拟无线AP来。</p>

<p>最后贴上一张正常使用的软件界面图和任务栏图标的右键菜单状态：</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/06/MY_WIFI.jpg"><img src="http://dourok.info/wp-content/uploads/2010/06/MY_WIFI.jpg" alt="" title="MY_WIFI"></a>
设置名称&quot;HTC HERO&quot;和图标是我自己改的。</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/06/menu.jpg"><img src="http://dourok.info/wp-content/uploads/2010/06/menu.jpg" alt="" title="menu"></a></p>
]]></description>
    </item>
    <item>
      <title>&#x4ECE;GBK&#x5230;Unicode&#x7684;&#x4E2D;&#x6587;&#x5B57;&#x7B26;&#x6620;&#x5C04;</title>
      <link>http://douo.ruhoh.com/2010/06/24/&#x4ECE;gbk&#x5230;unicode&#x7684;&#x4E2D;&#x6587;&#x5B57;&#x7B26;&#x6620;&#x5C04;</link>
      <pubDate>Thu, 24 Jun 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[GBK]]></category>
      <category><![CDATA[MTK]]></category>
      <category><![CDATA[Unicode]]></category>
      <category><![CDATA[编码转换]]></category>
      <description><![CDATA[<h2 id="toc_0">前言</h2>

<p>最近在做MTK开发，需要在程序中将GBK编码的文本文件实时转换为unicode编码，因为MTK只认Unicode。经尝试网上提供的mmi_chset_convert函数在我手上的SDK里没有用，很奇怪这个函数的只是调用了memcpy。无奈之下只能自己动手实现转换，也好趁这个机会摸清以前一直一知半解的字符编码。</p>

<p>说到字符编码，第一误解就是字符集（character set）和字符编码（character
encoding）的混淆。以前经常把所有名词都当成字符编码(encoding)，比如我就把GB2312叫成编码，实际上GB2312应该是字符集，
而它用的编码方式应该叫做EUC-CN。对于字符集跟字符编码的区别还是很难理解的（可看维基百科<a href="http://zh.wikipedia.org/zh/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81">这里</a>、<a href="http://zh.wikipedia.org/zh-cn/Gb2312">这里</a>跟<a href="http://zh.wikipedia.org/zh-cn/EUC">这里</a>），我也模糊，再说下我的理解，比如说思密达们用的字符集是<a href="http://zh.wikipedia.org/zh-cn/KS_X_1001" title="KS X 1001">KS X 1001</a>，而他们的编码方式也是EUC，不过是叫做EUC-KR。关于EUC编码方式，实际上就是对于ASCII字符用一个字节（8bit）表示，高位(第一位)为0来表示它是
ASCII字符，而其他字符用两个字节表示（16bit），且每个字节加上0xA0(16进制)，也就将它们的高位置为1，以跟ASCII字符区分开来（后面在我的程序里就可以看到这个应用）。关于这个问题可再参考Blogjava上的两篇系列文章，<a href="#ref1">[1]</a>、<a href="#ref2">[2]</a>。</p>

<p>当然如今把GB2312等同于编码了也不会有任何问题了。Html文档头经常出现的
charset=utf-8
对此贡献不少，这里的charset应该是指encoding，再比如说charset=gb2312实际上指的就是“EUC-CN”（强调一下utf-8、iso-8859-1都是字符编码，unicode才是字符集）。所以关于标题《从GBK到Unicode的中文字符映射》，实际上应该叫做《GBK到UTF-16（UCS2）的中文字符映射》，</p>

<h2 id="toc_1">GBK</h2>

<p>GBK即汉字内码扩展规范，是“国家标准扩展”三个词的拼音缩写。具体可参考<a href="http://zh.wikipedia.org/zh-cn/GBK">维基百科</a>。</p>

<p>GBK既是字符集也是字符编码(够讨厌的吧…)<a href="#ref2">[2]</a>。不过这不重要，解决问题的关键是摸清GBK的编码方式，才能找到GBK到Unicode的映射规律。在此贴下维基百科上的图片：</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/06/GBK%E7%BC%96%E7%A0%81%E8%8C%83%E5%9B%B4.jpg"><img src="http://dourok.info/wp-content/uploads/2010/06/GBK%E7%BC%96%E7%A0%81%E8%8C%83%E5%9B%B4.jpg" alt="" title="GBK编码范围"></a>
<img src="http://upload.wikimedia.org/wikipedia/en/thumb/0/0c/GBK_encoding.svg/500px-GBK_encoding.svg.png" alt="" title="GBK"></p>

<p>由上表可见，GBK编码主要将字符分为五个区域。</p>

<p>其中GBK/1、GBK/2就是GB2312的字符集，其编码跟GB2312的编码是一致的，所以说GBK是向下兼容GB2312。GBK/3、GBK4就是GBK新增的汉字，许多繁体字、偏僻字都集中在此。但GBK/4中并不是全都是汉字，或者是不存在Unicode字符集中的汉字，经我统计实际上只有8059个汉字是在Unicode中存在的。剩下的GBK/5跟GBK/1一样存放都是特殊符号。</p>

<h2 id="toc_2">Unicode</h2>

<p>前面提到Unicode是字符集，常用的编码是UTF-8和UTF-16，还有另一种叫UTF-32，因为UTF-32每个字符都要占用4个字节不大实用所以比较少见。UTF-8、UTF-16则都是变长编码，我要实现的实际就是GBK到UTF-16的转换。UTF-16的好处是在0x0到0xFFFF这个区域，也就是说字符编码小于65535的都用2个字节表示，不过因此UTF-16不兼容于ASCII。在此区域UTF-16就等同于UCS-2，所以说UCS-2是UTF-16的子集。GBK中的字符都是属于这个区域，所以这里提到的UTF-16也就是等同于UCS-2（维基百科也将UCS-2重定向到
UTF-16）。<a href="#ref4">[4]</a></p>

<p>UTF-16还有个历史问题，就是字节序问题，也就是传说中的大尾、小尾问题，比如说<strong>‘A’</strong>的ASCII码是0x41，那么其对应的UTF-16编码是0x0041还是0x4100呢?这个区别就是字节序问题。传说Windows用的就是0x4100即小尾序，苹果的Mac有个性地用0x0041表示，即是大尾序。其他字符也要这样区分，比如汉字‘朱’小尾序表示是0x3167，大尾序表示是0x6731。因为UTF-16有字节序问题，为了区分一般文本编辑器都会在UTF-16编码的文档前面加上0xFFFE（小尾序）或）0xFEFF(大尾序)来区分，这个标记称为BOM，即字节序标记（Byte
Order Mark）。<a href="#ref5">[5]</a></p>

<h2 id="toc_3">转换代码</h2>

<p>知道了这些基础，接下来就可以开始转换了。由于GBK到Unicode的汉字没有直接的映射关系，传说GBK是按拼音排序，Unicode是按部首排序的。所以要转换之前必须得有个对照表，一开始我就在网上找到这张表(<a href="#add1">附录1)</a>，表的结构如下所示。</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/06/%E6%B1%89%E5%AD%97%E7%BC%96%E7%A0%81%E5%AF%B9%E7%85%A7%E8%A1%A8.jpg"><img src="http://dourok.info/wp-content/uploads/2010/06/%E6%B1%89%E5%AD%97%E7%BC%96%E7%A0%81%E5%AF%B9%E7%85%A7%E8%A1%A8.jpg" alt="" title="汉字编码对照表"></a></p>

<p>从上表比较相同汉字的
unicode编码跟gbk编码确实看不出有什么规律。区位码是GB2312的特色，也可以说EUC的特色。注意上表的区位码是十进制的，比如汉字<strong>‘一’</strong>区位码5027，将50转换为16进制得0x32，加上0xa0得0xd2；同样的27+0xa0
= 0x1b+0xa0=0xbb。</p>

<p>该表总共20902个汉字，Unicode范围从0x4e00到0x9fa5。整张表占用空间2.73Mb，是xlt格式的缘故。考虑到我只需做GBK到
UTF-16的单向转换，要对表做一些处理，实际上只需保存unicode编码一项便可，为了让unicode编码方便用gbk编码索引，我先将编码按
GBK的各个范围分段排列，不包括特殊符号只有三个段，分别对应GBK/1、GBK/2、GBK/3。在段内则按编码的数值大小排列。比如表的第一位是
‘啊’，是GBK/1的第一个字符，而它的UTF-16编码是0x554a。这样出来的结果是这样的：</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/06/Unicode.jpg"><img src="http://dourok.info/wp-content/uploads/2010/06/Unicode.jpg" alt="" title="Unicode"></a></p>

<p>我还在表头添加了BOM以便文本编辑器能够识别，在这里用的是小尾序，所以添加的便是0xFFFE。整张表大小40.8KB((20902+1)*2
= 41806
byte)。这样在移动设备中也可以全部读取到内存中。写到这里代码也呼之欲出了。</p>

<p>[cce_c tab_size=&quot;2&quot;] typedef int S32; typedef char S8; static S8
ULE[(20902 + 1) * 2 + (1040) * 2]; //Unicode Little-Endian
表，读取自上文所生成的文件。 总共20902个汉字  1040个特殊符号 const static
S32 GBK2_OFFSET = 2; //GBK/2的偏移地址,头两个字符是BOM(0xFFFE) const
static S32 GBK3_OFFSET = GBK2_OFFSET + 6763 * 2;
//GBK/3的偏移地址,GBK/2有6763个字符 const static S32 GBK4_OFFSET =
GBK3_OFFSET + 6080 * 2; //GBK/4的偏移地址,GBK/3有6080个字符 const
static S32 GBK1_OFFSET = 41806; // GBK/4即gb2312的符号的偏移地址 const
static S32 GBK5_OFFSET = 41806 + 846 * 2; // GBK5符号的偏移地址</p>

<p>/** * dest 输出的UTF-16(UCS-2)编码字符。 * src_size * src
GBK编码的字符 * *<em>/ S32 gbk_to_ule(S8</em> dest, S32 src_size, S8* src)
{ S32 h, l; //h 高位字节  l 低位字节 S32 i; //dest的索引 S32 j;
//src的索引 S32 seek; // for (i = 0, j = 0; j &lt; src_size; i += 2) { h
= src[j++] &amp; 0xff; //读取一个字节 if ((h &amp; 0x80) == 0) { // 高位为0
是Ascii 码 l = 0x0; } else { l = src[j++] &amp; 0xff; // 高位为1
为gbk字符集字符,读取下一个字节 //将gbk编码映射到ULE表中的位置 if (h &gt;=
0xB0 &amp;&amp; h &lt;= 0xF7 &amp;&amp; l &gt;= 0xA1 &amp;&amp; l &lt;= 0xFE) { //GBK/2的编码范围
,实际上GBK2高字节包含在GBK/4的范围内,只是低字节的范围不同
//GBK/2实际就是GB2312,GB2312是区位码,16-87区为汉字编码区，每区有94个字符
seek = GBK2_OFFSET + ((h -16 - 0xA0) * 94 + (l -1 - 0xA0)) *
2;//GBK2偏移+区位偏移+区内码数偏移为该GBK字符对应的unicode编码位置. h =
ULE[seek]; l = ULE[seek + 1]; } else if (h &gt;= 0x81 &amp;&amp; h &lt;= 0xA0 &amp;&amp; l
&gt;= 0x40 &amp;&amp; l &lt;= 0xFE) { //GBK/3的编码范围 seek = GBK3_OFFSET + ((h -
0x81) * 190 + (l - 0x40) - (l &gt; 0x7F ? 1 : 0)) *
2;//GBK3偏移+区位偏移+区内码数偏移因为低位字节0x7F处不编码,所以大于0x7F要-1已更正位置.
190=0xFE - 0x40+1-1 低字节 0x0-0x39 与 0x7F,0xFF 不放  总共空出66个字节
h = ULE[seek]; l = ULE[seek + 1]; } else if (h &gt;= 0xAA &amp;&amp; h &lt;= 0xFE &amp;&amp;
l &gt;= 0x40 &amp;&amp; l &lt;= 0xA0) { //GBK/4的编码范围 seek = GBK4_OFFSET + ((h
- 0xAA) * 96 + (l - 0x40) - (l &gt; 0x7F ? 1 : 0)) *
2;//除了低位字符范围不同外,GBK4与GBK3大致相同 h = ULE[seek]; l =
ULE[seek + 1]; } //后来再添加的对GBK/1、GBK/2也就是GBK符号的支持. else
if (h &gt;= 0xA1 &amp;&amp; h &lt;= 0xA9 &amp;&amp; l &gt;= 0xA1 &amp;&amp; l &lt;= 0xFE) { seek =
GBK1_OFFSET + ((h - 0xA1) * 94 + (l - 0xA1)) * 2; h = ULE[seek]; l =
ULE[seek + 1]; } else if (h &gt;= 0xA8 &amp;&amp; h &lt;= 0xA9 &amp;&amp; l &gt;= 0x40 &amp;&amp; l
&lt;= 0xA0) { seek = GBK5_OFFSET + ((h - 0xA8) * 96 + (l - 0x40)- (l &gt;
0x7F ? 1 : 0)) * 2; h = ULE[seek]; l = ULE[seek + 1]; } } dest[i] = h;
dest[i + 1] = l; } //wchar 宽字符字符串的结束标记 dest[i] = &#39;&#39;; dest[i +
1] = &#39;&#39;; return i; } [/cce_c]</p>

<p>基于这个函数我实现了一个命令行程序<a href="#add2">gbktoule</a>，来将GBK编码的文件转换为UTF-16
LE 编码的文件。当然这个程序主要是用来测试的，不支持批量转换。</p>

<p>使用时，可以在控制台键入 gbktoule file1 file2
来将GBK文件file1的字符转换到UTF-16的文件file2中。</p>

<p>如 键入gbktoule gbkt.txt ule.txt。结果如下图所示：</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/06/result.jpg"><img src="http://dourok.info/wp-content/uploads/2010/06/result.jpg" alt="" title="result"></a>
It work!</p>

<p>程序下载<a href="#add2">点此</a>，其实符号索引是后来才生成。以便能够完整的转换GBK文档，但是GBK/4缺少的那101个字符还是让我觉得很诡异。<a href="#add3">可在附录找到全部GBK符号</a>。</p>

<h2 id="toc_4">参考阅读</h2>

<hr>

<ol>
<li> <a href="http://www.blogjava.net/zhenandaci/archive/2008/12/24/248041.html">Java
中的字符集编码入门（二）编码字符集与字符集编码的区别</a></li>
<li> <a href="http://www.blogjava.net/zhenandaci/archive/2008/12/24/248056.html">Java
中的字符集编码入门（三）GB2312，GBK与中文网页</a></li>
<li> <a href="http://kore-nordmann.de/blog/0082_charset_versus_encoding.html">Charset vs.
Encoding</a></li>
<li> <a href="http://zh.wikipedia.org/zh-cn/UCS-2">http://zh.wikipedia.org/zh-cn/UCS-2</a></li>
<li> <a href="http://blog.csdn.net/linuxsystem/archive/2009/06/03/4238089.aspx">字符集编码的文本文件头标识</a></li>
</ol>

<h2 id="toc_5">附录</h2>

<hr>

<ol>
<li> <a href="http://dourok.info/wp-content/uploads/2010/06/%E6%B1%89%E5%AD%97%E7%BC%96%E7%A0%81%E5%AF%B9%E7%85%A7%E8%A1%A8.xls">汉字编码对照表.xls</a></li>
<li> <a href="http://dourok.info/wp-content/uploads/2010/06/gbktoule.7z">源码、编译的可执行文件、及ULE表都在这里</a></li>
<li> GBK/1、GBK/5符号集合，当然在我网页上显示的是UTF-8编码的：</li>
</ol>
]]></description>
    </item>
    <item>
      <title>&#x5728;Netbeans&#x4E0A;&#x914D;&#x7F6E;Android&#x5F00;&#x53D1;&#x73AF;&#x5883;</title>
      <link>http://douo.ruhoh.com/2010/05/22/&#x5728;netbeans&#x4E0A;&#x914D;&#x7F6E;android&#x5F00;&#x53D1;&#x73AF;&#x5883;</link>
      <pubDate>Sat, 22 May 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[Android]]></category>
      <category><![CDATA[NBAdroid]]></category>
      <category><![CDATA[Netbeans]]></category>
      <description><![CDATA[<h1 id="toc_0">NBAndroid</h1>

<p>突发奇想要看看Android应用程序的开发，在网上找了些文章，发现android的开发环境大多是Eclipse+ADT，其实在netbeans上也是可以的。有个netbeabs插件叫NBAndroid，如果想在Netbeans上开发Android应用第一步就是要安装它，下面是NBAndroid的项目主页
<a href="http://kenai.com/projects/nbandroid">http://kenai.com/projects/nbandroid</a>。</p>

<h1 id="toc_1">安装与设置</h1>

<p>要安装NBAdroid，推荐的方法是在NetBeans中注册NBAdroid的更新中心（Update
Center），具体的步骤是：</p>

<ul>
<li>  打开工具(Tools )-&gt; 插件(Plugins) -&gt; 设置选项卡(Setting)</li>
<li>  点&quot;添加&quot;按钮将这个链接<a href="http://kenai.com/downloads/nbandroid/updatecenter/updates.xml" title="“更新链接已更改”">http://kenai.com/downloads/nbandroid/updatecenter/updates.xml</a>加进去，改个名字，确定。</li>
<li>  转到可用插件选项卡（Available
Plugins），找到Android插件，安装。出现验证警告点继续就可以了。</li>
</ul>

<p><a href="http://dourok.info/wp-content/uploads/2010/05/11.png"><img src="http://dourok.info/wp-content/uploads/2010/05/11.png" alt="" title="添加NBAndroid更新中心"></a>
添加NBAndroid更新中心</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/05/21.png"><img src="http://dourok.info/wp-content/uploads/2010/05/21.png" alt="" title="安装NBAndroid"></a>
安装NBAndroid</p>

<p>~~安装的步骤很简单，下载后将压缩包解压，然后把所有*.nbm的文件导入到netbeans便可。在netbeans中添加插件的方法也说一下，在&quot;菜单栏&quot;
-&gt; 工具 -&gt; 插件
在插件页面的&quot;已下载&quot;选项卡中可找到按钮&quot;添加插件&quot;，这个按钮便是可以用来添加nbm文件，如图1所示~~</p>

<p>接下来，指定Android SDK的位置，方法:&quot;菜单栏&quot; -&gt; 工具 -&gt;
选项，点击&quot;Android&quot;标签页。就可以看到类似下面的界面：
<a href="http://dourok.info/wp-content/uploads/2010/05/android_tab.png"><img src="http://dourok.info/wp-content/uploads/2010/05/android_tab.png" alt="" title="Xfce下的UI，2011-10-26截图"></a>
选择SDK的目录便可。</p>

<p>如果还没有Google Android SDK 的话要先下载Android
SDK，下载页在<a href="http://developer.android.com/sdk/index.html">这里</a>。官方的安装说明在<a href="http://developer.android.com/sdk/installing.html">这里(英文)</a>。（网站已被墙，推荐Google
搜索GappProxy）安装SDK的步骤要多一些，将下载后的压缩包解压到你要放的位置。运行SDK
Setup.exe应该会看到下面的界面，记得在win7下得用管理员权限运行。
<a href="http://dourok.info/wp-content/uploads/2010/05/nba3.png"><img src="http://dourok.info/wp-content/uploads/2010/05/nba3.png" alt="" title="nba3"></a>
图3</p>

<p>我这张图是更新后截的，没更新前只有Android SDK Tools,revision
6一个项。嗯，没错更新服务器也被墙了，可在setting了设置Http
代理服务器，因为GappProxy对Https的支持不好，下图那个选项也打上勾。</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/05/nba4.png"><img src="http://dourok.info/wp-content/uploads/2010/05/nba4.png" alt="" title="nba4"></a>
图4</p>

<p>更新好之后先别急着关掉，还要新建一个设备，选择Virtual
Devices，单击&quot;New&quot;，建好之后就可以重新回到NetBeans了。
<a href="http://dourok.info/wp-content/uploads/2010/05/nba5.png"><img src="http://dourok.info/wp-content/uploads/2010/05/nba5.png" alt="" title="nba5"></a>
图5</p>

<h1 id="toc_2">一个简单例子</h1>

<p>现在就可以创建项目了，见图8，我创建了一个AndroidHelloWorld的程序。默认平台已经选好了Android。还有最好也更改下包名。</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/05/nba8.png"><img src="http://dourok.info/wp-content/uploads/2010/05/nba8.png" alt="" title="nba8"></a>
图8</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/05/nba9.png"><img src="http://dourok.info/wp-content/uploads/2010/05/nba9.png" alt="" title="nba9"></a>
图9</p>

<p>项目初始化后，在MainActivity写了些测试代码如下：</p>

<pre><code>public void onCreate(Bundle icicle) {
setTitle(&quot;Hello Android&quot;);
super.onCreate(icicle);
setContentView(new AnalogClock(this));
}
</code></pre>

<p>现在就可以运行了，不过第一次运行要启动模拟器，相当的久，我差不多花了2分钟。而且，我第一次运行时程序没有载入，重新运行一次便可以了，因为不用启动模拟器第二次的运行快很多了，差不多10来秒。记得不要把模拟器关了，不然下次运行要重启模拟器，又要花很多时间。OK，我的第一个Android程序诞生鸟～</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/05/nba10.png"><img src="http://dourok.info/wp-content/uploads/2010/05/nba10.png" alt="" title="nba10"></a>
图10</p>

<p>还有一点就是NBAndroid的R.java不能实时自动生成，作者说过是在pre-build的时候生成，所以改动资源要习惯下按F11生成下项目才可以更新R.java。</p>

<p>哦，在项目属性还有一些可以设置的,比如选择模拟器。
<a href="http://dourok.info/wp-content/uploads/2010/05/nba11.png"><img src="http://dourok.info/wp-content/uploads/2010/05/nba11.png" alt="" title="nba11"></a>
图11</p>

<p>NBAndroid还支持Logcat，在窗口 -&gt; 输出 -&gt; ADB Log
可以打开Logcat窗口，不过只能够通过PID来过滤消息。我第一次开的时候还遇到Bug，假死了，重启NetBeans才能恢复。</p>

<p>总的来说，NBAndroid相比Eclipse上的ADT不足的地方很多（<a href="http://kenai.com/jira/browse/NBANDROID">Issue
Tracking</a>）。但相比Eclipse我又更喜欢Netbeans，所以到底用哪个IDE我也很纠结啊，不过最近一直是用Eclipse+ADT。NBAndroid的活跃度一直不高啊，很多Bug还没有修复，大家有心的话也去帮忙做点贡献吧。再发一下NBAndroid的项目地址<a href="http://kenai.com/projects/nbandroid">http://kenai.com/projects/nbandroid</a></p>

<h1 id="toc_3">查看源码（Attach Sources）</h1>

<p>Netbeans7.1终于有像Eclipse一样的Attach
Sources按钮，可以为android.jar附加源码了。虽然现在Netbeans 7.1
还处在测试阶段，但这个功能太重要了，迫不及待要去尝鲜，不过其实现在也足够稳定了。
<a href="http://dourok.info/wp-content/uploads/2010/05/attach_sources.png"><img src="http://dourok.info/wp-content/uploads/2010/05/attach_sources.png" alt="" title="attach_sources"></a>
先下载<a href="http://netbeans.org/community/releases/71/">Netbeans 7.1
beta</a>，然后在这里：<a href="http://adt-addons.googlecode.com/svn/trunk/source/com.android.ide.eclipse.source.update/plugins/">http://adt-addons.googlecode.com/svn/trunk/source/com.android.ide.eclipse.source.update/plugins/</a>
可以下载到打包好android各版本的源码，这是个jar档案需要解压出来。</p>

<p>另外，如果已安装有旧版本的netbeans，如7.0；需要注意一个问题，如<a href="http://netbeans.org/bugzilla/show_bug.cgi?id=200698">Bug
200698</a>里
<a href="mailto:jn0101@netbeans.org">jn0101@netbeans.org</a>
的描述。如果7.1和旧版的netbeans共用一个userdir可能会导致&quot;Attach
Sources&quot;按钮失效。我试过了确实会这样（linux下）。解决方法可以用<a href="http://wiki.netbeans.org/FaqAlternateUserdir">--userdir</a>给netbeans
7.1重新指定一个新userdir。不过，我是直接把.netbeans文件删掉，当然有先备份，然后，先配置好7.1的nbandroid和为项目的android.jar附加源码。再把备份的7.0拷回来。再把7.0的一些config拷给7.1，如：Editors和Keymaps等等。这样两个版本都可以正常工作了。
<a href="http://dourok.info/wp-content/uploads/2010/05/view_sources.png"><img src="http://dourok.info/wp-content/uploads/2010/05/view_sources.png" alt="" title="view_sources"></a></p>

<p>另外，意外的是在debug下还能工作的挺好的。
<a href="http://dourok.info/wp-content/uploads/2010/05/debug_view.png"><img src="http://dourok.info/wp-content/uploads/2010/05/debug_view.png" alt="" title="debug_view"></a></p>

<p><a href="http://kenai.com/jira/browse/NBANDROID-71">NBANDROID-71</a>基本可以算解决了。</p>

<h1 id="toc_4">一些可能有用的链接</h1>

<ol>
<li> <a href="http://developer.android.com/index.html">http://developer.android.com/index.html</a>
Android开发者主页，（墙）</li>
<li> <a href="http://androidappdocs.appspot.com/index.html">http://androidappdocs.appspot.com/index.html</a>没有被墙的开发者主页镜像</li>
<li> <a href="http://kenai.com/projects/nbandroid/pages/Home">http://kenai.com/projects/nbandroid/pages/Home</a>NBAndroid
Wiki</li>
</ol>
]]></description>
    </item>
    <item>
      <title>Java ME&#x901A;&#x7528;Logger&#x5305;&#x548C;&#x63A7;&#x5236;&#x53F0;</title>
      <link>http://douo.ruhoh.com/2010/05/15/&#x4E00;&#x4E2A;me&#x7684;log&#x5305;</link>
      <pubDate>Sat, 15 May 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[J2ME]]></category>
      <category><![CDATA[控制台]]></category>
      <description><![CDATA[<h2 id="toc_0">写在前面</h2>

<p>这是一个JavaMe的通用轻量级Logger系统和控制台程序，轻击<a href="#source">这里下载logger源码</a>，把它拉到你的项目里面去便可，要看下例子可以再轻击<a href="#example">这里</a>，还有<a href="#image">效果图在这</a>。</p>

<h2 id="toc_1">正文</h2>

<p>OK，正文了。我写Java
Me程序的时候很多次程序都是自我感觉良好在模拟器上跑起来也没问题，但一到真机就卡壳了。而且，在真机上跑又不像在电脑上开发一样有个控制台可以打印信息，有时要在真机上获得一系列错误信息那是相当麻烦。我曾经试过，调用InputStream的read(byte[]b,int
offset,int len)方法,居然可以最后一字节没被读出来；用new String(byte[] b ,
&quot;gb2312&quot;)来转换编码时，居然最后一个字节会丢失；还有用Connector来得到FileConnection时，如果将模式设置为“只读”直接程序崩溃，等等，好多。真是苦不堪言。恩，好吧，我承认我的机器是MTK系统滴。如果说ME程序员是IT民工中的搬运工，那么给MTK写ME程序的就是那枚扮演烈日下搬砖头的角色。所以说如果能有一个通用的控制台程序那就显得相当有用了，简直就是给ME程序员穿上滑轮鞋。</p>

<p>恰好，近日在看Fire2<a href="#fire2">^[1]^</a>时，里面刚好有个控制台，还有个日志系统。不过Fire2的控制台是基于它自己的UI控件的，不具备通用性，而且效率不行，打印信息一多严重拖慢系统程序。于是我自己用Canvas重新实现了控制台，并将Fire2中的日志系统提取出来做了点修改，跟我的控制台打包成一通用的日志系统logger包。</p>

<p>该日志系统有三个类一个接口组成。</p>

<ul>
<li>  <a href="#Log">Log</a></li>
<li>  <a href="#Logger">Logger</a></li>
<li>  <a href="#Console">Console</a></li>
<li>  <a href="#ConsolePainter">ConsolePainter</a></li>
</ul>

<p>Log是在Fire2里实现好的，有一系列的静态方法，包括添加和设置Logger，还有一系列记录消息的方法，Log里面的消息四个级别，分别为Info、Warn、ERROR、Debug。Log对象默认实现一个Logger，这个默认的Logger就是将消息打印在控制台(System.out.println())。</p>

<p>Logger 是一个接口只有一个方法</p>

<pre><code>public void println(String txt , int level);
</code></pre>

<p>要自己实现logger只需实现这个接口便可，比如说把Log消息写文件里面去，发送到服务器等等。</p>

<p>Console就是控制台，是一个独立的全屏的界面，继承了Canvas，实现了Logger接口。将Log记录下来的消息绘制到屏幕上。考虑到一个Midlet只需要一控制台，又必须给Console传入Display参数，所以便按单例模式实现Console。</p>

<p>得到Console实例的方法有两个，getConsole(Display) 和getConsole()</p>

<p>但要注意一点，第一次得到Console对象时，必须先使用getConsole(Display)，来为其传入Display对象。</p>

<p>显示Console只需调用showConsole(Displayable
screen)，传入的Displayable为调用显示控制台是的当前界面，从Console返回时会自动显示该界面。screen可以为null，当screen为null时Console无法返回。</p>

<p>一个使用控制台的例程可以像这样</p>

<pre><code>Display dis = Display.getDisplay(this);
Console console = Console.getConsole(dis);
Log.showDebug = true;
Log.addLogDestination(console);
Log.logInfo(&quot;console already&quot;);
Log.logDebug(Console.getMemoryInfo());
try{
//一些可能抛出异常的操作
}catch(Exception e){
Log.logError(&quot;ERROR&quot; , e);
console.showConsole(null);
}
</code></pre>

<p>Console还有个String getMemoryInfo()的方法，来得到当前虚拟机的内存信息。</p>

<p>ConsolePainter
是控制台画笔,负责把字符串绘制到屏幕上，ConsolePainter绘制字符串暂时还可以接受的，主要因为绘制的时候只有当前屏幕会显示到的字符串才会被绘制，具体留意下setTransition()。Console便是使用该类来绘制信息，同样的ConsolePainter实现了Logger接口，所以，也可直接在你的Canvas使用该画笔，来把Log消息直接绘制在Canvas上。</p>

<p>再来看下ConsolePainter的构造函数ConsolePainter(Canvas canvas, boolean
autoclean)，canvas为需要绘制画笔，ConsolePainter要获得Canvas的大小来布局字符串，绘制的时候需要在Canvas调用ConsolePainter.paint(Graphics
g)。很多时候消息太多会超过一屏，要在canvas实现滚屏那显的没必要。将autoclean设置为true，当消息超过一屏时，旧的消息会被移除，以保证新消息可以显示在屏幕中。</p>

<h2 id="toc_2">最后</h2>

<p>先来看下效果图先。这可是MTK真机上截的图哦。</p>

<h2 id="toc_3"><a href="http://dourok.info/wp-content/uploads/2010/05/console.png"><img src="http://dourok.info/wp-content/uploads/2010/05/console-e1274319179862-225x300.png" alt="" title="console"></a></h2>

<p>现在Console的问题应该是多多的，可定制性几乎没有。不过我目前用起来挺顺手的，以后还会一直用它，发现问题到时再来改吧。</p>

<p><a href="http://dourok.info/wp-content/uploads/2010/05/logger.zip">源码下载</a></p>

<p>[1].Fire2 是一款轻量级的J2ME
UI库，可自定义主题，同时支持渲染xHtml/CSS，提供有xHtml浏览器组件。<a href="http://sourceforge.net/projects/fire-j2me/">这里</a>是它的项目地址</p>

<h2 id="toc_4"><a href="http://dourok.info/wp-content/uploads/2010/05/console.png"><img src="http://dourok.info/wp-content/uploads/2010/05/console-e1274319179862-225x300.png" alt="" title="console"></a></h2>
]]></description>
    </item>
    <item>
      <title>&#x65B9;&#x683C;&#x56FE;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x63A2;&#x8BA8;</title>
      <link>http://douo.ruhoh.com/2010/05/11/&#x65B9;&#x683C;&#x56FE;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x63A2;&#x8BA8;-2</link>
      <pubDate>Tue, 11 May 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <description><![CDATA[]]></description>
    </item>
    <item>
      <title>Java&#x5F00;&#x53D1;&#x7684;&#x5C4F;&#x5E55;&#x62FE;&#x8272;&#x5668;</title>
      <link>http://douo.ruhoh.com/2010/05/11/&#x65B9;&#x683C;&#x56FE;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x63A2;&#x8BA8;</link>
      <pubDate>Tue, 11 May 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[]]></description>
    </item>
    <item>
      <title>PNG&#x683C;&#x5F0F;&#x4E0E;Me&#x4E2D;&#x7684;PNG</title>
      <link>http://douo.ruhoh.com/2010/05/11/png&#x683C;&#x5F0F;&#x4E0E;me&#x4E2D;&#x7684;png</link>
      <pubDate>Tue, 11 May 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[]]></description>
    </item>
    <item>
      <title>Google Cookies &#x5206;&#x6790;</title>
      <link>http://douo.ruhoh.com/2010/04/22/google-cookies-&#x5206;&#x6790;</link>
      <pubDate>Thu, 22 Apr 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[otaku]]></category>
      <category><![CDATA[cookie]]></category>
      <category><![CDATA[google]]></category>
      <description><![CDATA[<p>3:  set-cookie PREF= ID=8931acd2f4c3f634:            //全球唯一的标识符
16^16 NW=1:                    //不明 TM=1271669549:              
 //第一次你得到这个cookie的时间，精确到秒 LM=1271669549:              
 //最后一次你更改个人设置的时间，精确到秒 S=EORIeSpgb7i-vZqM;          
 // 猜测为校检码</p>

<p>expires=Wed, 18-Apr-2012 09:32:29 GMT;    //过期时间  day date time
GMT格林威治时间 path=/; domain=.google.com 4:  set-cookie NID=
33=Vyk2IVVq3qGM6wfvyrqcRd-QUL7ziBWapXikTvR0jdHewShmN09TSuqxRpgLP18McnMLL7PhWfE_VTCmX6LlqY5q-Nk-CGTkVzqQ41ZUx1oZfY5BIt8d1f7iJVFMfSih;  
     //NID 不明用途 expires=Tue, 19-Oct-2010 09:32:29 GMT; path=/;
domain=.google.com; HttpOnly</p>
]]></description>
    </item>
    <item>
      <title>Java Me&#x8BFB;&#x53D6;&#x672C;&#x5730;&#x6587;&#x4EF6;(JSR 75)</title>
      <link>http://douo.ruhoh.com/2010/04/22/java-me&#x8BFB;&#x53D6;&#x672C;&#x5730;&#x6587;&#x4EF6;jsr-75</link>
      <pubDate>Thu, 22 Apr 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[FileConnection]]></category>
      <category><![CDATA[J2ME]]></category>
      <category><![CDATA[J2ME文件系统]]></category>
      <category><![CDATA[JSR 75]]></category>
      <description><![CDATA[<h3 id="toc_0">FCOP (File Connection optional package) JSR 75</h3>

<p>一个file协议URL的例子 file:///xxxx.txt
为什么有3个斜线(/)呢?前两个斜线的作用是将file协议与文件路径分开.第2跟第3斜线之间的区域保留给要操作的对象的主机名使用;在前面的示例中,因为主机名就是本地主机,所以省略为空,也可以是file://localhost/xxxx.txt</p>

<h3 id="toc_1">使用FCOP时,一般的操作顺序.</h3>

<ol>
<li> 判断运行应用程序的设备上是否有FCOP。
System.getProperty(&quot;microedition.io.file.FileConnection.version&quot;);</li>
<li> 从Connector类得到FileConnection实例。
(FileConnection)Connector.open(&quot;file:////xxxx.txt&quot;,Connector.READ);</li>
<li> 如果有必要，就创建文件。 create 创建文件 mkdir 创建目录</li>
<li> 打开文件进行读写操作，分别得到输入或输出流。
openInputStream() openDataInputStream()
openOutputStream() openDataOutputStream()</li>
<li> 使用得到的流执行输入和输出。</li>
<li> 关闭流。</li>
<li> 关闭FileConnection. close()</li>
</ol>

<h3 id="toc_2">wtk模拟器的文件系统</h3>

<p>这里要说明一点，就是就是wtk模拟器的文件系统(FilesSystem)。我们在DefaultColorDevice上调用FileSystemRegistry.listRoots();一般都只会等到一个root1/文件夹。是模拟器的文件系统是绑定在本地目录的。运行模拟器时，NetBeans上的控制台，EclipseME也有，会打印出
Running with storage root C:2mewtk.5.2.DefaultColorPhone162
实际在这个目录下有个filesystem文件。打开就会发现root1
文件夹了。如果不想每次运行都生成一个新的文件夹，可删除
C:2mewtk.5.2 in.use 文件。 关于这个官方有这样一个描述：</p>

<blockquote>
<p><strong>Local Files and Personal Information</strong> The J2ME Wireless Toolkit
supports JSR 75, the PDA Optional Packages for the J2ME Platform,
which also includes two independent APIs:</p>

<ul>
<li>  The FileConnection API gives MIDlets access to a local file system
on the device.</li>
<li>  The Personal Information Management (PIM) optional package
includes APIs for manipulating contact lists, calendars, and to-do
lists.</li>
</ul>

<p>A real device may have a local file system which can be accessed using
the FileConnection API. In the J2ME Wireless Toolkit emulator, a
simulated file system is maintained as a directory on your hard disk.
The files your application can access using FileConnection are stored
in subdirectories of &lt;toolkit&gt;&lt;<em>skin</em>&gt;., where &lt;<em>toolkit</em>&gt; is
the installation directory of the J2ME Wireless Toolkit and &lt;<em>skin</em>&gt;
is the name of the emulator skin. For example,
the DefaultColorPhone emulator skin comes with a root directory
installed called root1, which contains a file called Readme. The
file&#39;s full path is &lt;<em>toolkit</em>&gt;1. You can manage the root
directories that are available by choosing <strong>MIDlet &gt; External
events</strong> from the emulator window&#39;s menu. You&#39;ll see a small utility
window for adding and removing roots. These actions will also generate
events for a registered listener object.</p>
</blockquote>

<p>E文不好，不解释。</p>

<h3 id="toc_3">FileConection的一些方法</h3>

<ul>
<li>  canRead  可读属性</li>
<li>  canWrite 可写属性</li>
<li>  directorySize 返回目录占用的字节数，如果传递参数为true，则计算上子目录
fileSize 返回文件占用的字节数</li>
<li>  getName 返回文件的名称</li>
<li>  getPath 返回文件所在的目录，<a href="file:///%5Cabc">file:///a/b/c</a> 则返回
/a/b/ ，记住不包括file:// 协议名称</li>
<li>  getURL 返回路径和文件名称，包括file://</li>
<li>  isDirectory 是否是目录</li>
<li>  isHidden 是否可见</li>
<li>  isOpen  如果FileConnection 已打开，返回true</li>
<li>  设置文件属性的方法 setHidden setReadable setWritable</li>
<li>  truncate 将文件截断为指定长度</li>
</ul>

<h3 id="toc_4">删除文件或目录</h3>

<p>delete方法，此方法会立即删除指定的文件或目录，并关闭所有与之关联的流。FileConnection
仍然为打开状态。</p>

<h3 id="toc_5">枚举目录内容</h3>

<p>list方法；该返回目录内容的枚举类型(Enumeration)。List方法，还可以接受参数，包括通配字符串跟是否包含Hidden文件的boolean参数。
请注意：如果想要操作Enumeration返回的文件或目录，可以不需要重建FileConnection。向SetFileConnection()方法传入Enumeration中的字符串。就会重设FileConnection，使其指向新的目录或文件。</p>

<h3 id="toc_6">文件系统监听器</h3>

<p>FileSystemRegistry
有addFileSystemListener方法。可通过向这个方法传递一个FileSystemListener接口的实例，来监听文件系统。
FileSystemListener只有一个 rootChanged(int state String rootname)方法
还有两个常量 ROOT_ADDED 、 ROOT_REMOVED 表示移除还是添加文件。
如上文的引用所说，wtk模拟器可以通过<strong>MIDlet &gt; External
events</strong><strong>的</strong><strong>File Connection</strong>来触发监听器。</p>

<h3 id="toc_7">结束之前</h3>

<p>用wtk
的模拟器默认读写文件的权限是每次询问，测试程序的时候觉得很烦的话，可以用ktoolbar来修改。选项在Edit&gt;&gt;preference&gt;&gt;Security将Security
Domain修改为maximum便可。ktoolbar在 wtk的安装目录/bin/ktoolbar.exe</p>

<p>还有注意一点，如果用户不允许应用程序访问文件系统。访问文件的方法会抛出SecurityException。</p>

<h3 id="toc_8">参考文献</h3>

<p>RayRischpaer 著 杨越 等译 2009 人民出版社 Java ME基础教程</p>
]]></description>
    </item>
    <item>
      <title>Hello world&#xFF01;</title>
      <link>http://douo.ruhoh.com/2010/04/20/hello-world</link>
      <pubDate>Tue, 20 Apr 2010 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p>欢迎使用 WordPress
。这是系统自动生成的演示文章。编辑或者删除它，开始您的博客！</p>

<p>代码高亮测试:<a href="http://wordpress.org/extend/plugins/codecolorer/installation/">codecolorer</a></p>

<p><code>System.out.println(WordReader.getHoleWord(&quot;adjustable&quot;)); System.out.println(WordReader.getHoleWord(&quot;abyss&quot;)); System.out.println(WordReader.getHoleWord(&quot;aback&quot;)); f = new Form(&quot;test&quot;); tf = new TextField(&quot;查询&quot;, &quot;&quot;, 10, TextField.ANY); st = new StringItem(&quot;result&quot;, &quot;&quot;); f.addCommand(ok); f.setCommandListener(this);</code>{lang=&quot;java&quot;}</p>
]]></description>
    </item>
    <item>
      <title>&#x60CA;&#x53F9;!&#x7B2C;&#x4E00;&#x4EBA;&#x79F0;&#x4FC4;&#x7F57;&#x65AF;&#x65B9;&#x5757;!?</title>
      <link>http://douo.ruhoh.com/2010/01/27/&#x60CA;&#x53F9;&#x7B2C;&#x4E00;&#x4EBA;&#x79F0;&#x4FC4;&#x7F57;&#x65AF;&#x65B9;&#x5757;</link>
      <pubDate>Wed, 27 Jan 2010 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[otaku]]></category>
      <description><![CDATA[<p><img src="http://www.dourok.info/wp-content/uploads/2010/01/best-record.JPG" alt="" title="Best-Record"></p>

<p>经典的俄罗斯方块也有第一人称玩法，很难想象吧。<a href="http://www.firstpersontetris.com/">第一人称俄罗斯方块（First-Person
Tetris）</a>是一款在线的Flash游戏。本身是一款非常传统，应该说怀旧的俄罗斯方块。所谓第一人称，实际上就是让视角跟随着方块运动，这也让游戏有了预防颈椎病的功效（瞎说的~）。像第一人称贪吃蛇、第一人称吃豆人也是可行的吧！俄罗斯方块加上第一人称相应的难度应该有所增加吧，至少第一次玩会有影响。像我这种俄罗斯方块苦手（我的最好成绩：上图分数…），很难作判断。另外，三首Midi都很动听，注意听听看。很好奇游戏长什么样子吧？链接就在上面还没点吗。</p>

<p>如果嫌挑战不够，或者对颈椎病的效果不好，那别忘了点上NIGHT
MODE。很有小时候背着父母半夜起来玩红白机的味道，不过请注意，这是一级头晕警告。</p>
]]></description>
    </item>
    <item>
      <title>&#x56DE;&#x5BB6;&#x672D;&#x8BB0;&#x4E8C;:&#x7F51;&#x7AD9;&#x88AB;&#x5899;</title>
      <link>http://douo.ruhoh.com/2010/01/25/&#x56DE;&#x5BB6;&#x672D;&#x8BB0;&#x4E8C;&#x7F51;&#x7AD9;&#x88AB;&#x5899;</link>
      <pubDate>Mon, 25 Jan 2010 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p><a href="http://www.dourok.info/wp-content/uploads/2010/01/1248583217836.jpg"><img src="http://www.dourok.info/wp-content/uploads/2010/01/1248583217836-300x206.jpg" alt="" title="1248583217836"></a></p>

<p>中午起床，有点心神不宁。点开一个网站…突然一个熟悉的页面出现在不应该出现的域名下面：</p>

<p><img src="http://www.dourok.info/wp-content/uploads/2010/01/wtf1.jpg" alt="" title="wtf"></p>

<p>天啊，这可是我的网站啊。damn！一开始我以为是主机商出了问题，于是我打开那些跟我用同一个主机的朋友的站点，一切正常。奇怪？难道…
二话不说立刻戴Tor，再点开我的网站。哈，蓝白主题的wordpress主页毅然呈现在眼前，网站可以访问。疑惑之余，决定再确认一下。
<a href="http://www.dourok.info/wp-content/uploads/2010/01/tracert_result_s1.jpg"><img src="http://www.dourok.info/wp-content/uploads/2010/01/tracert_result_s1.jpg" alt="" title="tracert_result_s"></a></p>

<p>果然，伟大的<strong>202.97.33.\</strong>*出现了。宛然一面最强之盾，一切针对它的攻击终将化为乌有。可点击<a href="http://www.williamlong.info/archives/1196.html">这里–月光博客</a>参考一下。</p>

<p>可疑问随之而来，是不是我自己站点的问题造成的？可像我这种日IP不上10的站点，怎么能有这么大的荣幸。而且十之七八的ip是从wordpress.org.cn上过来（我发了一张介绍贴），而非搜索引擎。如果说是我自己站点的问题,<strong>那么wordpress.org.cn也会变得很可疑。</strong>其次我自问自己文章的内容应该没问题，和谐典范啊。确实我在最近一篇<a href="http://www.dourok.info/2010/01/%e8%af%b7%e5%85%b3%e6%b3%a8%e5%b8%ae%e5%8a%a9%e4%b9%a1%e6%9d%91%e5%bb%ba%e5%9b%be%e4%b9%a6%e9%a6%86%e4%bd%a0%e7%9a%841%e7%a5%a8100/">关于慈善的文章</a>出现了<strong>关键字，</strong>不过如果是因为这种性质的文章而被墙，那…….也只能怪自己的脸长的不好了。</p>

<p>幸好我用的是免费空间，如果是自己买的空间那真不知向谁哭去。</p>

<p>忽然想起那首歌：</p>

<blockquote>
<p>娃哈哈 我们的祖国是花园 花园里花朵真鲜艳 和暖的阳光照耀着我们
每个人脸上都笑开颜 娃哈哈娃哈哈 每个人脸上都笑开颜 大姐姐你呀快快来
小弟弟你也莫躲开 手拉着手儿唱起那歌儿 我们的生活多愉快 娃哈哈娃哈哈
我们的生活多愉快 ….</p>
</blockquote>

<p>网站已于2010-01-13 00:18
通过换空间恢复。具体被墙原因仍不清楚，也不会清楚D。</p>
]]></description>
    </item>
    <item>
      <title>&#x8BF7;&#x5173;&#x6CE8;!&#x5E2E;&#x52A9;&#x4E61;&#x6751;&#x5EFA;&#x56FE;&#x4E66;&#x9986;&#x4F60;&#x7684;1&#x7968;=100$</title>
      <link>http://douo.ruhoh.com/2010/01/22/&#x8BF7;&#x5173;&#x6CE8;&#x5E2E;&#x52A9;&#x4E61;&#x6751;&#x5EFA;&#x56FE;&#x4E66;&#x9986;&#x4F60;&#x7684;1&#x7968;100</link>
      <pubDate>Fri, 22 Jan 2010 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p> </p>

<blockquote>
<p>爱心传递慈善基金会（Pass Love Charity
Foundation）是中国留学生杜可名和玄伟剑于2006年在美国密西根州正式注册的501（C）（3）非营利性公益组织，获得美国IRS（国税局）公共慈善基金会的认证和免税号。</p>

<p>2008年开始致力于为中国贫困地区创建优质的蒲公英乡村图书馆，以此为载体，使乡村儿童受到公平、适合、人性化的教育。</p>

<p>通过他们的活动，已经在中国建立了10所乡村图书馆。</p>
</blockquote>

<p><a href="http://www.passlove.org/">PassLove.org</a>就是基金会的网站，最近他们参加了Facebook上一个慈善投票活动Chase
Community
Challenge，主办方是美国的大银行Chase，让大家投票给自己支持的美国注册的慈善组织。第1名将获<strong>100万美元</strong>的捐款，详情点击：</p>

<p><a href="http://www.passlove.org/bbs/read.php?tid=1852">http://www.passlove.org/bbs/read.php?tid=1852</a></p>

<p>慈善之余，又有翻(^_^)墙方法提供，请一定要关注！</p>
]]></description>
    </item>
    <item>
      <title>Passage,&#x6D53;&#x7F29;&#x7684;&#x4EBA;&#x751F;</title>
      <link>http://douo.ruhoh.com/2010/01/21/passage&#x6D53;&#x7F29;&#x7684;&#x4EBA;&#x751F;</link>
      <pubDate>Thu, 21 Jan 2010 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[otaku]]></category>
      <description><![CDATA[<p><img src="http://www.dourok.info/wp-content/uploads/2010/01/passage.png" alt="Passage截图" title="Passage"></p>

<p>整理硬盘的时候，在硬盘的角落又瞧见这款游戏Passage，忍不住重玩一遍，我承认确实没有当初玩的时候那么有感觉，不过还是免不了黯然神伤。</p>

<p>Passage，作者<a href="http://hcsoftware.sourceforge.net/jason-rohrer/" title="点击访问Jason主页">Jason
Rohrer</a>。我去年在<a href="http://www.indiegm.com/game/passsage">独立游戏杂志</a>上发现它的介绍。下载下来一玩，短短五分钟的人生旅程，从一开始的不知所玩，再到慢慢明白作者的意图，正准备感慨作者的创造力时，游戏突然给我震撼一下，然后就Game
Over，五分钟到了。</p>

<p>至今我还记得当时的感受。作者所描述的与我的人生观多么吻合，无论生活的过程怎么丰富多彩；是为什么所驱动，去追求什么；或者受尽欲望的折磨。最后论及人生的目的，实际上除了受苦，人生就没有什么目的可言。所有幸福、所有满足都只是长时间的煎熬所换来的，却要那么短暂，甚至虚幻。而后又被新的欲望所霸占又继续煎熬。所以，当最终浓缩起来的人生就如这游戏的过程一样，单调且重复，却又不得不触动。唉，如今确实没有当时那么多感慨，再说多就成无病呻吟了。只是推荐大家去玩一下，见识下电子游戏的艺术性质。</p>

<p>今天才发现Passage可以拆开成Pass+age(流逝的岁月?)
。在毕业之际发现是多么应景呵！</p>

<p>同时,我又好奇的搜了下<a href="http://hcsoftware.sourceforge.net/jason-rohrer/" title="点击访问Jason主页">Jason
Rohrer</a>。在作者的一个访谈中看到他说了一句话：“I
make whatever games I want to
make”。确实，他做到了，让我们尊敬。我呢？路还很远…</p>

<p>唔，不说了。放上游戏地址：</p>

<p><a href="http://downloads.sourceforge.net/hcsoftware/Passage_v3_Windows.exe">http://downloads.sourceforge.net/hcsoftware/Passage_v3_Windows.exe</a></p>

<p>不喜欢全屏，安装后在settings文件夹里将fullscreen.ini的1改为0即可。</p>

<p>顺便说一下，这游戏的像素画风格很赞！音乐很能调动气氛。特别是随着距离所作的那些模糊或者说归纳处理，非常棒，意味深长啊。其实这游戏也有一些可以探索的东西，详情请见<a href="http://baike.baidu.com/view/1695529.htm">百度百科：Passage</a>。建议玩过后再看。</p>
]]></description>
    </item>
    <item>
      <title>&#x56DE;&#x5BB6;&#x672D;&#x8BB0;&#x4E00;:&#x6298;&#x817E;&#x529F;&#x653E;&#x5668;</title>
      <link>http://douo.ruhoh.com/2010/01/10/&#x56DE;&#x5BB6;&#x672D;&#x8BB0;&#x4E00;&#x6298;&#x817E;&#x529F;&#x653E;&#x5668;</link>
      <pubDate>Sun, 10 Jan 2010 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p>今天在中午醒来,草草喝了两碗粥.闲的蛋疼,看着客厅尘封多年的那套所谓的家庭影院忽然有股冲动,想把那个大音箱(大是相对而言)接到笔记本上.于是乎把功放搬出来,找了条湿毛巾擦干净灰尘,看了下后面的接口已经氧化了.还能不能用心里没底,立刻去搜刮到一条AV转3.5mm的线.插入功放,打开电源,连上笔记本,播放音乐.哈哈,有声音.不过”嘶嘶”的破音十分严重,勉强可以听到旋律.再清理了几次接口的氧化层后,声音终于恢复正常.干净而且熟悉的音色,恰好foobar2000上播放的是那套纯音CD,这套CD已陪伴我多年.最近才刚吧它转录到电脑上.在那首萨克斯演奏的In
a sentimental
mood的衬托下,整种氛围仿佛回到了10年前还没有电脑的时候.那时候总要放上音乐才肯安心学习.唉</p>

<p>本以为把功放和音箱拉到房间里就一切OK,不用折腾了.傍晚回到房间里,准备放歌.没想到,它竟然给我罢工了.没了声音,安静下来可以听到音箱里微弱的电流声.问题应该出在功放那,扭动下功放后面的输出线,音箱都有反应,确实是功放的问题.一开始以为是后面输入端口的问题,但无论怎么扭动还是没反应.不能不先放下,检查其他地方.在前面板的按钮上乱按着…突然有了声音,一闪而过又没了.问题在按钮!仔细检查一遍按钮,确认问题是在静音按钮与另外一颗切换输入源的按钮.我紧按静音键同时调大音量,慢慢的就有了声音.手一拿开,很快就没了声音.几乎可以确认是按钮接触不良.我按住静音键,保持有声音,同时回头找一下胶带.一不留神,按住按钮的那手指松开了,可奇怪的是声音并没有停止,而且唱的很欢快.我以为它奇迹般好了.然后手一拿开很快又没了声音…这就让我百思不得其解了.经过我做多几次试验后,基本上总结出这样雷人的规律:必须先用手按一下那两按钮,然后再用手不停抚摸功放器的那排按钮,它才肯发声.莫非功放修炼多年已成精了,但也没怎么快吧.我继续百思不得其解:温度?No.静电?No.光线?aha,光线!我立刻拿了本小本子挡在我手的位置,然后把手拿开.太神奇了,音乐没有停.我在仔细观察一下,看出来一些端倪.原来在功放的按钮旁边有个遥控器的接收器.重点在我伸手去抚摸的时候,也会把这个接收器给挡住,莫非是它搞的鬼?迅速找来黑胶布,把它挡住.双手拿开,啊哈一切正常,多么激动人心的时刻.看来罪魁祸首就是这个接收器了,可还有一个问题是:是什么给它发信号?我苦找一遍,除了背后的节能灯这唯一的光源外就没有任何可能的发射源了.只能是节能灯了.据我所知,家用电器的遥控器靠得是红外线来传播信号,节能灯是怎么能导致功放器误认为接受到遥控器的信号的?有没有内行的同学赐教一二?</p>

<p>曝光下这功放器,国产,JINHAO牌,型号JH9812.很不错,应该买了十多年.仍然能工作.本来还有一日本的均衡器,不知什么时候坏了.</p>
]]></description>
    </item>
    <item>
      <title>J2ME&#x5BF9;PNG&#x683C;&#x5F0F;&#x7684;&#x652F;&#x6301;&#x5F88;&#x8BE1;&#x5F02;&#x2013;&#x4E0D;&#x6821;&#x68C0;CRC?</title>
      <link>http://douo.ruhoh.com/2010/01/02/j2me&#x5BF9;png&#x683C;&#x5F0F;&#x7684;&#x652F;&#x6301;&#x5F88;&#x8BE1;&#x5F02;-&#x4E0D;&#x6821;&#x68C0;crc</link>
      <pubDate>Sat, 02 Jan 2010 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <category><![CDATA[J2ME]]></category>
      <description><![CDATA[<p>先看下面一张图片先</p>

<p><img src="http://www.dourok.info/wp-content/uploads/2010/01/D.png.png" alt="" title="D"></p>

<p>这是一张用PhotoShop生成的png图片.下面是它的16位数据
<img src="http://www.dourok.info/wp-content/uploads/2010/01/d1.jpg" alt="" title="D"></p>

<p>上图选择的地方,就是主要要改的调色板数据块(PLTE
chunk),关于PNG的规格在<a href="http://dev.gameres.com/Program/Visual/Other/PNGFormat.htm">http://dev.gameres.com/Program/Visual/Other/PNGFormat.htm</a>这里有说明,中文的.所谓调色板数据块就是存放PNG所用的颜色种类.</p>

<p>大家发现这张图片仅用了两种颜色,红和白.所以在PLTE(50 4C 54 45)后看到FF FF
FF FF 00 00三个字节为一种颜色.这里就是白和红.最后的四位(EB 5A E7
93)就是CRC码.如果将FF 00 00 改成00 FF
00.即把红色改成绿色.用ACDSee发现打不开图片.提示”原始数据格式无法识别”因为这里还需要重新生成CRC.</p>

<p>最下面是生成CRC码的算法,验证了很多次,应该没错的.虽然对CRC具体原理还不够理解.一开始我以为只需传FF
FF FF 00 FF
00这六个字节就可以.在这里失败了很多次.才反复验证了我的CRC算法.后来在网友写的图片淡入处理的程序中,才发现原来是还要包含前面8的八个字节.于是满怀欣喜的把这14个字节传进去,生成出1C
62 F5
FE.改到图片里面,用ACDSee打开可依旧提示”原始数据格式无法识别”.我就纳闷了.为什么网友写的程序可以正常显示图片呢?难道J2ME没有校检CRC码.于是我索性把程序中更新CRC的代码给注释掉.发现程序真的正常运行.很大打击因为花了很多时间在检查自己的代码上面.</p>

<p><img src="http://www.dourok.info/wp-content/uploads/2010/01/d2.jpg" alt="" title="D"></p>

<p>如上图. 虽然觉得很奇怪不过,想想也对.J2ME的程序本来就资源紧张.对于仅用来显示的图片不校检CRC可以省下一些时间.所以J2ME不校检CRC的做法是可以理解的.但我更奇怪的是很多程序里面都有更新CRC码.甚至都生成错.比如上图的程序.</p>

<p>startPos就是数据块数据的开始位置.-8就包含了长度和数据块类型码.这样生成的CRC码是错的.所以ACDSee提示错误.</p>

<p>后来我在<a href="http://www.w3.org/TR/PNG/#5Chunk-layout">http://www.w3.org/TR/PNG/#5Chunk-layout</a>才发现正确的CRC是用数据块类型码+数据块数据来生成的.这里是png格式的详细规范,有兴趣的童鞋可以看看.</p>

<p><img src="http://www.dourok.info/wp-content/uploads/2010/01/d3.jpg" alt="" title="D">
终于成功,改成绿色相应的CRC码是C6 E6 2E 0C</p>

<p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
28 29 30 31 32 33 34 35 36 37 38 39</p>

<p>//生成CRC码public int creatCRC(byte[] data ,int start, int length){</p>

<p>long crc=0xFFFFFFFFL;</p>

<p>for(int i=start;i&gt;8));</p>

<p>}</p>

<p>return (int)(crc^0xFFFFFFFF);</p>

<p>}</p>

<p>static long poly=0xEDB88320L;</p>

<p>//  建立CRC校验查找表</p>

<p>long crcTable[];</p>

<p>public void createTable(){</p>

<p>crcTable=new long[256];</p>

<p>long crc;</p>

<p>for(int i=0;i&lt;256;i++){</p>

<p>crc=(long)i;</p>

<p>for(int j=0;j&lt;8;j++){ if((crc0x1)==1) crc=poly^(crc&gt;&gt;1);</p>

<p>else crc&gt;&gt;=1;</p>

<p>} crcTable[i]=crc;</p>

<p>} }</p>

<p>——————————————狡猾的分割线——————————————————</p>

<p>这其实是篇一年多前的文章,发出来试试看<a href="http://kpumuk.info/projects/wordpress-plugins/codecolorer/">codecolorer</a>插件的效果,结果如上所示,还不错.</p>

<p>有好久没碰ME了,最近又开始拿起.关于J2ME对PNG的支持问题不是很清楚,据说是有些设备会校检CRC,有些CRC会被忽略.所以可以确定的仅仅是wtk上的模拟器是不校检CRC的,最新版本的wtk就难说了.</p>

<p>2010年01月01日,感慨一下…我已经好久没用ACDSee(从3.0用到8.0好像),Me也不用EclicpseME,改用Netbeans了.</p>
]]></description>
    </item>
    <item>
      <title>&#x6210;&#x5C31;&#x72C2;!&#x4E13;&#x5C5E;&#x6E38;&#x620F;Achievement Unlocked</title>
      <link>http://douo.ruhoh.com/2009/12/21/&#x6210;&#x5C31;&#x72C2;&#x4E13;&#x5C5E;&#x6E38;&#x620F;achievement-unlocked</link>
      <pubDate>Mon, 21 Dec 2009 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[otaku]]></category>
      <description><![CDATA[<p>如果你是成就偏执狂,如果魔兽世界的成就系统让你备受煎熬,那么来这里寻找解脱吧:<a href="http://armorgames.com/play/2893/achievement-unlocked">http://armorgames.com/play/2893/achievement-unlocked</a></p>

<p><img src="http://www.dourok.info/wp-content/uploads/2009/12/image001.png" alt="image001" title="image001"></p>

<p>像我这种英文苦手,感觉迟钝的家伙,满成就达成也只需</p>

<p><img src="http://www.dourok.info/wp-content/uploads/2009/12/image003.png" alt="Congras" title="2130/60 = ...."></p>

<p>但不要以为这样游戏就没难度,实际上这小小的场景,你需要一些耐心,好奇心,及细致的观察,才能体会到它带给你的乐趣.当然想满成就达成,不可或缺的还是:Too
Much Free Time…Orz</p>
]]></description>
    </item>
    <item>
      <title>&#x65F6;&#x4E0B;&#x6700;&#x597D;&#x804C;&#x4E1A;,&#x8F6F;&#x4EF6;&#x5DE5;&#x7A0B;&#x5E08;&#x6392;&#x540D;&#x7B2C;&#x4E94;</title>
      <link>http://douo.ruhoh.com/2009/12/17/&#x65F6;&#x4E0B;&#x6700;&#x597D;&#x804C;&#x4E1A;&#x8F6F;&#x4EF6;&#x5DE5;&#x7A0B;&#x5E08;&#x6392;&#x540D;&#x7B2C;&#x4E94;</link>
      <pubDate>Thu, 17 Dec 2009 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <category><![CDATA[翻译]]></category>
      <description><![CDATA[<p>这是一份发布在careercast上的报告，该报告主要根据工作压力、体力要求、雇佣前景、报酬及工作环境对200种工作从好到坏进行排名。其中排名第一的是数学家，而软件工程师排名第五，单从收入看，软件工程师排在第三位，而工作时间却是前十名中最多的每周50小时。报告还特意指出伐木工排名第200位，并给出一份倒数十大排名列表，企图说明用大脑创造财富比用双手创造财富有效的多。</p>

<p>显然，这份报告并不适应中国现状。 如有兴趣，移步到此：
当今十大最好工作：<a href="http://www.careercast.com/jobs/content/JobsRated_10BestJobs">http://www.careercast.com/jobs/content/JobsRated_10BestJobs</a>
当今十大最差工作：<a href="http://www.careercast.com/jobs/content/JobsRated_10WorstJobs">http://www.careercast.com/jobs/content/JobsRated_10WorstJobs</a></p>
]]></description>
    </item>
    <item>
      <title>&#x7537;&#x5B50;&#x56E0;&#x538B;&#x529B;&#x5927;&#x8DF3;&#x6865;&#x81EA;&#x6740; 9&#x5C81;&#x513F;&#x5B50;&#x8DEA;&#x6C42;&#x672A;&#x679C;</title>
      <link>http://douo.ruhoh.com/2009/12/10/&#x7537;&#x5B50;&#x56E0;&#x538B;&#x529B;&#x5927;&#x8DF3;&#x6865;&#x81EA;&#x6740;-9&#x5C81;&#x513F;&#x5B50;&#x8DEA;&#x6C42;&#x672A;&#x679C;</link>
      <pubDate>Thu, 10 Dec 2009 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p>一条悲剧的新闻，出现了网易难得的温情回帖…</p>

<p><a href="http://comment.news.163.com/news_shehui2_bbs/5PC29NSG00011229.html">http://comment.news.163.com/news_shehui2_bbs/5PC29NSG00011229.html</a></p>
]]></description>
    </item>
    <item>
      <title>&#x756B;&#x500B;&#x661F;&#x661F;&#xFF0C;&#x5BB9;&#x6613;&#x4E48;&#xFF01;</title>
      <link>http://douo.ruhoh.com/2009/11/21/&#x756B;&#x500B;&#x661F;&#x661F;&#xFF0C;&#x5BB9;&#x6613;&#x4E48;&#xFF01;</link>
      <pubDate>Sat, 21 Nov 2009 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[coder]]></category>
      <description><![CDATA[<p>今天在看《Filthy Rich
Clients》时看到一个画星星的程序片段，忽然就打算看自己能不能写出这个程序来。最初以为没有难度，到真正写起来又不知如何下手，无奈就在纸上画起了图。嗖嗖，半个小时过去了，基本上有了想法，先把星星尖角的点算出来再说。这个不就是圆内接正多边形的接点吗，我的想法很直接，就是先给一个初始点，然后作圆心到这个点的线段，然后把线绕圆点转按一定的角度，得到的新线段的点就是星星新的尖角。如此循环直到所有星星的点出来为止。说的不明白，上图先：</p>

<p><img src="http://www.dourok.info/wp-content/uploads/2009/11/star1.png" alt="星星" title="星星"></p>

<p> </p>

<p>OK，准备动手写，可线段这么旋转呢，既然说自己写就不能用<a href="http://zh.wikipedia.org/zh-cn/%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5">AffineTransform</a>了。无奈又在纸上嗖嗖画了起来，良久，终于发现我对三角函数的认识退步到a=sin(a)*c的水平。最后还是用我这个水平逼出一条等式出来，但我居然单纯地以为两条线都是在第一象限中，出来的图形自然乱七八糟。这时彷佛陷入绝境了，突然灵光一现记起有个东西叫<a href="http://zh.wikipedia.org/zh-cn/%E5%90%91%E9%87%8F">向量</a>，向量是什么东西我还是知道的，但那些运算法则都忘光光了。在我那堆书里翻了翻找到一本有几页讲向量的书，这是一部关于游戏人工智能的书，里面对向量的介绍仅仅是概念上的层面。不过点乘的介绍还是给我带来曙光。立刻上维基，里面对向量还真简洁，不过数量积、向量积的内容还是挺可观的，看了许久感觉没什么帮助，又转战三角函数页面，基本把各个恒等式跟定理都回忆了一遍。期间还手贱点了某网站，看了不少八卦新闻。回过神来才发现整个晚上的时间都快没了，可这条线段怎么旋转貌似还没找到解决办法？就在把尘封多年的十年高考拿出来之际，一个名词又在脑海中浮现——极坐标。马上上维基</p>

<p>一看心里暗爽。</p>

<p><img src="http://upload.wikimedia.org/math/e/a/7/ea7a6289be3041b5e39d73cd28d49cdf.png" alt="" title="图片来源：维基百科"></p>

<p><img src="http://upload.wikimedia.org/math/3/3/0/330403e92948365fda100bf469f66654.png" alt="" title="图片来源：维基百科"></p>

<p>我要的不就是这两条式子吗，如今怎么简洁的摆在眼前怎么能不兴奋。什么线段旋转啊都不用。直接就可以求出旋转后的点。这里再仔细说明一下一个圆内接的n角星星的尖角点就是这个圆的内接正n边形的接点，而圆的内接正多边形的内角是相等，且内接正n边形每条边对应的圆心角都等于360°，这个角度也就是星星中相邻的两个点旋转的角度，为了方便我也把它称为这个星星的圆心角。那么现在求星星的尖角点也就很简单了，给出一个圆，一个初始点，然后依次加上圆心角并代入公式，就可求出所有点了。但是就算把所有尖角点连起来也就是个正多边形，星星在哪里呢？其中我在第一次嗖嗖地画图时就发现，画一个完美的星星其实就是一个大圆的内接n边形和另一小一点的同心圆的内接n边形，两个内接n边形的角度偏转是它的边对应的圆心角的一半，然后依次把每个顶点连接起来就OK了。好像又是不明不白的表述，再上图：</p>

<p><img src="http://www.dourok.info/wp-content/uploads/2009/11/star2.png" alt="两个正多边形" title="两个正多边形"> <img src="http://www.dourok.info/wp-content/uploads/2009/11/star3.png" alt="BlueStar" title="BlueStar"></p>

<p><img src="http://www.dourok.info/wp-content/uploads/2009/11/star41.png" alt="star" title="star"></p>

<p>既然如此一个内接多边形已经出来了，离星星还会远吗？于是乎我就嗖嗖地编起了代码。</p>

<p>Java语言: <a href="http://fayaa.com/code/view/8207/">一個生成星星形狀的GeneralPath方法</a></p>

<p>/<em>\</em>* 一個生成星星形狀的GeneralPath的方法 * @param x0 星星外接圓的圓心
* @param y0 星星外接圓的圓心 * @param r 外接圓的半徑 * @param v
這個怎么這么說呢，決定星星的胖瘦吧，取值(0,1) * @param baseRadian
決定星星的角度，弧度來的 * @param branchescount 星星的角數 * @return <em>/
public static GeneralPath justStar(double x0,double y0,double r,double v,double baseRadian,intbranchescount){double d = 2</em>Math.PI/branchescount;
double [][] p = new double[branchescount*2][2];
for(int i = 0; i&lt;p.length ;i++){</p>

<p>p[i][0]=x0+r<em>Math.cos(i/2</em>d+baseRadian);p[i][1]=y0+r<em>Math.sin(i/2</em>d+baseRadian);
i++;
p[i][0]=x0+v<em>r</em>Math.cos((i/2+0.5)<em>d+baseRadian);p[i][1]=y0+v</em>r<em>Math.sin((i/2+0.5)</em>d+baseRadian);
} GeneralPath path = new GeneralPath(); path.moveTo(p[0][0], p[0][1]);</p>

<p>for(int i=1 ; i&lt;p.length ;i++){ path.lineTo(p[i][0], p[i][1]); }
path.closePath(); return path; }</p>

<p>到此总算告一段落了，整整一个晚上都在画星星，好像小学生。能聊以安慰的是总算复习了一下向量跟三角函数，这下应该能记住一段时间了。突然想起有次校内的ACM比赛有道水题，考的是用<a href="http://zh.wikipedia.org/wiki/%E6%B5%B7%E4%BC%A6%E5%85%AC%E5%BC%8F">海伦公式</a>求三角形面积，我居然把海伦公式给忘了，并为此推导许久，还推不出来。赛后我就暗下决心一定要把海伦公式记住，想不到现在又想不起来了。杯具啊，觉得再写一遍</p>

<p>p=（a+b+c）/2；</p>

<p>S = √(p(p-a)(p-b)(p-c))</p>

<p>一定要把它记住。</p>

<p>确实，才发觉有些东西要写出来才印象深刻，于是乎就有了这篇文章，不过不用又会很快忘记。</p>
]]></description>
    </item>
    <item>
      <title>Foobar2000&#x7684;win7&#x754C;&#x9762;&#x6574;&#x5408;&#x63D2;&#x4EF6;</title>
      <link>http://douo.ruhoh.com/2009/11/19/foobar2000&#x7684;win7&#x754C;&#x9762;&#x6574;&#x5408;&#x63D2;&#x4EF6;</link>
      <pubDate>Thu, 19 Nov 2009 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[otaku]]></category>
      <category><![CDATA[f]]></category>
      <category><![CDATA[foobar2000]]></category>
      <description><![CDATA[<p>剛剛在Foobar2000.org上獲知，foobar2000推出1.0beat版，乘機換掉一直在用的那個占用100M內存傻瓜整合版，因為這個整合版的功能很多我都不要用到。然而這個不帶插件的官方版沒有一個我覺得很實用的功能，具體見圖：</p>

<p><img src="http://wintense.com/wp-content/uploads/2009/02/w7shell.png" alt="win7shell插件功能預覽" title="w7shell">w7shell插件功能預覽</p>

<p>在win7中可以不用切換出界面來控制播放（當然快捷鍵也可以做到），直接在程序縮略圖中控制。Google一下，就找到了這插件，現給出介紹跟下載地址：</p>

<p><a href="http://wintense.com/plugins/foo_w7shell">http://wintense.com/plugins/foo_w7shell</a></p>

<p>下載地址：<a href="http://wintense.com/download/foo_w7shell_0.2.8.1.zip" title="Download">foo_w7shell
0.2.8.1</a></p>

<p>下載后，將foo_w7shell.dll解壓到Foobar2000目錄下的components文件夾中重啟程序即可。可以在任務欄圖標上顯示播放狀態（播放或暫停的小圖標），程序縮略圖上的圖片就是你的專輯圖片。在Foobar2000的Preferences-&gt;Display-&gt;Windows
7 Integration可以配置該插件，比如可以取消显示停止按钮，或者开启Aero
PeeK（安装这插件后Foobar2000默认取消了Aero
Peek）等等。w7shell在foobar20001.0 beat 2a 下工作正常。</p>
]]></description>
    </item>
    <item>
      <title>&#x54C8;&#x54C8;&#xFF0C;FB</title>
      <link>http://douo.ruhoh.com/2009/11/17/fb</link>
      <pubDate>Tue, 17 Nov 2009 00:00:00 -0600</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p>凌晨1点多，终于有个安静的时候了，今天特别冷，外面风很大，窗户都被摇得咯咯作响。我的思维也很乱。想趁现在整理清楚……</p>

<p>我现在是把笔记本搬到床上，躺在床上打字，原本以为这样会很暖和，没想到躺在床上打字保持那个姿势真的很难受，而且被子又不够长，盖住了笔记本又盖不了脚…感慨长得高还真不好。</p>

<p>今天可以说一整天都在上网看东西，没有去上课，也没有开展我的工作，更没做成我打算今天要做的事，我早已习惯这样了。不过看了一天网页，收获还是挺大的，最受感慨的还是看到了两例当代社会由“当权者”所造成的冤假错案，其实是关乎两个人的故事，一个叫范燕琼；另一个忘了名字了，我知道是关于上海拆迁的事。确实有记在这里的必要，我期待平反的一天。还一则是关于长江三峡造成旱灾的事，这种消息得不到传播，还是既得利益者的功劳，在壹報那里看到的文章说长江三峡产生的利益，不知道算不算诽谤呢？我曾经在Discover上看到一部关于三峡的记录片。具体内容记不清了，记得有提过三峡工程造成了人类的大量迁徙及三峡发电站的旅游资源，还有关于三峡的可能引发地震的讨论，基本上这记录片对三峡的态度还是贬多于褒的，当时我也很奇怪，一直以为三峡是一件有益民生的工程，因为我在家乡的很长一段时间内一个星期都要断俩次电，就一直很期待三峡能带来改变。所以我看完记录片，立刻上网搜索一下，还真发现一篇反驳这记录片的文章，什么内容就真的一点也记不清了，只知道当时我还是有点相信或者也造成了我对这纪录片的态度多了点怀疑，现在回想起来是不是就是那种五毛一篇的文章。嗯，对三峡的东西写的太多了。还有一件是现在还处于进行时中的事，就是冯正虎被拒于国们之外，现居于日本入境处前（日本境外）的一支长凳上面。哈，以后有能耐出国旅游还是要小心点，说不定随时回不了国。</p>

<p>另外一个大段就应该讲讲博客的事情。上一整天网，发现了许多优秀的博客，这些博客，也是我了解上一段那些信息的主要渠道，这也成为我想写自己博客的原因以及方向，自然，我没有打算也很怀疑自己有没有能力去写这些评论社会，时政，民生的文章，我所想要的是一个分享技术，以及通过记录学习笔记来帮助我学习的博客，同时，也用来分享心情，我希望可以很随意发一些文章，无论看起来是无知的、低B的、不和谐的、充满幻想的、甚至装B并且不成功的，都可以坦荡荡的发出来。正如现在整个博客还是空荡荡，我还能发这篇文章出来一样。当然，整个博客还是以游戏开发及设想为主，这是我目前最大的兴趣。其次，我还想把我的以前的诗整理后也发出来，今天访问了我三四年前的MSN空间，上面放着我当时写的诗，到如今还是零评论，是不是说明这些东西的价值了？不过，对我自己每每看了都会触动的，所以我很希望能够把高中写的诗都给整理出来，放在博客上，当然诗里面的感情只能属于我，但我是很希望能够通过此学到一些写诗方面的技巧，我一直很难把我写的诗称之为“诗”。</p>

<p>再谈一下twitter推特吧，虽然很想睡觉了。注册twitter
是在今年五月，当时注册了个screwyou的名称，然后发了句sleeping就没怎么搭理它了，到了今天才feel到twitter的强大，渐渐开始想融入推特社区了，不过推特还是挺费时间的，我有90来个follewing，一直看更新(有更新就看,看完又有更新了)，一直下去就费了大半天了，纯电脑用户用twitter还真是有点凄惨，还得学学怎么吃这快餐。</p>

<p>最后是不是应该展望未来了，临近毕业，未来这个词已经不是遥远的了，毕业打算，还是想继续进修，考个专插本，可现在的问题，我很难有规律地为专插本做准备。时间规划也是我现在的燃眉之急啊。</p>

<p>好了真的困了，末尾感慨一下自己的打字速度还真的慢，上面那堆字从一点多打到现在已经3点了，虽然中间跑去过隔壁宿舍偷点鸡蛋饼充饥，随便看他们玩魔兽RPG。</p>

<p>———————————————————————————————————-</p>

<p>这文章是在两天前写的，多得学校的断网制度写完时发不上来了。隔天又不想发了，觉得要改改，然后今天突然一时冲动什么也没改就发上来了。至于题目……刚乱起的，恩，很好orz!…</p>
]]></description>
    </item>
    <item>
      <title>Hello world&#xFF01;</title>
      <link>http://douo.ruhoh.com/2009/10/14/hello-world&#xFF01;</link>
      <pubDate>Wed, 14 Oct 2009 00:00:00 -0500</pubDate>
      <dc:creator>DouO</dc:creator>
      <category><![CDATA[life]]></category>
      <description><![CDATA[<p>欢迎使用 WordPress
。这是系统自动生成的演示文章。编辑或者删除它，开始您的博客！</p>

<p>你是不会被删的,哈哈</p>
]]></description>
    </item>
  </channel>
</rss>
